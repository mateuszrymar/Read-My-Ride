{"version":3,"sources":["modules/utilities.js","modules/home.js","../src/core/constants.ts","../src/core/lang.ts","../src/core/math.ts","../src/core/data/bounds.ts","../src/utils/extend.ts","../src/utils/functional.ts","../src/utils/utils.ts","../src/core/data/data.ts","../src/core/data/highLow.ts","../src/core/data/normalize.ts","../src/core/data/segments.ts","../src/core/data/serialize.ts","../src/svg/SvgList.ts","../src/svg/animation.ts","../src/svg/Svg.ts","../src/core/creation.ts","../src/core/optionsProvider.ts","../src/svg/SvgPath.ts","../src/interpolation/none.ts","../src/interpolation/simple.ts","../src/interpolation/step.ts","../src/interpolation/cardinal.ts","../src/interpolation/monotoneCubic.ts","../src/event/EventEmitter.ts","../src/charts/BaseChart.ts","../src/axes/Axis.ts","../src/axes/AutoScaleAxis.ts","../src/axes/FixedScaleAxis.ts","../src/axes/StepAxis.ts","../src/charts/LineChart/LineChart.ts","../src/charts/BarChart/BarChart.ts","../src/charts/PieChart/PieChart.ts","modules/info.js","../node_modules/@zip.js/zip.js/lib/core/streams/codecs/deflate.js","../node_modules/@zip.js/zip.js/lib/core/streams/codecs/inflate.js","../node_modules/@zip.js/zip.js/lib/core/constants.js","../node_modules/@zip.js/zip.js/lib/core/streams/stream-adapter.js","../node_modules/@zip.js/zip.js/lib/core/configuration.js","../node_modules/@zip.js/zip.js/lib/core/util/default-mime-type.js","../node_modules/@zip.js/zip.js/lib/core/util/mime-type.js","../node_modules/@zip.js/zip.js/lib/core/streams/codecs/crc32.js","../node_modules/@zip.js/zip.js/lib/core/streams/crc32-stream.js","../node_modules/@zip.js/zip.js/lib/core/util/encode-text.js","../node_modules/@zip.js/zip.js/lib/core/streams/codecs/sjcl.js","../node_modules/@zip.js/zip.js/lib/core/streams/common-crypto.js","../node_modules/@zip.js/zip.js/lib/core/streams/aes-crypto-stream.js","../node_modules/@zip.js/zip.js/lib/core/streams/zip-crypto-stream.js","../node_modules/@zip.js/zip.js/lib/core/streams/zip-entry-stream.js","../node_modules/@zip.js/zip.js/lib/core/streams/codec-stream.js","../node_modules/@zip.js/zip.js/lib/core/codec-worker.js","../node_modules/@zip.js/zip.js/lib/core/codec-pool.js","../node_modules/@zip.js/zip.js/lib/z-worker-inline.js","../node_modules/@zip.js/zip.js/lib/core/util/stream-codec-shim.js","../node_modules/@zip.js/zip.js/lib/core/io.js","../node_modules/@zip.js/zip.js/lib/core/util/cp437-decode.js","../node_modules/@zip.js/zip.js/lib/core/util/decode-text.js","../node_modules/@zip.js/zip.js/lib/core/zip-entry.js","../node_modules/@zip.js/zip.js/lib/core/zip-reader.js","../node_modules/@zip.js/zip.js/lib/core/zip-writer.js","../node_modules/process/browser.js","../node_modules/@zip.js/zip.js/lib/core/zip-fs-core.js","../node_modules/@zip.js/zip.js/lib/zip-fs.js","../node_modules/@zip.js/zip.js/index.js","modules/zipreader.js","app.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["UTIL","performanceList","storedStates","secondsToMinutesAndSeconds","sec","result","Number","hours","Math","floor","minutes","seconds","metersToKm","m","km","toFixed","sumArray","array","initialValue","sum","reduce","accumulator","currentValue","series","startNumber","endNumber","count","step","x","y","push","i","smoothArray","smoothingCount","rounding","smoothNumbers","length","start","parseInt","end","numbersToAverage","indicesToProcess","n","index","element","parseFloat","at","undefined","PerformanceStat","name","value","Date","now","performanceStat","startTimer","endTimer","stat","unit","TrackPoint","id","lat","lon","ele","time","dist","totDist","speed","interval","eleDiff","lat1","lon1","lat2","lon2","R","φ1","PI","φ2","Δφ","Δλ","a","sin","cos","c","atan2","sqrt","d","timeTemplate","date","match","UTC","distance","ele1","ele2","StateManager","State","domElements","current","domElement","innerHtml","style","createStateManager","console","log","Object","storeDom","stateName","elementsToStore","elementsArray","stateToStore","entry","entries","styleTemplate","currentElement","classList","innerHTML","currentOuterHtml","outerHTML","currentStyle","createNewState","newStateName","newElements","newStyles","newInnerHtml","baseState","baseIds","map","newElementsIds","currentId","newEntries","currentEntryId","indexOfNewElement","indexOf","newEntry","stateToCreate","checkCurrentState","currentState","setState","oldState","newState","findStateIndex","switchStates","Error","forEach","item","document","getElementsByClassName","statesArr","targetStateIndex","getStateManager","HOME","trackPointList","trackPointObjects","gpxProcessingTime","gpxProcessingStart","gpxProcessingEnd","noOfOptimizations","createStates","DOM","homeUpload","homeExamples","uploadError","uploadErrorHint","readGpxBtn","file_1","file_2","file_3","home","info","init","uploadText","addEventListener","uploadClicked","capture","uploadUndertext","undertextClicked","event","preventDefault","uploadInput","click","processDataFromUpload","data","processPromise","Promise","resolve","processGpx","then","localStorage","clear","dataToSave","JSON","stringify","setItem","calculateGpxProcessingTime","addStat","checkFileSize","fileSize","ceil","log2","APP","maxFileSize","pow","optimizeFile","contentArray","optimized","currentEntry","content","trackPointTemplate","numberOfOptimizations","newTrackpoints","optimizedTrackpoints","latTemplate","lonTemplate","eleTemplate","previousTrackpoint","currentTrackpoint","currentTrackpointRaw","timeToDate","speedBetweenPoints","elevationDifference","smoothSpeed","speeds","smoothSpeeds","numberSmoothing","evaluateTimer","namespaces","svg","xmlns","xhtml","xlink","ct","precision","escapingMap","ensureUnit","quantity","input","exec","alphaNumerate","String","fromCharCode","EPSILON","orderOfMagnitude","abs","LN10","projectLength","axisLength","bounds","range","roundWithPrecision","digits","globalPrecision","round","rho","num","gcd","p","q","f","x1","x2","divisor","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","getBounds","highLow","scaleMinSpace","onlyInteger","high","low","valueRange","oom","min","max","numberOfSteps","values","scaleUp","smallestFactor","optimizationCounter","safeIncrement","increment","newMin","newMax","extend","target","sources","source","prop","sourceProp","Array","noop","times","filler","from","_","previous","serialMap","callback","safeHasProperty","property","Reflect","has","isNumeric","isFinite","isFalseyButZero","getNumberOrUndefined","isArrayOfArrays","isArray","every","each","list","reverse","itemIndex","getMetaData","seriesData","meta","isDataHoleValue","isNaN","isArrayOfSeries","isMultiValue","getMultiValue","dimension","getHighLow","options","axisX","axisY","MAX_VALUE","findHigh","findLow","recursiveHighLow","sourceData","referenceValue","normalizeData","multi","distributed","labelCount","normalized","labels","slice","normalizeSeries","inputLabelCount","reverseData","normalizeMulti","normalizePrimitive","normalizeSingleSeries","normalizedSeries","splitIntoSegments","pathCoordinates","valueData","finalOptions","increasingX","fillHoles","segments","hole","serialize","serialized","keys","key","replaceAll","deserialize","NaN","parsedData","parse","e","SvgList","constructor","nodeList","svgElements","Svg","call","method","args","apply","attr","elem","root","getNode","foreignObject","text","empty","remove","addClass","removeClass","removeAllClasses","animate","easings","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","createAnimation","attribute","animationDefinition","createGuided","eventEmitter","easing","def","attributeProperties","animationEasing","timeout","begin","dur","calcMode","keySplines","join","keyTimes","fill","attributeName","setTimeout","_node","beginElement","err","to","animateNode","emit","params","attributes","className","parent","insertFirst","Element","createElementNS","firstChild","insertBefore","appendChild","ns","getAttributeNS","getAttribute","namespacedAttribute","split","setAttributeNS","setAttribute","parentNode","SVGElement","node","nodeName","parentElement","querySelector","selector","foundNode","querySelectorAll","foundNodes","contentNode","container","createElement","fnObj","t","createTextNode","removeChild","replace","newElement","replaceChild","append","classes","classNames","trim","names","concat","filter","pos","self","removedClasses","height","getBoundingClientRect","width","animations","guided","attributeAnimation","Easing","createSvg","normalizePadding","padding","top","right","bottom","left","createChartRect","hasAxis","Boolean","yAxisOffset","offset","xAxisOffset","yAxisPosition","position","xAxisPosition","normalizedPadding","chartPadding","chartRect","y1","y2","createGrid","axis","group","positionalData","units","counterUnits","gridElement","type","createGridBackground","gridGroup","gridBackground","createLabel","label","axisOffset","labelOffset","len","stepLength","stepCounterLength","textContent","labelElement","optionsProvider","responsiveOptions","currentOptions","mediaQueryListeners","updateCurrentOptions","mediaEvent","previousOptions","responsiveOption","mql","window","matchMedia","matches","removeMediaQueryListeners","removeEventListener","getCurrentOptions","elementDescriptions","l","defaultOptions","accuracy","command","pathElements","relative","pathElement","toLowerCase","toUpperCase","splice","forEachParam","cb","pathElementIndex","paramName","paramIndex","SvgPath","close","move","line","curve","arc","rx","ry","xAr","lAf","sf","path","chunks","pop","elements","chunk","shift","description","accuracyMultiplier","scale","translate","transform","transformFnc","transformed","clone","splitByCommand","paths","joinedPath","j","none","noneInterpolation","currX","currY","currData","simple","simpleInterpolation","prevX","prevY","prevData","postpone","stepInterpolation","cardinal","tension","cardinalInterpolation","segment","z","iLen","monotoneCubic","monotoneCubicInterpolation","xs","ys","ms","ds","dys","dxs","EventEmitter","listeners","Map","allListeners","Set","on","listener","add","set","get","off","delete","eventListeners","size","instances","WeakMap","BaseChart","query","resizeListener","update","initializeTimeoutId","initialize","prevInstance","detach","override","createChart","clearTimeout","plugins","plugin","axisUnits","dir","rectStart","rectEnd","rectOffset","Axis","ticks","gridOffset","createGridAndLabels","labelGroup","chartOptions","axisOptions","projectedValues","tick","projectValue","labelValues","labelInterpolationFnc","projectedValue","labelValue","labelLength","showGrid","grid","showLabel","AutoScaleAxis","axisUnit","finalValue","FixedScaleAxis","sort","b","StepAxis","_data","calc","stretch","_value","getSeriesOption","seriesOptions","showLine","showPoint","showArea","areaBase","lineSmooth","showGridBackground","fullWidth","chart","point","area","vertical","horizontal","LineChart","normalizedData","seriesGroup","seriesIndex","seriesElement","seriesName","seriesClassName","seriesMeta","pathData","valueIndex","smoothing","pathElementData","areaBaseProjected","pathSegment","solidPathSegments","firstElement","lastElement","areaPath","getSerialSums","prev","curr","seriesBarDistance","stackBars","stackMode","horizontalBars","distributeSeries","bar","BarChart","valueAxis","labelAxisTicks","labelAxis","zeroPoint","isAccumulateStackMode","isAccumulateRelativeStackMode","posStackedBarValues","negStackedBarValues","stackedBarValues","biPol","periodHalfLength","valueX","valueY","labelAxisValueIndex","projected","previousStack","positions","metaData","chartPie","chartDonut","slicePie","sliceDonut","startAngle","total","donut","donutWidth","labelPosition","labelDirection","ignoreEmptyValues","determineAnchorPosition","center","direction","toTheRight","PieChart","seriesGroups","labelsGroup","labelRadius","totalDataSum","hasSingleValInSeries","val","endAngle","overlappigStartAngle","rawValue","interpolatedValue","dx","dy","INFO","statList","eleGain","eleLoss","gpxPolyline","rideDistance","maxSpd","initMap","L","setView","setupMap","invalidateSize","fitBounds","createPolyline","latLngArray","polyline","color","addTo","addMapTiles","tileLayer","maxZoom","attribution","Statistic","gpxFileSize","movingTime","stopTime","stopSpeed","totalTime","totalDistance","calcMovingTime","point1","point2","point3","pointArray","currentSpeed","eleDiffArray","distArray","currentGradient","calculateStats","calcDist","calcTotalTime","avgSpeed","calcAvgSpeed","maxSpeed","calcMaxSpeed","elevationGain","calcElevationGain","elevationLoss","calcElevationLoss","avgGradient","maxGradient","calcMaxGradient","displayAllStats","prepareElevationGraph","fidelityPerc","graphId","targetDomElement","getElementById","samplePoints","xAxis","yAxis","currentDist","currentEle","displayLineChart","prepareSpeedGraph","prepareGradientsGraph","gradientsArray","intervalArray","isArrayValid","valuesToChart","prepareGradArray","reject","currentInterval","sortGradientsByTime","gradArray","intArray","boundaries","downhill","flat","mildUphill","downhillArray","flatArray","mildUphillArray","steepUphillArray","gradient","gradientBoundaries","displayPieChart","valueArray","joinedLabels","joinLabels","newLabel","data2","MAX_BITS","D_CODES","BL_CODES","LENGTH_CODES","LITERALS","L_CODES","HEAP_SIZE","END_BLOCK","MAX_BL_BITS","REP_3_6","REPZ_3_10","REPZ_11_138","Buf_size","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_DEFAULT_STRATEGY","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_BUF_ERROR","extractArray","_dist_code","Tree","that","gen_bitlen","s","tree","dyn_tree","stree","stat_desc","static_tree","extra","extra_bits","base","extra_base","max_length","h","bits","xbits","overflow","bl_count","heap","heap_max","max_code","opt_len","static_len","bi_reverse","code","res","gen_codes","next_code","build_tree","elems","heap_len","depth","pqdownheap","_length_code","base_length","base_dist","d_code","extra_lbits","extra_dbits","extra_blbits","bl_order","StaticTree","static_ltree2_first_part","static_ltree2_second_part","static_ltree","static_dtree_first_part","static_dtree_second_part","static_dtree","static_l_desc","static_d_desc","static_bl_desc","MAX_MEM_LEVEL","DEF_MEM_LEVEL","Config","good_length","max_lazy","nice_length","max_chain","func","STORED","FAST","SLOW","config_table","z_errmsg","NeedMore","BlockDone","FinishStarted","FinishDone","PRESET_DICT","INIT_STATE","BUSY_STATE","FINISH_STATE","Z_DEFLATED","STORED_BLOCK","STATIC_TREES","DYN_TREES","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","smaller","tn2","tm2","Deflate","strm","status","pending_buf_size","last_flush","w_size","w_bits","w_mask","win","window_size","head","ins_h","hash_size","hash_bits","hash_mask","hash_shift","block_start","match_length","prev_match","match_available","strstart","match_start","lookahead","prev_length","max_chain_length","max_lazy_match","level","strategy","good_match","nice_match","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","lit_bufsize","last_lit","last_eob_len","bi_buf","bi_valid","lm_init","init_block","tr_init","k","v","scan_tree","prevlen","curlen","nextlen","max_count","min_count","build_bl_tree","max_blindex","put_byte","pending_buf","pending","put_short","w","putShortMSB","send_bits","send_code","c2","send_tree","send_all_trees","lcodes","dcodes","blcodes","rank","bi_flush","_tr_align","_tr_tally","lc","out_length","in_length","dcode","dist_buf","lc_buf","compress_block","ltree","dtree","lx","bi_windup","copy_block","buf","header","subarray","_tr_stored_block","stored_len","eof","_tr_flush_block","opt_lenb","static_lenb","flush_block_only","flush_pending","fill_window","more","avail_in","read_buf","deflate_stored","flush","max_block_size","max_start","avail_out","longest_match","cur_match","chain_length","scan","best_len","limit","_nice_match","wmask","strend","scan_end1","scan_end","deflate_fast","hash_head","bflush","deflate_slow","max_insert","deflateReset","total_in","total_out","msg","pending_out","deflateInit","_level","_method","memLevel","_strategy","dstate","Uint8Array","Uint16Array","deflateEnd","deflateParams","deflate","deflateSetDictionary","_strm","dictionary","dictLength","level_flags","old_flush","bstate","next_out","next_in","ZStream","next_in_index","next_out_index","prototype","ret","ZipDeflate","bufsize","getMaximumCompressedSize","chunkSize","onprogress","lastIndex","bufferIndex","bufferSize","buffers","uncompressedSize","Z_MEM_ERROR","inflate_mask","MANY","fixed_bl","fixed_bd","fixed_tl","fixed_td","cplens","cplext","cpdist","cpdext","BMAX","InfTree","hn","r","u","huft_build","bindex","hp","g","mask","xp","initWorkArea","vsize","Int32Array","inflate_trees_bits","bb","tb","inflate_trees_dynamic","nl","nd","bl","bd","tl","td","inflate_trees_fixed","START","LEN","LENEXT","DIST","DISTEXT","COPY","LIT","WASH","END","BADCODE","InfCodes","mode","tree_index","need","lit","lbits","dbits","ltree_index","dtree_index","inflate_fast","tl_index","td_index","tp","tp_index","ml","md","tp_index_t_3","bitb","bitk","write","read","read_byte","proc","tindex","inflate_flush","free","border","TYPE","LENS","TABLE","BTREE","DTREE","CODES","DRY","DONELOCKS","BADBLOCKS","InfBlocks","table","blens","codes","last","hufts","check","inftree","reset","bl_","bd_","tl_","td_","set_dictionary","sync_point","METHOD","FLAG","DICT4","DICT3","DICT2","DICT1","DICT0","BLOCKS","DONE","BAD","mark","Inflate","was","marker","wbits","inflateReset","istate","blocks","inflateEnd","inflateInit","inflate","inflateSetDictionary","inflateSync","inflateSyncPoint","ZipInflate","nomoreinput","MAX_32_BITS","MAX_16_BITS","COMPRESSION_METHOD_DEFLATE","COMPRESSION_METHOD_STORE","COMPRESSION_METHOD_AES","LOCAL_FILE_HEADER_SIGNATURE","SPLIT_ZIP_FILE_SIGNATURE","DATA_DESCRIPTOR_RECORD_SIGNATURE","CENTRAL_FILE_HEADER_SIGNATURE","END_OF_CENTRAL_DIR_SIGNATURE","ZIP64_END_OF_CENTRAL_DIR_SIGNATURE","ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE","END_OF_CENTRAL_DIR_LENGTH","ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH","ZIP64_END_OF_CENTRAL_DIR_LENGTH","ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH","EXTRAFIELD_TYPE_ZIP64","EXTRAFIELD_TYPE_AES","EXTRAFIELD_TYPE_NTFS","EXTRAFIELD_TYPE_NTFS_TAG1","EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP","EXTRAFIELD_TYPE_UNICODE_PATH","EXTRAFIELD_TYPE_UNICODE_COMMENT","BITFLAG_ENCRYPTED","BITFLAG_LEVEL","BITFLAG_DATA_DESCRIPTOR","BITFLAG_LANG_ENCODING_FLAG","FILE_ATTR_MSDOS_DIR_MASK","VERSION_DEFLATE","VERSION_ZIP64","VERSION_AES","DIRECTORY_SIGNATURE","MAX_DATE","MIN_DATE","UNDEFINED_VALUE","UNDEFINED_TYPE","FUNCTION_TYPE","StreamAdapter","Codec","_format","codec","controller","enqueue","TransformStream","MINIMUM_CHUNK_SIZE","maxWorkers","navigator","hardwareConcurrency","_error","DEFAULT_CONFIGURATION","terminateWorkerTimeout","useWebWorkers","useCompressionStream","workerScripts","CompressionStreamNative","CompressionStream","DecompressionStreamNative","DecompressionStream","config","assign","getConfiguration","getChunkSize","configure","configuration","baseURL","setIfDefined","propertyName","propertyValue","mimeTypes","getMimeType","hasOwnProperty","subtype","indexMimeType","filename","getDefaultMimeType","Crc32","crc","Crc32Stream","crc32","dataView","DataView","buffer","setUint32","encodeText","TextEncoder","unescape","encodeURIComponent","charCodeAt","encode","bitArray","a1","a2","getPartial","_shiftRight","bitLength","clamp","partial","_end","carry","out","last2","shift2","bytes","fromBits","arr","byteLength","tmp","toBits","hash","sha1","blockSize","_init","_key","_h","_buffer","_length","utf8String","ol","Uint32Array","_block","words","_S","_f","cipher","aes","_tables","_precompute","sbox","decTable","keyLen","encKey","decKey","rcon","_crypt","encTable","sboxInv","th","xInv","x4","x8","tDec","tEnc","nInnerRounds","t0","t1","t2","t3","kIndex","b2","random","getRandomValues","typedArray","m_w","m_z","rcache","_r","ctrGladman","prf","iv","_prf","_initIv","_iv","calculate","word","b1","b3","counter","incWord","incCounter","encrypt","misc","importKey","password","hmacSha1","pbkdf2","salt","ui","arrayBuffer","ArrayBuffer","outLength","setInt32","hmac","Hash","_hash","exKey","_baseHash","bs","_resultHash","_updated","finalize","digest","GET_RANDOM_VALUES_SUPPORTED","crypto","ERR_INVALID_PASSWORD","ERR_INVALID_SIGNATURE","BLOCK_LENGTH","RAW_FORMAT","PBKDF2_ALGORITHM","HASH_ALGORITHM","HASH_FUNCTION","BASE_KEY_ALGORITHM","DERIVED_BITS_ALGORITHM","iterations","DERIVED_BITS_USAGE","SALT_LENGTH","KEY_LENGTH","SIGNATURE_LENGTH","COUNTER_DEFAULT_VALUE","CRYPTO_API_SUPPORTED","subtle","SUBTLE_API_SUPPORTED","codecBytes","Aes","CtrGladman","HmacSha1","IMPORT_KEY_SUPPORTED","DERIVE_BITS_SUPPORTED","deriveBits","AESDecryptionStream","signed","encryptionStrength","ready","resolveReady","strength","aesCrypto","createDecryptionKeys","output","ctr","chunkToDecrypt","originalSignature","decryptedChunkArray","encryptedChunk","decryptedChunk","signature","indexSignature","AESEncryptionStream","stream","preamble","createEncryptionKeys","encryptedChunkArray","paddingStart","paddingEnd","verifySignature","inputLength","expand","inputChunk","outputChunk","decrypt","createKeys","passwordVerificationKey","passwordVerification","encodedPassword","baseKey","derivedBits","compositeKey","authentication","format","algorithm","extractable","keyUsages","leftArray","rightArray","inputArray","HEADER_LENGTH","ZipCryptoDecryptionStream","zipCrypto","decryptedHeader","ZipCryptoEncryptionStream","getByte","updateKeys","crcKey0","crcKey2","byte","key0","key1","key2","getInt32","imul","getInt8","temp","number","COMPRESSION_FORMAT","DeflateStream","compressed","encrypted","crc32Stream","encryptionStream","readable","filterEmptyChunks","tee","pipeThrough","pipeThroughCommpressionStream","setReadable","getReader","getUint32","InflateStream","decryptionStream","streamSignature","dataViewSignature","defineProperty","CodecStreamNative","CodecStream","error","transformStream","MESSAGE_EVENT_TYPE","MESSAGE_START","MESSAGE_PULL","MESSAGE_DATA","MESSAGE_ACK_DATA","MESSAGE_CLOSE","CODEC_DEFLATE","CODEC_INFLATE","codecType","Stream","startsWith","WEB_WORKERS_SUPPORTED","Worker","CodecWorker","workerData","onTaskFinished","writable","streamOptions","transferStreams","scripts","signal","busy","ProgressWatcherStream","terminate","worker","interface","createWebWorkerInterface","createWorkerInterface","readableSource","onstart","onend","chunkOffset","callHandler","highWaterMark","handler","parameters","run","runWorker","getWebWorker","runWebWorker","codecStream","pipeTo","preventClose","preventAbort","resolveResult","rejectResult","reader","writer","watchClosedStream","closed","streamsTransferred","sendMessage","getWriter","resultValue","writableSource","resolveStreamClosed","WritableStream","releaseLock","abort","reason","classicWorkersSupported","transferStreamsSupported","url","workerOptions","scriptUrl","URL","onMessage","message","transferables","postMessage","messageId","stack","responseError","done","pool","pendingRequests","indexWorker","clearTerminateTimeout","terminateTimeout","streamCopy","find","terminateWorkers","createObjectURL","Blob","initShimAsyncCodec","library","registerDataHandler","createCodecClass","constructorOptions","codecAdapter","onData","pendingData","previousPendingData","hasOwn","getResponse","ERR_HTTP_STATUS","ERR_HTTP_RANGE","ERR_ITERATOR_COMPLETED_TOO_SOON","CONTENT_TYPE_TEXT_PLAIN","HTTP_HEADER_CONTENT_LENGTH","HTTP_HEADER_CONTENT_RANGE","HTTP_HEADER_ACCEPT_RANGES","HTTP_HEADER_RANGE","HTTP_HEADER_CONTENT_TYPE","HTTP_METHOD_HEAD","HTTP_METHOD_GET","HTTP_RANGE_UNIT","DEFAULT_CHUNK_SIZE","PROPERTY_NAME_WRITABLE","initialized","Reader","ReadableStream","pull","diskNumberStart","readUint8Array","Writer","writeUint8Array","Data64URIReader","dataURI","dataEnd","charAt","dataStart","dataArray","atob","substring","delta","indexByte","Data64URIWriter","contentType","indexArray","dataString","btoa","BlobReader","blob","offsetEnd","BlobWriter","headers","Response","TextReader","TextWriter","encoding","utf8","FileReader","onload","onerror","readAsText","FetchReader","createHtpReader","initHttpReader","sendFetchRequest","getFetchRequestData","readUint8ArrayHttpReader","XHRReader","sendXMLHttpRequest","getXMLHttpRequestData","httpReader","preventHeadRequest","useRangeHeader","forceRangeRequests","useXHR","sendRequest","getRequestData","isHttpFamily","getRangeHeaders","contentRangeHeader","splitHeader","headerValue","contentSize","getContentLength","response","getHeaders","Symbol","iterator","fromEntries","contentLength","fetch","statusText","request","XMLHttpRequest","getAllResponseHeaders","detail","open","setRequestHeader","responseType","send","HttpReader","HttpRangeReader","Uint8ArrayReader","Uint8ArrayWriter","initSize","previousArray","SplitDataReader","readers","lastDiskNumber","all","diskReader","diskNumber","currentDiskNumber","currentReaderOffset","currentReader","currentReaderSize","chunkLength","SplitDataWriter","writerGenerator","maxSize","zipWriter","diskOffset","availableSize","diskSourceWriter","diskWritable","diskWriter","next","initStream","writeChunk","closeDisk","protocol","initReader","initWriter","splitZipFile","Infinity","SplitZipReader","SplitZipWriter","CP437","VALID_CP437","decodeCP437","stringValue","indexCharacter","TextDecoder","decode","decodeText","PROPERTY_NAME_FILENAME","PROPERTY_NAME_RAW_FILENAME","PROPERTY_NAME_COMMENT","PROPERTY_NAME_RAW_COMMENT","PROPERTY_NAME_UNCOMPPRESSED_SIZE","PROPERTY_NAME_COMPPRESSED_SIZE","PROPERTY_NAME_OFFSET","PROPERTY_NAME_DISK_NUMBER_START","PROPERTY_NAME_LAST_MODIFICATION_DATE","PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE","PROPERTY_NAME_LAST_ACCESS_DATE","PROPERTY_NAME_RAW_LAST_ACCESS_DATE","PROPERTY_NAME_CREATION_DATE","PROPERTY_NAME_RAW_CREATION_DATE","PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE","PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE","PROPERTY_NAME_MS_DOS_COMPATIBLE","PROPERTY_NAME_ZIP64","PROPERTY_NAMES","Entry","ERR_BAD_FORMAT","ERR_EOCDR_NOT_FOUND","ERR_EOCDR_ZIP64_NOT_FOUND","ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND","ERR_CENTRAL_DIRECTORY_NOT_FOUND","ERR_LOCAL_FILE_HEADER_NOT_FOUND","ERR_EXTRAFIELD_ZIP64_NOT_FOUND","ERR_ENCRYPTED","ERR_UNSUPPORTED_ENCRYPTION","ERR_UNSUPPORTED_COMPRESSION","ERR_SPLIT_ZIP_FILE","CHARSET_UTF8","CHARSET_CP437","ZIP64_PROPERTIES","ZIP64_EXTRACTION","getValue","getBigUint64","ZipReader","zipReader","seekSignature","endOfDirectoryInfo","signatureArray","signatureView","getDataView","endOfDirectoryView","directoryDataLength","directoryDataOffset","commentOffset","commentLength","getUint16","appendedDataOffset","expectedLastDiskNumber","filesLength","prependedDataLength","startOffset","endOfDirectoryLocatorArray","endOfDirectoryLocatorView","endOfDirectoryArray","expectedDirectoryDataOffset","originalDirectoryDataOffset","directoryArray","directoryView","filenameEncoding","getOptionValue","commentEncoding","fileEntry","ZipEntry","readCommonHeader","languageEncodingFlag","bitFlag","filenameOffset","extraFieldOffset","filenameLength","extraFieldLength","versionMadeBy","msDosCompatible","rawFilename","endOffset","rawComment","filenameUTF8","commentUTF8","directory","getUint8","offsetFileEntry","compressedSize","internalFileAttribute","externalFileAttribute","rawExtraField","comment","endsWith","readCommonFooter","getData","indexFile","extractPrependedData","extractAppendedData","prependedData","appendedData","getEntriesGenerator","zipEntry","extraFieldAES","compressionMethod","rawLastModDate","localDirectory","originalCompressionMethod","lastAccessDate","creationDate","dataOffset","dataDescriptor","rawBitFlag","version","lastModDate","getDate","extraField","rawExtraFieldView","offsetExtraField","extraFieldZip64","readExtraFieldZip64","extraFieldUnicodePath","readExtraFieldUnicode","extraFieldUnicodeComment","readExtraFieldAES","extraFieldNTFS","readExtraFieldNTFS","extraFieldExtendedTimestamp","readExtraFieldExtendedTimestamp","zip64","extraFieldView","missingProperties","indexMissingProperty","extraction","extraFieldUnicode","rawPropertyName","valid","vendorVersion","vendorId","tag1Data","tagValue","attributeSize","tag1View","rawLastAccessDate","rawCreationDate","getDateNTFS","extraFieldData","flags","timeProperties","timeRawProperties","indexProperty","minimumBytes","maximumLength","seek","maximumBytes","timeRaw","BigInt","view","ERR_DUPLICATED_NAME","ERR_INVALID_COMMENT","ERR_INVALID_ENTRY_COMMENT","ERR_INVALID_ENTRY_NAME","ERR_INVALID_VERSION","ERR_INVALID_ENCRYPTION_STRENGTH","ERR_INVALID_EXTRAFIELD_TYPE","ERR_INVALID_EXTRAFIELD_DATA","ERR_UNSUPPORTED_FORMAT","EXTRAFIELD_DATA_AES","workers","pendingEntries","ZipWriter","addSplitZipSignature","files","filenames","pendingEntriesSize","pendingAddFileCalls","bufferedWrites","promiseAddFile","addFile","pendingEntry","closeFile","getLength","extendedTimestamp","keepOrder","bufferedWrite","dataDescriptorSignature","extraFieldSize","arraySet","maximumCompressedSize","maximumEntrySize","zip64Enabled","zip64UncompressedSize","zip64CompressedSize","zip64Offset","supportZip64SplitFile","zip64DiskNumberStart","headerInfo","getHeaderInfo","dataDescriptorInfo","getDataDescriptorInfo","localHeaderArray","dataDescriptorArray","getFileEntry","entryInfo","requestLockCurrentFileEntry","requestLockWriter","skipDiskIfNeeded","writeData","writerLocked","lockWriter","releaseLockWriter","lock","releaseLockCurrentFileEntry","previousFileEntry","lockPreviousFileEntry","fileWriter","signatureArrayView","writingEntryData","createFileEntry","writingBufferedEntryData","writeExtraHeaderInfo","setZip64ExtraInfo","hasCorruptedEntries","corruptedEntry","headerArray","rawExtraFieldExtendedTimestamp","rawExtraFieldNTFS","rawExtraFieldAES","rawExtraFieldZip64Length","rawExtraFieldZip64","setEntryInfo","extraFieldAESView","setUint16","setUint8","extraFieldExtendedTimestampView","extraFieldExtendedTimestampFlag","getTime","extraFieldNTFSView","lastModTimeNTFS","getTimeNTFS","setBigUint64","headerView","dateArray","dateView","lastModDateMsDos","getHours","getMinutes","getSeconds","getFullYear","getMonth","localHeaderView","dataDescriptorView","dataDescriptorOffset","rawExtraFieldZip64View","rawExtraFieldZip64Offset","entryData","sliceAsArrayBuffer","arrayBufferView","directoryOffset","directoryDiskOffset","indexFileEntry","fileEntryOffset","directoryEntryLength","endOfdirectoryArray","endOfdirectoryView","streamWriter","defaultValue","arrayLikes","arrayLike","process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","nextTick","arguments","Item","title","env","argv","versions","addListener","once","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","umask","fs","getChildByName","children","getRelativeName","ancestor","relativeName","ZipFileEntry","mimeType","ZipDirectoryEntry","addChild","fileSystemEntry","addFileSystemEntry","importZip","exportZip","getEntries","pathPart","getZipBlobReader","initReaders","getTotalSize","childIndex","child","FS","resetFS","destination","isDescendantOf","fullname","addDirectory","addText","addBlob","addData64URI","addHttpContent","addReadable","addData","importBlob","importData64URI","importUint8Array","importHttpContent","importReadable","exportBlob","exportData64URI","exportUint8Array","exportWritable","zipBlobReader","blobReader","totalSize","exportChild","processChild","relativePath","selectedEntry","getFullname","indexProgress","entryOffsets","previousValue","getChildren","isDirectory","readEntries","createReader","isFile","directoryReader","temporaryEntries","file","childZipEntry","import","configureWebWorker","getZip","zipFileBlob","zipFileReader","unzippedTextWriter","firstEntry","unzippedText","statisticsObject","statsTable","gpxFile","gpxFileContent","gpxText","parser","isUploadValid","stats","validateUpload","checkUpload","displayHint","loadFile","extension","href","zippedBlob","unzippedBlob","displayPerformance","OVERLAY_ID","OldModule","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","overlay","createErrorOverlay","body","stackTrace","innerText","getParents","modules","parents","dep","Function","deps","cached","cache","some"],"mappings":"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AAG,CAAC;AAClB,IAAMC,QAAQ,GAAG,CAAC;AAElB,IAAMC,QAAQ,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACzJ,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAClJ,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAClJ,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAChJ,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAC/I,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAC/I,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EACjJ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAChJ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAClJ,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EACjJ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAChJ,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAClJ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAChJ,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAClJ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAClJ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAClJ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAClJ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EACjJ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAC/I,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAChJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACjJ,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAClJ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAClJ,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EACjJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAClJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAClJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAChJ,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAClJ,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAClJ,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAClJ,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAClJ,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAClJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAClJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EACjJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EACjJ,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EACjJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;AAC/G,IAAMC,QAAQ,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI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","file":"app.c328ef1a.js","sourceRoot":"..\\src","sourcesContent":["const UTIL = (function () {\r\n\tlet performanceList = [];\r\n\tlet storedStates = [];\r\n\r\n\tfunction secondsToMinutesAndSeconds(sec) {\r\n\t\tlet result;\r\n\t\tsec = Number(sec);\r\n\t\tlet hours = Math.floor(sec / 3600);\r\n\t\tlet minutes = Math.floor(sec % 3600 / 60);\r\n\t\tlet seconds = Math.floor(sec % 3600 % 60);\r\n\t\t\r\n\t\tif (minutes == 0) {\r\n\t\t\tminutes = `00`\r\n\t\t} else if (minutes < 10) {\r\n\t\t\tminutes = `0${minutes}`\r\n\t\t}\r\n\t\t\r\n\t\tif (seconds === 0) {\r\n\t\t\tseconds = `00`\r\n\t\t} else if (seconds < 10) {\r\n\t\t\tseconds = `0${seconds}`\r\n\t\t}\r\n\t\t\r\n\t\tresult = `${hours}:${minutes}:${seconds}`;\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tfunction metersToKm(m) {\r\n\t\tlet km;\r\n\t\r\n\t\tkm = (m/1000).toFixed(2);\r\n\t\r\n\t\treturn km;\r\n\t}\r\n\r\n\tfunction sumArray(array) {\r\n\t\tconst initialValue = 0;\r\n\t\tconst sum = array.reduce(\r\n\t\t\t(accumulator, currentValue) => accumulator + currentValue, initialValue);\r\n\t\treturn sum;\r\n\t}\r\n\r\n\tfunction series (startNumber, endNumber, count) {\r\n\t\tlet result = [];\r\n\t\tlet step = ( endNumber - startNumber ) / ( count - 1 );\r\n\t\t// console.log(startNumber === endNumber);\r\n\t\t// console.log(count);\r\n\r\n\t\tif (count === 0) {\r\n\t\t\treturn 0;\r\n\t\t} else if (startNumber === endNumber) {\r\n\t\t\tfor ( let x = 0; x < count; x++) {\r\n\t\t\t\t// console.log('this should be our case!');\r\n\t\t\t\tlet y;\r\n\t\t\t\ty = startNumber;\r\n\t\t\t\tresult.push(y);\r\n\t\t\t} \r\n\t\t} else {\r\n\t\t\tfor ( let i = 0; i < count; i++) {\r\n\t\t\t\tlet y;\r\n\t\t\t\ty = startNumber + step * [i];\r\n\t\t\t\tresult.push(y); \r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tfunction smoothArray(array, smoothingCount, rounding) {\r\n\t\tlet smoothNumbers = []\r\n\r\n\t\tfor (let i = 0; i < array.length; i++) {\r\n\t\t\tlet start = parseInt([i]) - parseInt(smoothingCount/2);\r\n\t\t\tlet end = parseInt([i]) + parseInt(smoothingCount/2);\r\n\t\t\tlet numbersToAverage = [];\r\n\t\t\tconst indicesToProcess = series(start, end, smoothingCount);\r\n\t\t\t// console.log(start, end, smoothingCount);\r\n\t\t\t// console.log(series(start, end, smoothingCount));\r\n\r\n\t\t\tfor (let n = 0; n < smoothingCount; n++) {\r\n\t\t\t\tconst index = indicesToProcess[n];\t\r\n\t\t\t\t// console.log(indicesToProcess[n]);\r\n\t\t\t\tlet element = parseFloat(array.at(index));\r\n\t\t\t\tif (element === undefined) element = 0;\r\n\t\t\t\tnumbersToAverage.push(element);\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tsmoothNumbers.push(parseFloat((sumArray(numbersToAverage) / smoothingCount).toFixed(rounding)));\t\t\r\n\t\t}\r\n\r\n\t\treturn smoothNumbers;\r\n\t}\t\r\n\t\r\n\tclass PerformanceStat {\r\n\t\tconstructor(name, value) {\r\n\t\t\tthis.name = name;\r\n\t\t\tthis.value = value;\r\n\t\t}\r\n\t\r\n\t\tstartTimer() {\r\n\t\t\tlet start = Date.now();\r\n\t\t\treturn start;\r\n\t\t}\r\n\t\r\n\t\tendTimer() {\r\n\t\t\tlet end = Date.now();\r\n\t\t\treturn end;\r\n\t\t}\r\n\t\r\n\t\tevaluateTimer(performanceStat, startTimer, endTimer) {\r\n\t\t\tperformanceStat.value = endTimer - startTimer;\r\n\t\t}\r\n\t\r\n\t\taddStat(stat, unit) {\r\n\t\t\tperformanceList = (`${performanceList}\r\n\t\t\t\t<li>${stat.name}: ${stat.value} ${unit}</li>\r\n\t\t\t`);\r\n\t\t}\r\n\t}\t\r\n\t\r\n\tclass TrackPoint {\r\n\t\tconstructor(id, lat, lon, ele, time) {\r\n\t\t\tthis.id = id;\r\n\t\t\tthis.lat = lat;\r\n\t\t\tthis.lon = lon;\r\n\t\t\tthis.ele = ele;\r\n\t\t\tthis.time = time;\r\n\t\t\tthis.dist = 0;\r\n\t\t\tthis.totDist = 0;\r\n\t\t\tthis.speed = 0;\r\n\t\t\tthis.interval = 0;\r\n\t\t\tthis.eleDiff = 0;\r\n\t\t}\t\t\r\n\t\tdistance(lat1, lon1, lat2, lon2) {\r\n\t\t\t// Haversine formula - 0.3% error expected\t\t\r\n\t\t\tconst R = 6371e3; // metres\r\n\t\t\tconst φ1 = lat1 * Math.PI/180; // φ, λ in radians\r\n\t\t\tconst φ2 = lat2 * Math.PI/180;\r\n\t\t\tconst Δφ = (lat2-lat1) * Math.PI/180;\r\n\t\t\tconst Δλ = (lon2-lon1) * Math.PI/180;\r\n\t\r\n\t\t\tconst a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\r\n\t\t\t\t\t\t\t\tMath.cos(φ1) * Math.cos(φ2) *\r\n\t\t\t\t\t\t\t\tMath.sin(Δλ/2) * Math.sin(Δλ/2);\r\n\t\t\tconst c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n\t\t\tconst d = R * c; // in metres\r\n\t\r\n\t\t\treturn d;\r\n\t\t}\r\n\t\r\n\t\ttimeToDate(time) {\r\n\t\t\tlet timeTemplate = /[0-9.]{1,}/g;\r\n\t\t\tlet date;\r\n\t\r\n\t\t\tdate = time.match(timeTemplate);\r\n\t\t\tdate = new Date(Date.UTC(date[0], date[1]-1, date[2], date[3], date[4], date[5]));\r\n\t\r\n\t\t\treturn date;\r\n\t\t}\r\n\t\t\r\n\t\tspeedBetweenPoints(distance, interval) {\r\n\t\t\tlet speed;\r\n\t\r\n\t\t\tif (interval != 0) {\r\n\t\t\t\tspeed = distance / interval;\r\n\t\t\t} else {\r\n\t\t\t\tspeed = 0;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn speed;\r\n\t\t}\r\n\t\r\n\t\televationDifference(ele1, ele2) {\r\n\t\t\tlet eleDiff = 0;\r\n\t\r\n\t\t\teleDiff = ele2 - ele1;\r\n\t\r\n\t\t\treturn eleDiff;\r\n\t\t}\r\n\t}\r\n\r\n\tconst StateManager = (function () {\r\n\t\tlet StateManager;\r\n\t\t// (!StateManager) ? console.log('no SM') : console.log('SM');\r\n\r\n\t\tclass State {\r\n\t\t\tconstructor( name, domElements, current ) {\r\n\t\t\t\tname = this.name;\r\n\t\t\t\tdomElements = this.domElements;\r\n\t\t\t\tcurrent = this.current;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclass domElement {\r\n\t\t\tconstructor( element, innerHtml, style ) {\r\n\t\t\t\telement = this.element;\r\n\t\t\t\tinnerHtml = this.innerHtml;\r\n\t\t\t\tstyle = this.style;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction createStateManager() {\r\n\t\t\tconsole.log('state manager created.')\r\n\t\t\treturn new Object({name: 'stateManager'});\r\n\t\t}\r\n\r\n\t\tfunction storeDom(stateName, elementsToStore) {\r\n\t\t\tlet elementsArray = [];\r\n\t\t\tlet stateToStore = new State;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tstateToStore.name = stateName;\r\n\t\t\tstateToStore.current = true;\r\n\t\t\t\r\n\t\t\tlet entry = Object.entries(elementsToStore);\r\n\t\t\tlet styleTemplate = /(style=\")((.|\\n)*?)(\")/;\r\n\t\t\tfor ( let i = 0; i < entry.length; i++ ) {\r\n\t\t\t\tlet currentElement = new domElement;\r\n\t\t\t\t\r\n\t\t\t\tcurrentElement.id = entry[i][1].classList[0];\t\t\t\t\r\n\t\t\t\tcurrentElement.innerHtml = entry[i][1].innerHTML;\r\n\t\t\t\t\r\n\t\t\t\t// console.log(i);\r\n\t\t\t\tlet currentOuterHtml = entry[i][1].outerHTML;\r\n\t\t\t\tlet currentStyle = currentOuterHtml.match(styleTemplate);\r\n\t\t\t\tif (currentStyle !== null) {\r\n\t\t\t\t\tcurrentStyle = currentStyle[2];\r\n\t\t\t\t} else { currentStyle = '' }\r\n\t\t\t\tcurrentElement.style = currentStyle;\r\n\t\t\t\t\r\n\t\t\t\telementsArray.push(currentElement);\r\n\t\t\t};\r\n\r\n\t\t\tstateToStore.domElements = elementsArray;\r\n\r\n\t\t\tstoredStates.push(stateToStore);\r\n\t\t}\r\n\r\n\t\tfunction createNewState( newStateName, newElements, newStyles, newInnerHtml ) {\r\n\r\n\t\t\tlet baseState = storedStates[0];\r\n\t\t\tlet baseIds = (baseState.domElements).map(\r\n\t\t\t\t({ id, innerHtml, style }) => {return id});\r\n\t\r\n\t\t\tlet newElementsIds = [];\r\n\t\t\tfor ( let i=0; i<newElements.length; i++) {\r\n\t\t\t\tlet currentId = newElements[i].classList[0];\r\n\t\t\t\tnewElementsIds.push(currentId);\r\n\t\t\t}\t\t\r\n\t\t\tlet newEntries = []\r\n\t\t\t\r\n\t\t\t// // THIS LOOP IS PROBABLY WRONG!!!\r\n\t\r\n\t\t\tfor ( let i=0; i<baseState.domElements.length; i++ ) {\r\n\t\t\t\tlet currentEntryId = (baseIds[i]);\r\n\t\t\t\tlet indexOfNewElement = newElementsIds.indexOf(currentEntryId);\r\n\t\t\t\t\r\n\t\t\t\t// THE BUG WAS IN THESE CONDITIONAL STATEMENTS:\r\n\t\t\t\tif (indexOfNewElement !== -1) {\r\n\t\t\t\t\tlet newEntry = new domElement;\r\n\t\t\t\t\tnewEntry.id = `${baseState.domElements[i].id}`;\t\t\t\t\r\n\t\t\t\t\tif ( newStyles[indexOfNewElement] !== '' ) { \r\n\t\t\t\t\t\tnewEntry.innerHtml = `${newInnerHtml[indexOfNewElement]}` };\r\n\t\t\t\t\tif ( newStyles[indexOfNewElement] !== '' ) { \r\n\t\t\t\t\t\tnewEntry.style = `${newStyles[indexOfNewElement]}` };\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tnewEntries.push(newEntry);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet newEntry = new domElement;\r\n\t\t\t\t\tnewEntry.id = `${baseState.domElements[i].id}`;\r\n\t\t\t\t\tnewEntry.innerHtml = `${baseState.domElements[i].innerHtml}`;\r\n\t\t\t\t\tnewEntry.style = `${baseState.domElements[i].style}`;\r\n\t\t\t\t\tnewEntries.push(newEntry);\r\n\t\t\t\t}\t\t\t\r\n\t\t\t} \r\n\t\t\t\r\n\t\t\tlet stateToCreate = new State;\r\n\t\t\tstateToCreate.name = newStateName;\r\n\t\t\tstateToCreate.current = false;\r\n\t\t\tstateToCreate.domElements = newEntries;\r\n\t\r\n\t\t\treturn storedStates.push(stateToCreate);\r\n\t\t}\t\r\n\r\n\t\tfunction checkCurrentState() {\r\n\t\t\tlet currentState;\r\n\t\t\tfor ( let i=0; i< storedStates.length; i++) {\r\n\t\t\t\tlet current = (storedStates).map(\r\n\t\t\t\t\t({ name, current, domElements }) => {return current});\t\r\n\t\t\t\tif ( current[i] === true ) {\r\n\t\t\t\t\tcurrentState = storedStates[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn currentState;\r\n\t\t}\r\n\r\n\t\tfunction setState(newStateName) {\r\n\t\t\tlet oldState = checkCurrentState();\r\n\t\t\tlet baseState = storedStates[0];\r\n\t\t\tlet newState;\r\n\t\t\t// first we need to check if a State exists with a name === newState\r\n\t\t\tif ( findStateIndex(newStateName) !== -1 ) {\r\n\t\t\t\tnewState = storedStates[findStateIndex(newStateName)];\r\n\t\t\t\tswitchStates( oldState, baseState );\r\n\t\t\t\tswitchStates( baseState, newState );\r\n\t\t\t} else throw new Error ('This state has not been specified yet.')\r\n\r\n\t\t\t// now we change all DOM objects.\r\n\t\t\tnewState.domElements.forEach(item => {\r\n\t\t\t\tif ( item.innerHtml !== '' ) {\r\n\t\t\t\t\tdocument.getElementsByClassName(item.id)[0].innerHTML = `${item.innerHtml}`;\r\n\t\t\t\t};\r\n\t\t\t\tif ( item.style !== '' ) {\r\n\t\t\t\t\tdocument.getElementsByClassName(item.id)[0].style = `${item.style}`;\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tfunction findStateIndex(stateName) {\r\n\t\t\tlet result;\r\n\r\n\t\t\tlet statesArr = (storedStates).map(\r\n\t\t\t\t({ name, current, domElements }) => {return name});\r\n\t\t\tlet targetStateIndex = statesArr.indexOf(stateName);\r\n\t\t\tresult = targetStateIndex;\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction switchStates( currentState, newState ) {\r\n\t\t\tif ( findStateIndex(newState.name) !== -1 ) {\r\n\t\t\t\tcurrentState.current = false;\r\n\t\t\t\tnewState.current = true;\r\n\t\t\t\tcurrentState = newState;\r\n\t\t\t} else throw new Error ('This state has not been specified yet.');\r\n\t\t\t\r\n\t\t\treturn currentState;\r\n\t\t}\r\n\r\n\t\treturn {\t\t\t\r\n\t\t\tgetStateManager: function () {\r\n\t\t\t\tif (!StateManager) {\r\n\t\t\t\t\tStateManager = createStateManager();\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn StateManager;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tstoreDom,\r\n\t\t\tcreateNewState,\r\n\t\t\tsetState,\r\n\t\t\tfindStateIndex\r\n\r\n\r\n\t\t\t// changeDomElement(newStateName, elementToChange),\r\n\t\r\n\t\t}\r\n\t})();\r\n\t\r\n\treturn { \r\n\t\tsecondsToMinutesAndSeconds, \r\n\t\tmetersToKm, \r\n\t\tsumArray,\r\n\t\tseries,\r\n\t\tsmoothArray,\r\n\t\tPerformanceStat,\r\n\t\tTrackPoint,\r\n\t\tperformanceList,\r\n\t\tStateManager,\r\n\t\tstoredStates,\r\n\t};\r\n})();\r\n\r\nexport { UTIL };\r\n\r\n\r\n","import { DOM, APP } from '../app.js';\r\nimport { UTIL } from './utilities.js';\r\n\r\nconst HOME = (function () {\r\n\tlet trackPointList;\r\n\tlet trackPointObjects = [];\r\n\tlet gpxProcessingTime = new UTIL.PerformanceStat;\r\n\tlet gpxProcessingStart;\r\n\tlet gpxProcessingEnd;\r\n\tlet noOfOptimizations;\r\n\r\n\tfunction createStates() {\r\n\t\tUTIL.StateManager.createNewState( \r\n\t\t\t'home_domContentLoaded', \r\n\t\t\t[ DOM.homeUpload, DOM.homeExamples ], \r\n\t\t\t[ 'visibility: visible', 'visibility: visible' ],\r\n\t\t\t[ '', '' ],\r\n\t\t);\r\n\t\tUTIL.StateManager.createNewState( \r\n\t\t\t'home_uploadError', \r\n\t\t\t[ DOM.uploadError, DOM.uploadErrorHint ], \r\n\t\t\t[ 'visibility: visible', 'visibility: hidden' ],\r\n\t\t\t[ '', '' ],\r\n\t\t);\r\n\t\tUTIL.StateManager.createNewState( \r\n\t\t\t'home_uploadErrorHint', \r\n\t\t\t[ DOM.readGpxBtn, DOM.uploadError, DOM.uploadErrorHint, DOM.file_1, DOM.file_2, DOM.file_3, ], \r\n\t\t\t[ 'background-color: var(--grey-40)', 'visibility: hidden', 'visibility: visible', 'background-color: var(--green-70)', 'background-color: var(--green-70)', 'background-color: var(--green-70)' ],\r\n\t\t\t[ '', '', '', '', '', '' ],\r\n\t\t);\r\n\t\tUTIL.StateManager.createNewState( \r\n\t\t\t'info_baseState', \r\n\t\t\t[ DOM.home, DOM.info ], \r\n\t\t\t[ 'display:none', 'display:block' ],\r\n\t\t\t[ '', '' ],\r\n\t\t);\r\n\t}\r\n\r\n\tfunction init() {\r\n\t\t[ DOM.readGpxBtn, DOM.uploadText ].forEach(function (element) {\r\n\t\t\telement.addEventListener('click', uploadClicked);\r\n\t\t}, { capture: true });\t\t\r\n\t\tDOM.uploadUndertext.addEventListener('click', undertextClicked);\r\n\t};\r\n\r\n\tfunction uploadClicked(event){\r\n\t\tconsole.log('uploadClicked works');\r\n\t\tevent.preventDefault();\r\n\t\tDOM.uploadInput.click();\r\n\t}\r\n\t\r\n  function undertextClicked(event) {\r\n\t\tconsole.log('undertextClicked works');\r\n\t\tevent.preventDefault();\r\n    console.log('TODO: undertext clicked');\r\n  }\r\n\r\n\tfunction processDataFromUpload(data) {\r\n\t\tconsole.log('processDataFromUpload function started.')\r\n\t\tconst processPromise = Promise.resolve(processGpx(data));\r\n\t\r\n\t\tprocessPromise\r\n\t\t\t.then(() => {\r\n        localStorage.clear();\r\n        console.log('local storage cleared');\r\n      })\r\n\t\t\t.then(() => {\r\n\t\t\t\tlet dataToSave = JSON.stringify(trackPointObjects);\r\n\t\t\t\tlocalStorage.setItem('currentGpx', dataToSave);\r\n\t\t\t})\t\t\t\t\r\n\t\t\t.then(() => {\r\n        calculateGpxProcessingTime();\r\n        console.log(gpxProcessingTime, 'ms');\r\n        gpxProcessingTime.addStat(gpxProcessingTime, 'ms')\r\n        // performanceObject.innerHTML = performanceList;\r\n\t\t\t})\r\n\t}\t\t\r\n\r\n\tfunction checkFileSize(fileSize) {\r\n\t\tnoOfOptimizations = Math.ceil(Math.log2(fileSize/APP.maxFileSize));\r\n\t\t// console.log(noOfOptimizations);\r\n\t\tif ( fileSize > APP.maxFileSize ) {\r\n      console.log(`File's too big, we need to take 1 in every ${Math.pow( 2, noOfOptimizations )} points.`);\r\n    } else {\r\n      console.log(\"File size ok, no need to optimize it.\");\t\t\t\r\n\t\t}\r\n\t\treturn noOfOptimizations;\r\n\t}\r\n\r\n\tfunction optimizeFile( contentArray, noOfOptimizations ) {\r\n\t\tlet optimized = [];\r\n\t\tfor ( let i=0; i<contentArray.length; i++) {\r\n\t\t\tlet currentEntry = contentArray[i];\r\n\t\t\toptimized.push(currentEntry);\r\n\t\t\ti = i + Math.pow( 2, (noOfOptimizations - 1) );\r\n\t\t}\r\n\t\treturn optimized;\r\n\t}\r\n\r\n\tfunction processGpx(content, fileSize) {\r\n\t\tconsole.log('processGPX function started.');\r\n\t\tgpxProcessingStart = gpxProcessingTime.startTimer();\r\n\t\t\r\n\t\tlet trackPointTemplate = /(<trkpt)((.|\\n)*?)(<\\/trkpt>)/g;\r\n\t\ttrackPointList = content.match(trackPointTemplate); // We divided GPX into individual trackpoints.\r\n\t\t\r\n\t\t// Now if file is too large, we'll skip some points:\r\n\t\tlet numberOfOptimizations = checkFileSize(fileSize);\r\n\t\tif ( numberOfOptimizations > 0 ) {\r\n\t\t\tlet newTrackpoints = HOME.optimizeFile( trackPointList, numberOfOptimizations );\r\n\t\t\ttrackPointList = newTrackpoints;\r\n\t\t\tlet optimizedTrackpoints = '';\r\n\t\t\tfor (let i = 0; i < newTrackpoints.length; i++) {\r\n\t\t\t\tconst element = newTrackpoints[i];\r\n\t\t\t\toptimizedTrackpoints = `${optimizedTrackpoints}${element}`;\t\t\t\t\r\n\t\t\t}\r\n\t\t\tconsole.log(optimizedTrackpoints);\r\n\t\t}\r\n\r\n\t\t// Now we need to extract data from trackpoints into elements.\r\n\t\tlet latTemplate = /(lat=\")((.|\\n)*?)(\")/;\r\n\t\tlet lonTemplate = /(lon=\")((.|\\n)*?)(\")/;\r\n\t\tlet eleTemplate = /(<ele>)((.|\\n)*?)(<\\/ele>)/;\r\n\t\tlet timeTemplate = /(<time>)((.|\\n)*?)(<\\/time>)/;\r\n\t\tlet previousTrackpoint;\r\n\t\r\n\t\tfor ( let i=0; i<trackPointList.length;  ) {\r\n\t\t\tlet currentTrackpoint = new UTIL.TrackPoint;\r\n\t\t\tlet currentTrackpointRaw = trackPointList[i];\r\n\t\r\n\t\t\tcurrentTrackpoint.id = i;\r\n\t\t\tcurrentTrackpoint.lat = currentTrackpointRaw.match(latTemplate)[2];\r\n\t\t\tcurrentTrackpoint.lon = currentTrackpointRaw.match(lonTemplate)[2];\r\n\t\t\tcurrentTrackpoint.ele = currentTrackpointRaw.match(eleTemplate)[2];\r\n\t\t\tcurrentTrackpoint.time = currentTrackpointRaw.match(timeTemplate)[2];\r\n\t\t\tcurrentTrackpoint.time = currentTrackpoint.timeToDate(currentTrackpoint.time);\r\n\t\r\n\t\t\tif (i>0) {\r\n\t\t\t\tcurrentTrackpoint.interval = (currentTrackpoint.time - previousTrackpoint.time)/1000;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentTrackpoint.interval = 0;\r\n\t\t\t}\r\n\t\r\n\t\t\tif (i>0) {\r\n\t\t\t\tcurrentTrackpoint.dist = currentTrackpoint.distance(\r\n\t\t\t\tpreviousTrackpoint.lat, previousTrackpoint.lon, currentTrackpoint.lat, currentTrackpoint.lon).toFixed(3);\r\n\t\t\t} else {\r\n\t\t\t\tcurrentTrackpoint.dist = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (i>0) {\r\n\t\t\t\tcurrentTrackpoint.totDist = parseFloat(previousTrackpoint.totDist) + parseFloat( currentTrackpoint.dist);\r\n\t\t\t\t// currentTrackpoint.totDist = parseFloat(currentTrackpoint.totDist);\r\n\t\t\t\tcurrentTrackpoint.totDist = currentTrackpoint.totDist.toFixed(3);\r\n\t\t\t} else {\r\n\t\t\t\tcurrentTrackpoint.totDist = 0;\r\n\t\t\t}\r\n\t\r\n\t\t\tcurrentTrackpoint.speed = currentTrackpoint.speedBetweenPoints(\r\n\t\t\t\tcurrentTrackpoint.dist, currentTrackpoint.interval\r\n\t\t\t).toFixed(3);\r\n\t\r\n\t\t\tif (i>0) {\r\n\t\t\t\tcurrentTrackpoint.eleDiff = currentTrackpoint.elevationDifference(\r\n\t\t\t\t\tpreviousTrackpoint.ele, currentTrackpoint.ele).toFixed(2);\r\n\t\t\t} else {\r\n\t\t\t\tcurrentTrackpoint.eleDiff = 0;\r\n\t\t\t}\r\n\t\r\n\t\t\ttrackPointObjects.push(currentTrackpoint);\r\n\t\t\tpreviousTrackpoint = currentTrackpoint;\r\n\r\n\t\t\ti++;\r\n\t\t\tif ( i ===  (trackPointList.length)) {\r\n\t\t\t\tsmoothSpeed(trackPointObjects);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfunction smoothSpeed(trackPointObjects) {\r\n\t\t\t// numberSmoothing\r\n\t\t\tlet speeds = (trackPointObjects).map(\r\n\t\t\t\t({ speed }) => {return speed});\r\n\t\t\tlet smoothSpeeds = UTIL.smoothArray(speeds, APP.numberSmoothing, 2);\r\n\r\n\t\t\tfor (let i = 0; i < trackPointObjects.length; i++) {\r\n\t\t\t\ttrackPointObjects[i].speed = smoothSpeeds[i];\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\treturn trackPointObjects;\r\n\t\t}\r\n    \r\n    gpxProcessingEnd = gpxProcessingTime.endTimer();\r\n\t\treturn trackPointObjects;\r\n\t}\r\n\r\n  function calculateGpxProcessingTime() {\r\n    gpxProcessingTime.name = 'GPX processing time';\r\n    gpxProcessingTime.evaluateTimer(\r\n      gpxProcessingTime, gpxProcessingStart, gpxProcessingEnd);\r\n  };\r\n\r\n  return {\r\n\t\tcreateStates,\r\n\t\tinit,\r\n    // uploadClicked,\r\n    // undertextClicked,\r\n    // processDataFromUpload,\r\n    // fetchDataFromGpx,\r\n    // handleFileSelect,\r\n    // handleFileLoad,\r\n    processGpx,\r\n    // calculateGpxProcessingTime,\r\n\t\tcheckFileSize,\r\n\t\toptimizeFile,\r\n    // gpxProcessingTime,\r\n\t\ttrackPointObjects,\r\n  }\t\r\n})();\r\n\r\nexport { HOME };","/**\n * This object contains all namespaces used within Chartist.\n */\nexport const namespaces: Record<string, string> = {\n  svg: 'http://www.w3.org/2000/svg',\n  xmlns: 'http://www.w3.org/2000/xmlns/',\n  xhtml: 'http://www.w3.org/1999/xhtml',\n  xlink: 'http://www.w3.org/1999/xlink',\n  ct: 'http://gionkunz.github.com/chartist-js/ct'\n};\n\n/**\n * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n */\nexport const precision = 8;\n\n/**\n * A map with characters to escape for strings to be safely used as attribute values.\n */\nexport const escapingMap: Record<string, string> = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#039;'\n};\n","/**\n * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n * @return Returns the passed number value with unit.\n */\nexport function ensureUnit<T>(value: T, unit: string) {\n  if (typeof value === 'number') {\n    return value + unit;\n  }\n\n  return value;\n}\n\n/**\n * Converts a number or string to a quantity object.\n * @return Returns an object containing the value as number and the unit as string.\n */\nexport function quantity<T>(input: T) {\n  if (typeof input === 'string') {\n    const match = /^(\\d+)\\s*(.*)$/g.exec(input);\n    return {\n      value: match ? +match[1] : 0,\n      unit: match?.[2] || undefined\n    };\n  }\n\n  return {\n    value: Number(input)\n  };\n}\n\n/**\n * Generates a-z from a number 0 to 26\n * @param n A number from 0 to 26 that will result in a letter a-z\n * @return A character from a-z based on the input number n\n */\nexport function alphaNumerate(n: number) {\n  // Limit to a-z\n  return String.fromCharCode(97 + (n % 26));\n}\n","import type { Bounds } from './types';\nimport { precision as globalPrecision } from './constants';\n\nexport const EPSILON = 2.221e-16;\n\n/**\n * Calculate the order of magnitude for the chart scale\n * @param value The value Range of the chart\n * @return The order of magnitude\n */\nexport function orderOfMagnitude(value: number) {\n  return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n}\n\n/**\n * Project a data length into screen coordinates (pixels)\n * @param axisLength The svg element for the chart\n * @param length Single data value from a series array\n * @param bounds All the values to set the bounds of the chart\n * @return The projected data length in pixels\n */\nexport function projectLength(\n  axisLength: number,\n  length: number,\n  bounds: Bounds\n) {\n  return (length / bounds.range) * axisLength;\n}\n\n/**\n * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n * @param value The value that should be rounded with precision\n * @param [digits] The number of digits after decimal used to do the rounding\n * @returns Rounded value\n */\nexport function roundWithPrecision(value: number, digits?: number) {\n  const precision = Math.pow(10, digits || globalPrecision);\n  return Math.round(value * precision) / precision;\n}\n\n/**\n * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n * @param num An integer number where the smallest factor should be searched for\n * @returns The smallest integer factor of the parameter num.\n */\nexport function rho(num: number) {\n  if (num === 1) {\n    return num;\n  }\n\n  function gcd(p: number, q: number): number {\n    if (p % q === 0) {\n      return q;\n    } else {\n      return gcd(q, p % q);\n    }\n  }\n\n  function f(x: number) {\n    return x * x + 1;\n  }\n\n  let x1 = 2;\n  let x2 = 2;\n  let divisor: number;\n\n  if (num % 2 === 0) {\n    return 2;\n  }\n\n  do {\n    x1 = f(x1) % num;\n    x2 = f(f(x2)) % num;\n    divisor = gcd(Math.abs(x1 - x2), num);\n  } while (divisor === 1);\n\n  return divisor;\n}\n\n/**\n * Calculate cartesian coordinates of polar coordinates\n * @param centerX X-axis coordinates of center point of circle segment\n * @param centerY X-axis coordinates of center point of circle segment\n * @param radius Radius of circle segment\n * @param angleInDegrees Angle of circle segment in degrees\n * @return Coordinates of point on circumference\n */\nexport function polarToCartesian(\n  centerX: number,\n  centerY: number,\n  radius: number,\n  angleInDegrees: number\n) {\n  const angleInRadians = ((angleInDegrees - 90) * Math.PI) / 180.0;\n\n  return {\n    x: centerX + radius * Math.cos(angleInRadians),\n    y: centerY + radius * Math.sin(angleInRadians)\n  };\n}\n","import type { Bounds } from '../types';\nimport {\n  orderOfMagnitude,\n  projectLength,\n  roundWithPrecision,\n  rho,\n  EPSILON\n} from '../math';\n\n/**\n * Calculate and retrieve all the bounds for the chart and return them in one array\n * @param axisLength The length of the Axis used for\n * @param highLow An object containing a high and low property indicating the value range of the chart.\n * @param scaleMinSpace The minimum projected length a step should result in\n * @param onlyInteger\n * @return All the values to set the bounds of the chart\n */\nexport function getBounds(\n  axisLength: number,\n  highLow: { high: number; low: number },\n  scaleMinSpace: number,\n  onlyInteger = false\n) {\n  const bounds: Bounds = {\n    high: highLow.high,\n    low: highLow.low,\n    valueRange: 0,\n    oom: 0,\n    step: 0,\n    min: 0,\n    max: 0,\n    range: 0,\n    numberOfSteps: 0,\n    values: []\n  };\n\n  bounds.valueRange = bounds.high - bounds.low;\n  bounds.oom = orderOfMagnitude(bounds.valueRange);\n  bounds.step = Math.pow(10, bounds.oom);\n  bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n  bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n  bounds.range = bounds.max - bounds.min;\n  bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n  // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n  // If we are already below the scaleMinSpace value we will scale up\n  const length = projectLength(axisLength, bounds.step, bounds);\n  const scaleUp = length < scaleMinSpace;\n  const smallestFactor = onlyInteger ? rho(bounds.range) : 0;\n\n  // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n  if (onlyInteger && projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n    bounds.step = 1;\n  } else if (\n    onlyInteger &&\n    smallestFactor < bounds.step &&\n    projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace\n  ) {\n    // If step 1 was too small, we can try the smallest factor of range\n    // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n    // is larger than the scaleMinSpace we should go for it.\n    bounds.step = smallestFactor;\n  } else {\n    // Trying to divide or multiply by 2 and find the best step value\n    let optimizationCounter = 0;\n    for (;;) {\n      if (\n        scaleUp &&\n        projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace\n      ) {\n        bounds.step *= 2;\n      } else if (\n        !scaleUp &&\n        projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace\n      ) {\n        bounds.step /= 2;\n        if (onlyInteger && bounds.step % 1 !== 0) {\n          bounds.step *= 2;\n          break;\n        }\n      } else {\n        break;\n      }\n\n      if (optimizationCounter++ > 1000) {\n        throw new Error(\n          'Exceeded maximum number of iterations while optimizing scale step!'\n        );\n      }\n    }\n  }\n\n  bounds.step = Math.max(bounds.step, EPSILON);\n  function safeIncrement(value: number, increment: number) {\n    // If increment is too small use *= (1+EPSILON) as a simple nextafter\n    if (value === (value += increment)) {\n      value *= 1 + (increment > 0 ? EPSILON : -EPSILON);\n    }\n    return value;\n  }\n\n  // Narrow min and max based on new step\n  let newMin = bounds.min;\n  let newMax = bounds.max;\n  while (newMin + bounds.step <= bounds.low) {\n    newMin = safeIncrement(newMin, bounds.step);\n  }\n  while (newMax - bounds.step >= bounds.high) {\n    newMax = safeIncrement(newMax, -bounds.step);\n  }\n  bounds.min = newMin;\n  bounds.max = newMax;\n  bounds.range = bounds.max - bounds.min;\n\n  const values: number[] = [];\n  for (let i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n    const value = roundWithPrecision(i);\n    if (value !== values[values.length - 1]) {\n      values.push(value);\n    }\n  }\n  bounds.values = values;\n\n  return bounds;\n}\n","/**\n * Simple recursive object extend\n * @param target Target object where the source will be merged into\n * @param sources This object (objects) will be merged into target and then target is returned\n * @return An object that has the same reference as target but is extended and merged with the properties of source\n */\nexport function extend<T>(target: T): T;\nexport function extend<T, A>(target: T, a: A): T & A;\nexport function extend<T, A, B>(target: T, a: A, b: B): T & A & B;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function extend(target: any = {}, ...sources: any[]) {\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    for (const prop in source) {\n      const sourceProp = source[prop];\n      if (\n        typeof sourceProp === 'object' &&\n        sourceProp !== null &&\n        !(sourceProp instanceof Array)\n      ) {\n        target[prop] = extend(target[prop], sourceProp);\n      } else {\n        target[prop] = sourceProp;\n      }\n    }\n  }\n\n  return target;\n}\n","/**\n * Helps to simplify functional style code\n * @param n This exact value will be returned by the noop function\n * @return The same value that was provided to the n parameter\n */\nexport const noop = <T>(n: T) => n;\n\n/**\n * Functional style helper to produce array with given length initialized with undefined values\n */\nexport function times(length: number): undefined[];\nexport function times<T = unknown>(\n  length: number,\n  filler: (index: number) => T\n): T[];\nexport function times<T = unknown>(\n  length: number,\n  filler?: (index: number) => T\n) {\n  return Array.from({ length }, filler ? (_, i) => filler(i) : () => void 0);\n}\n\n/**\n * Sum helper to be used in reduce functions\n */\nexport const sum = (previous: number, current: number) =>\n  previous + (current ? current : 0);\n\n/**\n * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n *\n * For example:\n * @example\n * ```ts\n * const data = [[1, 2], [3], []];\n * serialMap(data, cb);\n *\n * // where cb will be called 2 times\n * // 1. call arguments: (1, 3, undefined)\n * // 2. call arguments: (2, undefined, undefined)\n * ```\n */\nexport const serialMap = <T, K>(array: T[][], callback: (...args: T[]) => K) =>\n  times(Math.max(...array.map(element => element.length)), index =>\n    callback(...array.map(element => element[index]))\n  );\n","import type { FilterByKey } from './types';\n\n/**\n * This function safely checks if an objects has an owned property.\n * @param target The object where to check for a property\n * @param property The property name\n * @returns Returns true if the object owns the specified property\n */\nexport function safeHasProperty<T, K extends string>(\n  target: T,\n  property: K\n): target is FilterByKey<T, K>;\nexport function safeHasProperty(target: unknown, property: string) {\n  return (\n    target !== null &&\n    typeof target === 'object' &&\n    Reflect.has(target, property)\n  );\n}\n\n/**\n * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n */\nexport function isNumeric(value: number): true;\nexport function isNumeric(value: unknown): boolean;\nexport function isNumeric(value: unknown) {\n  return value !== null && isFinite(value as number);\n}\n\n/**\n * Returns true on all falsey values except the numeric value 0.\n */\nexport function isFalseyButZero(\n  value: unknown\n): value is undefined | null | false | '' {\n  return !value && value !== 0;\n}\n\n/**\n * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n */\nexport function getNumberOrUndefined(value: number): number;\nexport function getNumberOrUndefined(value: unknown): number | undefined;\nexport function getNumberOrUndefined(value: unknown) {\n  return isNumeric(value) ? Number(value) : undefined;\n}\n\n/**\n * Checks if value is array of arrays or not.\n */\nexport function isArrayOfArrays(data: unknown): data is unknown[][] {\n  if (!Array.isArray(data)) {\n    return false;\n  }\n\n  return data.every(Array.isArray);\n}\n\n/**\n * Loop over array.\n */\nexport function each<T>(\n  list: T[],\n  callback: (item: T, index: number, itemIndex: number) => void,\n  reverse = false\n) {\n  let index = 0;\n\n  list[reverse ? 'reduceRight' : 'reduce']<void>(\n    (_, item, itemIndex) => callback(item, index++, itemIndex),\n    void 0\n  );\n}\n","import type {\n  Multi,\n  AxisName,\n  FlatSeriesValue,\n  Series,\n  SeriesObject\n} from '../types';\nimport { safeHasProperty, getNumberOrUndefined } from '../../utils';\n\n/**\n * Get meta data of a specific value in a series.\n */\nexport function getMetaData(\n  seriesData: FlatSeriesValue | Series | SeriesObject,\n  index: number\n) {\n  const value = Array.isArray(seriesData)\n    ? seriesData[index]\n    : safeHasProperty(seriesData, 'data')\n    ? seriesData.data[index]\n    : null;\n  return safeHasProperty(value, 'meta') ? value.meta : undefined;\n}\n\n/**\n * Checks if a value is considered a hole in the data series.\n * @returns True if the value is considered a data hole\n */\nexport function isDataHoleValue(value: unknown): value is null | undefined;\nexport function isDataHoleValue(value: unknown) {\n  return (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && isNaN(value))\n  );\n}\n\n/**\n * Checks if value is array of series objects.\n */\nexport function isArrayOfSeries(\n  value: unknown\n): value is (Series | SeriesObject)[] {\n  return (\n    Array.isArray(value) &&\n    value.every(_ => Array.isArray(_) || safeHasProperty(_, 'data'))\n  );\n}\n\n/**\n * Checks if provided value object is multi value (contains x or y properties)\n */\nexport function isMultiValue(value: unknown): value is Multi {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    (Reflect.has(value, 'x') || Reflect.has(value, 'y'))\n  );\n}\n\n/**\n * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n */\nexport function getMultiValue(\n  value: Multi | number | unknown,\n  dimension: AxisName = 'y'\n) {\n  if (isMultiValue(value) && safeHasProperty(value, dimension)) {\n    return getNumberOrUndefined(value[dimension]);\n  } else {\n    return getNumberOrUndefined(value);\n  }\n}\n","import type {\n  Options,\n  AxisName,\n  NormalizedSeries,\n  NormalizedSeriesValue\n} from '../types';\nimport { safeHasProperty } from '../../utils';\nimport { isDataHoleValue } from './data';\n\n/**\n * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n * @param data The array that contains the data to be visualized in the chart\n * @param options The Object that contains the chart options\n * @param dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n * @return An object that contains the highest and lowest value that will be visualized on the chart.\n */\nexport function getHighLow(\n  data: NormalizedSeries[],\n  options: Options,\n  dimension?: AxisName\n) {\n  // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n  options = {\n    ...options,\n    ...(dimension ? (dimension === 'x' ? options.axisX : options.axisY) : {})\n  };\n\n  const highLow = {\n    high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n    low: options.low === undefined ? Number.MAX_VALUE : +options.low\n  };\n  const findHigh = options.high === undefined;\n  const findLow = options.low === undefined;\n\n  // Function to recursively walk through arrays and find highest and lowest number\n  function recursiveHighLow(\n    sourceData: NormalizedSeriesValue | NormalizedSeries | NormalizedSeries[]\n  ) {\n    if (isDataHoleValue(sourceData)) {\n      return;\n    } else if (Array.isArray(sourceData)) {\n      for (let i = 0; i < sourceData.length; i++) {\n        recursiveHighLow(sourceData[i]);\n      }\n    } else {\n      const value = Number(\n        dimension && safeHasProperty(sourceData, dimension)\n          ? sourceData[dimension]\n          : sourceData\n      );\n\n      if (findHigh && value > highLow.high) {\n        highLow.high = value;\n      }\n\n      if (findLow && value < highLow.low) {\n        highLow.low = value;\n      }\n    }\n  }\n\n  // Start to find highest and lowest number recursively\n  if (findHigh || findLow) {\n    recursiveHighLow(data);\n  }\n\n  // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n  // used to generate the chart. This is useful when the chart always needs to contain the position of the\n  // invisible reference value in the view i.e. for bipolar scales.\n  if (options.referenceValue || options.referenceValue === 0) {\n    highLow.high = Math.max(options.referenceValue, highLow.high);\n    highLow.low = Math.min(options.referenceValue, highLow.low);\n  }\n\n  // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n  // to set the high or low to 0 depending on the polarity\n  if (highLow.high <= highLow.low) {\n    // If both values are 0 we set high to 1\n    if (highLow.low === 0) {\n      highLow.high = 1;\n    } else if (highLow.low < 0) {\n      // If we have the same negative value for the bounds we set bounds.high to 0\n      highLow.high = 0;\n    } else if (highLow.high > 0) {\n      // If we have the same positive value for the bounds we set bounds.low to 0\n      highLow.low = 0;\n    } else {\n      // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n      highLow.high = 1;\n      highLow.low = 0;\n    }\n  }\n\n  return highLow;\n}\n","import type {\n  Data,\n  NormalizedData,\n  Multi,\n  AxisName,\n  NormalizedMulti,\n  Series,\n  FlatSeries,\n  NormalizedSeries,\n  NormalizedFlatSeries,\n  SeriesObject,\n  SeriesPrimitiveValue\n} from '../types';\nimport {\n  isArrayOfArrays,\n  times,\n  safeHasProperty,\n  getNumberOrUndefined\n} from '../../utils';\nimport { isDataHoleValue, isArrayOfSeries } from './data';\n\n/**\n * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n * @param data The data object that is passed as second argument to the charts\n * @return The normalized data object\n */\nexport function normalizeData(\n  data: Data<FlatSeries>,\n  reverse?: boolean,\n  multi?: false\n): NormalizedData<NormalizedFlatSeries>;\nexport function normalizeData(\n  data: Data<(Series | SeriesObject)[]>,\n  reverse: boolean | undefined,\n  multi: true | AxisName\n): NormalizedData<NormalizedSeries[]>;\nexport function normalizeData(\n  data: Data<FlatSeries | (Series | SeriesObject)[]>,\n  reverse: boolean | undefined,\n  multi: boolean | AxisName,\n  distributed: true\n): NormalizedData<NormalizedSeries[]>;\nexport function normalizeData(\n  data: Data<FlatSeries | (Series | SeriesObject)[]>,\n  reverse?: boolean,\n  multi?: boolean | AxisName\n): NormalizedData<NormalizedFlatSeries | NormalizedSeries[]>;\nexport function normalizeData(\n  data: Data,\n  reverse = false,\n  multi?: boolean | AxisName,\n  distributed?: boolean\n) {\n  let labelCount: number;\n  const normalized: NormalizedData = {\n    labels: (data.labels || []).slice(),\n    series: normalizeSeries(data.series, multi, distributed)\n  };\n  const inputLabelCount = normalized.labels.length;\n\n  // If all elements of the normalized data array are arrays we're dealing with\n  // multi series data and we need to find the largest series if they are un-even\n  if (isArrayOfArrays(normalized.series)) {\n    // Getting the series with the the most elements\n    labelCount = Math.max(\n      inputLabelCount,\n      ...normalized.series.map(series => series.length)\n    );\n\n    normalized.series.forEach(series => {\n      series.push(...times(Math.max(0, labelCount - series.length)));\n    });\n  } else {\n    // We're dealing with Pie data so we just take the normalized array length\n    labelCount = normalized.series.length;\n  }\n\n  // Padding the labels to labelCount with empty strings\n  normalized.labels.push(\n    ...times(Math.max(0, labelCount - inputLabelCount), () => '')\n  );\n\n  if (reverse) {\n    reverseData(normalized);\n  }\n\n  return normalized;\n}\n\n/**\n * Reverses the series, labels and series data arrays.\n */\nfunction reverseData(data: Data) {\n  data.labels?.reverse();\n  data.series.reverse();\n  for (const series of data.series) {\n    if (safeHasProperty(series, 'data')) {\n      series.data.reverse();\n    } else if (Array.isArray(series)) {\n      series.reverse();\n    }\n  }\n}\n\nfunction normalizeMulti(\n  value: number | string | boolean | Date | Multi,\n  multi?: boolean | AxisName\n) {\n  // We need to prepare multi value output (x and y data)\n  let x: number | undefined;\n  let y: number | undefined;\n\n  // Single series value arrays are assumed to specify the Y-Axis value\n  // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n  // If multi is a string then it's assumed that it specified which dimension should be filled as default\n  if (typeof value !== 'object') {\n    const num = getNumberOrUndefined(value);\n\n    if (multi === 'x') {\n      x = num;\n    } else {\n      y = num;\n    }\n  } else {\n    if (safeHasProperty(value, 'x')) {\n      x = getNumberOrUndefined(value.x);\n    }\n\n    if (safeHasProperty(value, 'y')) {\n      y = getNumberOrUndefined(value.y);\n    }\n  }\n\n  if (x === undefined && y === undefined) {\n    return undefined;\n  }\n\n  return { x, y } as NormalizedMulti;\n}\n\nfunction normalizePrimitive(\n  value: SeriesPrimitiveValue,\n  multi?: boolean | AxisName\n) {\n  if (isDataHoleValue(value)) {\n    // We're dealing with a hole in the data and therefore need to return undefined\n    // We're also returning undefined for multi value output\n    return undefined;\n  }\n\n  if (multi) {\n    return normalizeMulti(value, multi);\n  }\n\n  return getNumberOrUndefined(value);\n}\n\nfunction normalizeSingleSeries(\n  series: Series | SeriesObject,\n  multi?: boolean | AxisName\n): NormalizedSeries {\n  if (!Array.isArray(series)) {\n    // We are dealing with series object notation so we need to recurse on data property\n    return normalizeSingleSeries(series.data, multi);\n  }\n\n  return series.map(value => {\n    if (safeHasProperty(value, 'value')) {\n      // We are dealing with value object notation so we need to recurse on value property\n      return normalizePrimitive(value.value, multi);\n    }\n\n    return normalizePrimitive(value, multi);\n  });\n}\n\n/**\n * Convert data series into plain array\n * @param series The series object that contains the data to be visualized in the chart\n * @param multi Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n * @return A plain array that contains the data to be visualized in the chart\n */\nfunction normalizeSeries(\n  series: FlatSeries,\n  multi?: false,\n  distributed?: false\n): NormalizedFlatSeries;\nfunction normalizeSeries(\n  series: (Series | SeriesObject)[],\n  multi: true | AxisName,\n  distributed?: false\n): NormalizedSeries[];\nfunction normalizeSeries(\n  series: FlatSeries | (Series | SeriesObject)[],\n  multi: boolean | undefined | AxisName,\n  distributed: true\n): NormalizedSeries[];\nfunction normalizeSeries(\n  series: FlatSeries | (Series | SeriesObject)[],\n  multi?: boolean | undefined | AxisName,\n  distributed?: boolean\n): NormalizedFlatSeries | NormalizedSeries[];\nfunction normalizeSeries(\n  series: FlatSeries | (Series | SeriesObject)[],\n  multi?: boolean | undefined | AxisName,\n  distributed?: boolean\n) {\n  if (isArrayOfSeries(series)) {\n    return series.map(_ => normalizeSingleSeries(_, multi));\n  }\n\n  const normalizedSeries = normalizeSingleSeries(series, multi);\n\n  if (distributed) {\n    return normalizedSeries.map(value => [value]);\n  }\n\n  return normalizedSeries;\n}\n","import type { Segment, SegmentData } from '../types';\nimport { getMultiValue } from './data';\n\n/**\n * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n * valueData property describing the segment.\n *\n * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n * points with undefined values are discarded.\n *\n * **Options**\n * The following options are used to determine how segments are formed\n * ```javascript\n * var options = {\n *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n *   fillHoles: false,\n *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n *   increasingX: false\n * };\n * ```\n *\n * @param pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n * @param valueData List of associated point values in the form [v1, v2 .. vn]\n * @param options Options set by user\n * @return List of segments, each containing a pathCoordinates and valueData property.\n */\nexport function splitIntoSegments(\n  pathCoordinates: number[],\n  valueData: SegmentData[],\n  options?: {\n    increasingX?: boolean;\n    fillHoles?: boolean;\n  }\n) {\n  const finalOptions = {\n    increasingX: false,\n    fillHoles: false,\n    ...options\n  };\n\n  const segments: Segment[] = [];\n  let hole = true;\n\n  for (let i = 0; i < pathCoordinates.length; i += 2) {\n    // If this value is a \"hole\" we set the hole flag\n    if (getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n      if (!finalOptions.fillHoles) {\n        hole = true;\n      }\n    } else {\n      if (\n        finalOptions.increasingX &&\n        i >= 2 &&\n        pathCoordinates[i] <= pathCoordinates[i - 2]\n      ) {\n        // X is not increasing, so we need to make sure we start a new segment\n        hole = true;\n      }\n\n      // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n      if (hole) {\n        segments.push({\n          pathCoordinates: [],\n          valueData: []\n        });\n        // As we have a valid value now, we are not in a \"hole\" anymore\n        hole = false;\n      }\n\n      // Add to the segment pathCoordinates and valueData\n      segments[segments.length - 1].pathCoordinates.push(\n        pathCoordinates[i],\n        pathCoordinates[i + 1]\n      );\n      segments[segments.length - 1].valueData.push(valueData[i / 2]);\n    }\n  }\n\n  return segments;\n}\n","import { escapingMap } from '../constants';\n\n/**\n * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n * If called with null or undefined the function will return immediately with null or undefined.\n */\nexport function serialize(data: number | string | object): string;\nexport function serialize(\n  data: number | string | object | null | undefined | unknown\n): string | null | undefined;\nexport function serialize(\n  data: number | string | object | null | undefined | unknown\n) {\n  let serialized = '';\n\n  if (data === null || data === undefined) {\n    return data;\n  } else if (typeof data === 'number') {\n    serialized = '' + data;\n  } else if (typeof data === 'object') {\n    serialized = JSON.stringify({ data: data });\n  } else {\n    serialized = String(data);\n  }\n\n  return Object.keys(escapingMap).reduce(\n    (result, key) => result.replaceAll(key, escapingMap[key]),\n    serialized\n  );\n}\n\n/**\n * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n */\nexport function deserialize<T extends object | number | string = object>(\n  data: string\n): T;\nexport function deserialize<T extends object | number | string = object>(\n  data: string | null | undefined\n): T | null | undefined;\nexport function deserialize(data: unknown) {\n  if (typeof data !== 'string') {\n    return data;\n  }\n\n  if (data === 'NaN') {\n    return NaN;\n  }\n\n  data = Object.keys(escapingMap).reduce(\n    (result, key) => result.replaceAll(escapingMap[key], key),\n    data\n  );\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let parsedData: any = data;\n\n  if (typeof data === 'string') {\n    try {\n      parsedData = JSON.parse(data);\n      parsedData = parsedData.data !== undefined ? parsedData.data : parsedData;\n    } catch (e) {\n      /* Ingore */\n    }\n  }\n\n  return parsedData;\n}\n","import { Svg } from './Svg';\n\ntype SvgMethods = Exclude<\n  keyof Svg,\n  | 'constructor'\n  | 'parent'\n  | 'querySelector'\n  | 'querySelectorAll'\n  | 'replace'\n  | 'append'\n  | 'classes'\n  | 'height'\n  | 'width'\n>;\n\ntype SvgListMethods = {\n  [method in SvgMethods]: (...args: Parameters<Svg[method]>) => SvgList;\n};\n\n/**\n * This helper class is to wrap multiple `Svg` elements into a list where you can call the `Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Svg` on multiple elements.\n * An instance of this class is also returned by `Svg.querySelectorAll`.\n */\nexport class SvgList implements SvgListMethods {\n  private svgElements: Svg[] = [];\n\n  /**\n   * @param nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   */\n  constructor(nodeList: ArrayLike<Element>) {\n    for (let i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Svg(nodeList[i]));\n    }\n  }\n\n  private call<T extends SvgMethods>(method: T, args: Parameters<Svg[T]>) {\n    this.svgElements.forEach(element =>\n      Reflect.apply(element[method], element, args)\n    );\n    return this;\n  }\n\n  attr(...args: Parameters<Svg['attr']>) {\n    return this.call('attr', args);\n  }\n\n  elem(...args: Parameters<Svg['elem']>) {\n    return this.call('elem', args);\n  }\n\n  root(...args: Parameters<Svg['root']>) {\n    return this.call('root', args);\n  }\n\n  getNode(...args: Parameters<Svg['getNode']>) {\n    return this.call('getNode', args);\n  }\n\n  foreignObject(...args: Parameters<Svg['foreignObject']>) {\n    return this.call('foreignObject', args);\n  }\n\n  text(...args: Parameters<Svg['text']>) {\n    return this.call('text', args);\n  }\n\n  empty(...args: Parameters<Svg['empty']>) {\n    return this.call('empty', args);\n  }\n\n  remove(...args: Parameters<Svg['remove']>) {\n    return this.call('remove', args);\n  }\n\n  addClass(...args: Parameters<Svg['addClass']>) {\n    return this.call('addClass', args);\n  }\n\n  removeClass(...args: Parameters<Svg['removeClass']>) {\n    return this.call('removeClass', args);\n  }\n\n  removeAllClasses(...args: Parameters<Svg['removeAllClasses']>) {\n    return this.call('removeAllClasses', args);\n  }\n\n  animate(...args: Parameters<Svg['animate']>) {\n    return this.call('animate', args);\n  }\n}\n","import type { EventEmitter } from '../event';\nimport { ensureUnit, quantity } from '../core/lang';\nimport type { Attributes, AnimationDefinition, AnimationEvent } from './types';\nimport type { Svg } from './Svg';\n\n/**\n * This Object contains some standard easing cubic bezier curves.\n * Then can be used with their name in the `Svg.animate`.\n * You can also extend the list and use your own name in the `animate` function.\n * Click the show code button to see the available bezier functions.\n */\nexport const easings = {\n  easeInSine: [0.47, 0, 0.745, 0.715],\n  easeOutSine: [0.39, 0.575, 0.565, 1],\n  easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n  easeInQuad: [0.55, 0.085, 0.68, 0.53],\n  easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n  easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n  easeInCubic: [0.55, 0.055, 0.675, 0.19],\n  easeOutCubic: [0.215, 0.61, 0.355, 1],\n  easeInOutCubic: [0.645, 0.045, 0.355, 1],\n  easeInQuart: [0.895, 0.03, 0.685, 0.22],\n  easeOutQuart: [0.165, 0.84, 0.44, 1],\n  easeInOutQuart: [0.77, 0, 0.175, 1],\n  easeInQuint: [0.755, 0.05, 0.855, 0.06],\n  easeOutQuint: [0.23, 1, 0.32, 1],\n  easeInOutQuint: [0.86, 0, 0.07, 1],\n  easeInExpo: [0.95, 0.05, 0.795, 0.035],\n  easeOutExpo: [0.19, 1, 0.22, 1],\n  easeInOutExpo: [1, 0, 0, 1],\n  easeInCirc: [0.6, 0.04, 0.98, 0.335],\n  easeOutCirc: [0.075, 0.82, 0.165, 1],\n  easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n  easeInBack: [0.6, -0.28, 0.735, 0.045],\n  easeOutBack: [0.175, 0.885, 0.32, 1.275],\n  easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n};\n\nexport function createAnimation(\n  element: Svg,\n  attribute: string,\n  animationDefinition: AnimationDefinition,\n  createGuided = false,\n  eventEmitter?: EventEmitter\n) {\n  const { easing, ...def } = animationDefinition;\n  const attributeProperties: Attributes = {};\n  let animationEasing;\n  let timeout;\n\n  // Check if an easing is specified in the definition object and delete it from the object as it will not\n  // be part of the animate element attributes.\n  if (easing) {\n    // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n    animationEasing = Array.isArray(easing) ? easing : easings[easing];\n  }\n\n  // If numeric dur or begin was provided we assume milli seconds\n  def.begin = ensureUnit(def.begin, 'ms');\n  def.dur = ensureUnit(def.dur, 'ms');\n\n  if (animationEasing) {\n    def.calcMode = 'spline';\n    def.keySplines = animationEasing.join(' ');\n    def.keyTimes = '0;1';\n  }\n\n  // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n  if (createGuided) {\n    def.fill = 'freeze';\n    // Animated property on our element should already be set to the animation from value in guided mode\n    attributeProperties[attribute] = def.from;\n    element.attr(attributeProperties);\n\n    // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n    // which needs to be in ms aside\n    timeout = quantity(def.begin || 0).value;\n    def.begin = 'indefinite';\n  }\n\n  const animate = element.elem('animate', {\n    attributeName: attribute,\n    ...def\n  });\n\n  if (createGuided) {\n    // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n    setTimeout(() => {\n      // If beginElement fails we set the animated attribute to the end position and remove the animate element\n      // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occurred in\n      // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n      try {\n        // @ts-expect-error Try legacy API.\n        animate._node.beginElement();\n      } catch (err) {\n        // Set animated attribute to current animated value\n        attributeProperties[attribute] = def.to;\n        element.attr(attributeProperties);\n        // Remove the animate element as it's no longer required\n        animate.remove();\n      }\n    }, timeout);\n  }\n\n  const animateNode = animate.getNode();\n\n  if (eventEmitter) {\n    animateNode.addEventListener('beginEvent', () =>\n      eventEmitter.emit<AnimationEvent>('animationBegin', {\n        element: element,\n        animate: animateNode,\n        params: animationDefinition\n      })\n    );\n  }\n\n  animateNode.addEventListener('endEvent', () => {\n    if (eventEmitter) {\n      eventEmitter.emit<AnimationEvent>('animationEnd', {\n        element: element,\n        animate: animateNode,\n        params: animationDefinition\n      });\n    }\n\n    if (createGuided) {\n      // Set animated attribute to current animated value\n      attributeProperties[attribute] = def.to;\n      element.attr(attributeProperties);\n      // Remove the animate element as it's no longer required\n      animate.remove();\n    }\n  });\n}\n","import type { EventEmitter } from '../event';\nimport { namespaces } from '../core/constants';\nimport type { Attributes, AnimationDefinition } from './types';\nimport { SvgList } from './SvgList';\nimport { createAnimation, easings } from './animation';\n\n/**\n * Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n */\nexport class Svg {\n  /**\n   * @todo Only there for chartist <1 compatibility. Remove after deprecation warining.\n   * @deprecated Use the animation module export `easings` directly.\n   */\n  static readonly Easing = easings;\n\n  private _node: Element;\n\n  /**\n   * @param name The name of the SVG element to create or an SVG dom element which should be wrapped into Svg\n   * @param attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param className This class or class list will be added to the SVG element\n   * @param parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  constructor(\n    name: string | Element,\n    attributes?: Attributes,\n    className?: string,\n    parent?: Svg,\n    insertFirst = false\n  ) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if (name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if (name === 'svg') {\n        this.attr({\n          'xmlns:ct': namespaces.ct\n        });\n      }\n    }\n\n    if (attributes) {\n      this.attr(attributes);\n    }\n\n    if (className) {\n      this.addClass(className);\n    }\n\n    if (parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   * @param attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param ns If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  attr(attributes: string, ns?: string): string | null;\n  attr(attributes: Attributes): this;\n  attr(attributes: string | Attributes, ns?: string) {\n    if (typeof attributes === 'string') {\n      if (ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(key => {\n      // If the attribute value is undefined we can skip this one\n      if (attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        const namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(\n          namespaces[namespacedAttribute[0]],\n          key,\n          String(attributes[key])\n        );\n      } else {\n        this._node.setAttribute(key, String(attributes[key]));\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   * @param name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param className This class or class list will be added to the SVG element\n   * @param insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return Returns a Svg wrapper object that can be used to modify the containing SVG data\n   */\n  elem(\n    name: string,\n    attributes?: Attributes,\n    className?: string,\n    insertFirst = false\n  ) {\n    return new Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   * @return Returns a Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  parent() {\n    return this._node.parentNode instanceof SVGElement\n      ? new Svg(this._node.parentNode)\n      : null;\n  }\n\n  /**\n   * This method returns a Svg wrapper around the root SVG element of the current tree.\n   * @return The root SVG element wrapped in a Svg element\n   */\n  root() {\n    let node = this._node;\n\n    while (node.nodeName !== 'svg') {\n      if (node.parentElement) {\n        node = node.parentElement;\n      } else {\n        break;\n      }\n    }\n\n    return new Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Svg wrapper.\n   * @param selector A CSS selector that is used to query for child SVG elements\n   * @return The SVG wrapper for the element found or null if no element was found\n   */\n  querySelector(selector: string) {\n    const foundNode = this._node.querySelector(selector);\n    return foundNode ? new Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Svg.List wrapper.\n   * @param selector A CSS selector that is used to query for child SVG elements\n   * @return The SVG wrapper list for the element found or null if no element was found\n   */\n  querySelectorAll(selector: string) {\n    const foundNodes = this._node.querySelectorAll(selector);\n    return new SvgList(foundNodes);\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   */\n  getNode<T extends Element = Element>() {\n    return this._node as T;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   * @param content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param attributes An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param className This class or class list will be added to the SVG element\n   * @param insertFirst Specifies if the foreignObject should be inserted as first child\n   * @return New wrapper object that wraps the foreignObject element\n   */\n  foreignObject(\n    content: string | Node,\n    attributes?: Attributes,\n    className?: string,\n    insertFirst = false\n  ) {\n    let contentNode: Node;\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if (typeof content === 'string') {\n      const container = document.createElement('div');\n      container.innerHTML = content;\n      contentNode = container.firstChild as Node;\n    } else {\n      contentNode = content;\n    }\n\n    if (contentNode instanceof Element) {\n      // Adding namespace to content element\n      contentNode.setAttribute('xmlns', namespaces.xmlns);\n    }\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    const fnObj = this.elem(\n      'foreignObject',\n      attributes,\n      className,\n      insertFirst\n    );\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(contentNode);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Svg wrapper.\n   * @param t The text that should be added to the text element that is created\n   * @return The same wrapper object that was used to add the newly created element\n   */\n  text(t: string) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   * @return The same wrapper object that got emptied\n   */\n  empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   * @return The parent wrapper object of the element that got removed\n   */\n  remove() {\n    this._node.parentNode?.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   * @param newElement The new Svg object that will be used to replace the current wrapper object\n   * @return The wrapper of the new element\n   */\n  replace(newElement: Svg) {\n    this._node.parentNode?.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   * @param element The Svg element that should be added as a child\n   * @param insertFirst Specifies if the element should be inserted as first child\n   * @return The wrapper of the appended object\n   */\n  append(element: Svg, insertFirst = false) {\n    if (insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   * @return A list of classes or an empty array if there are no classes on the current element\n   */\n  classes() {\n    const classNames = this._node.getAttribute('class');\n\n    return classNames ? classNames.trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   * @param names A white space separated list of class names\n   * @return The wrapper of the current element\n   */\n  addClass(names: string) {\n    this._node.setAttribute(\n      'class',\n      this.classes()\n        .concat(names.trim().split(/\\s+/))\n        .filter(function (elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        })\n        .join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   * @param names A white space separated list of class names\n   * @return The wrapper of the current element\n   */\n  removeClass(names: string) {\n    const removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute(\n      'class',\n      this.classes()\n        .filter(name => removedClasses.indexOf(name) === -1)\n        .join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   * @return The wrapper of the current element\n   */\n  removeAllClasses() {\n    this._node.setAttribute('class', '');\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   * @return The elements height in pixels\n   */\n  height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   * @return The elements width in pixels\n   */\n  width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   * @param animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return The current element where the animation was added\n   */\n  animate(\n    animations: Record<string, AnimationDefinition | AnimationDefinition[]>,\n    guided = true,\n    eventEmitter?: EventEmitter\n  ) {\n    Object.keys(animations).forEach(attribute => {\n      const attributeAnimation = animations[attribute];\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if (Array.isArray(attributeAnimation)) {\n        attributeAnimation.forEach(animationDefinition =>\n          createAnimation(\n            this,\n            attribute,\n            animationDefinition,\n            false,\n            eventEmitter\n          )\n        );\n      } else {\n        createAnimation(\n          this,\n          attribute,\n          attributeAnimation,\n          guided,\n          eventEmitter\n        );\n      }\n    });\n\n    return this;\n  }\n}\n","import type {\n  ChartPadding,\n  ChartRect,\n  Options,\n  Label,\n  GridDrawEvent,\n  GridBackgroundDrawEvent,\n  LabelDrawEvent\n} from './types';\nimport type { EventEmitter } from '../event';\nimport type { Axis } from '../axes';\nimport { namespaces } from './constants';\nimport { Svg } from '../svg/Svg';\nimport { quantity } from './lang';\n\n/**\n * Create or reinitialize the SVG element for the chart\n * @param container The containing DOM Node object that will be used to plant the SVG element\n * @param width Set the width of the SVG element. Default is 100%\n * @param height Set the height of the SVG element. Default is 100%\n * @param className Specify a class to be added to the SVG element\n * @return The created/reinitialized SVG element\n */\nexport function createSvg(\n  container: Element,\n  width: number | string = '100%',\n  height: number | string = '100%',\n  className?: string\n) {\n  // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n  // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n  Array.from(container.querySelectorAll('svg'))\n    .filter(svg => svg.getAttributeNS(namespaces.xmlns, 'ct'))\n    .forEach(svg => container.removeChild(svg));\n\n  // Create svg object with width and height or use 100% as default\n  const svg = new Svg('svg')\n    .attr({\n      width,\n      height\n    })\n    .attr({\n      // TODO: Check better solution (browser support) and remove inline styles due to CSP\n      style: `width: ${width}; height: ${height};`\n    });\n\n  if (className) {\n    svg.addClass(className);\n  }\n\n  // Add the DOM node to our container\n  container.appendChild(svg.getNode());\n\n  return svg;\n}\n\n/**\n * Converts a number into a padding object.\n * @param padding\n * @param fallback This value is used to fill missing values if a incomplete padding object was passed\n * @returns Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n */\nexport function normalizePadding(\n  padding: number | Partial<ChartPadding> | undefined\n) {\n  return typeof padding === 'number'\n    ? {\n        top: padding,\n        right: padding,\n        bottom: padding,\n        left: padding\n      }\n    : padding === undefined\n    ? { top: 0, right: 0, bottom: 0, left: 0 }\n    : {\n        top: typeof padding.top === 'number' ? padding.top : 0,\n        right: typeof padding.right === 'number' ? padding.right : 0,\n        bottom: typeof padding.bottom === 'number' ? padding.bottom : 0,\n        left: typeof padding.left === 'number' ? padding.left : 0\n      };\n}\n\n/**\n * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n * @param svg The svg element for the chart\n * @param options The Object that contains all the optional values for the chart\n * @return The chart rectangles coordinates inside the svg element plus the rectangles measurements\n */\nexport function createChartRect(svg: Svg, options: Options) {\n  const hasAxis = Boolean(options.axisX || options.axisY);\n  const yAxisOffset = options.axisY?.offset || 0;\n  const xAxisOffset = options.axisX?.offset || 0;\n  const yAxisPosition = options.axisY?.position;\n  const xAxisPosition = options.axisX?.position;\n  // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n  let width = svg.width() || quantity(options.width).value || 0;\n  let height = svg.height() || quantity(options.height).value || 0;\n  const normalizedPadding = normalizePadding(options.chartPadding);\n\n  // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n  width = Math.max(\n    width,\n    yAxisOffset + normalizedPadding.left + normalizedPadding.right\n  );\n  height = Math.max(\n    height,\n    xAxisOffset + normalizedPadding.top + normalizedPadding.bottom\n  );\n\n  const chartRect = {\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 0,\n    padding: normalizedPadding,\n    width() {\n      return this.x2 - this.x1;\n    },\n    height() {\n      return this.y1 - this.y2;\n    }\n  };\n\n  if (hasAxis) {\n    if (xAxisPosition === 'start') {\n      chartRect.y2 = normalizedPadding.top + xAxisOffset;\n      chartRect.y1 = Math.max(\n        height - normalizedPadding.bottom,\n        chartRect.y2 + 1\n      );\n    } else {\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(\n        height - normalizedPadding.bottom - xAxisOffset,\n        chartRect.y2 + 1\n      );\n    }\n\n    if (yAxisPosition === 'start') {\n      chartRect.x1 = normalizedPadding.left + yAxisOffset;\n      chartRect.x2 = Math.max(\n        width - normalizedPadding.right,\n        chartRect.x1 + 1\n      );\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(\n        width - normalizedPadding.right - yAxisOffset,\n        chartRect.x1 + 1\n      );\n    }\n  } else {\n    chartRect.x1 = normalizedPadding.left;\n    chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n    chartRect.y2 = normalizedPadding.top;\n    chartRect.y1 = Math.max(\n      height - normalizedPadding.bottom,\n      chartRect.y2 + 1\n    );\n  }\n\n  return chartRect;\n}\n\n/**\n * Creates a grid line based on a projected value.\n */\nexport function createGrid(\n  position: number,\n  index: number,\n  axis: Axis,\n  offset: number,\n  length: number,\n  group: Svg,\n  classes: string[],\n  eventEmitter: EventEmitter\n) {\n  const positionalData = {\n    [`${axis.units.pos}1`]: position,\n    [`${axis.units.pos}2`]: position,\n    [`${axis.counterUnits.pos}1`]: offset,\n    [`${axis.counterUnits.pos}2`]: offset + length\n  } as Record<'x1' | 'y1' | 'x2' | 'y2', number>;\n\n  const gridElement = group.elem('line', positionalData, classes.join(' '));\n\n  // Event for grid draw\n  eventEmitter.emit<GridDrawEvent>('draw', {\n    type: 'grid',\n    axis,\n    index,\n    group,\n    element: gridElement,\n    ...positionalData\n  });\n}\n\n/**\n * Creates a grid background rect and emits the draw event.\n */\nexport function createGridBackground(\n  gridGroup: Svg,\n  chartRect: ChartRect,\n  className: string,\n  eventEmitter: EventEmitter\n) {\n  const gridBackground = gridGroup.elem(\n    'rect',\n    {\n      x: chartRect.x1,\n      y: chartRect.y2,\n      width: chartRect.width(),\n      height: chartRect.height()\n    },\n    className,\n    true\n  );\n\n  // Event for grid background draw\n  eventEmitter.emit<GridBackgroundDrawEvent>('draw', {\n    type: 'gridBackground',\n    group: gridGroup,\n    element: gridBackground\n  });\n}\n\n/**\n * Creates a label based on a projected value and an axis.\n */\nexport function createLabel(\n  position: number,\n  length: number,\n  index: number,\n  label: Label,\n  axis: Axis,\n  axisOffset: number,\n  labelOffset: { x: number; y: number },\n  group: Svg,\n  classes: string[],\n  eventEmitter: EventEmitter\n) {\n  const positionalData = {\n    [axis.units.pos]: position + labelOffset[axis.units.pos],\n    [axis.counterUnits.pos]: labelOffset[axis.counterUnits.pos],\n    [axis.units.len]: length,\n    [axis.counterUnits.len]: Math.max(0, axisOffset - 10)\n  } as Record<'x' | 'y' | 'width' | 'height', number>;\n  // We need to set width and height explicitly to px as span will not expand with width and height being\n  // 100% in all browsers\n  const stepLength = Math.round(positionalData[axis.units.len]);\n  const stepCounterLength = Math.round(positionalData[axis.counterUnits.len]);\n  const content = document.createElement('span');\n\n  content.className = classes.join(' ');\n  content.style[axis.units.len] = stepLength + 'px';\n  content.style[axis.counterUnits.len] = stepCounterLength + 'px';\n  content.textContent = String(label);\n\n  const labelElement = group.foreignObject(content, {\n    style: 'overflow: visible;',\n    ...positionalData\n  });\n\n  eventEmitter.emit<LabelDrawEvent>('draw', {\n    type: 'label',\n    axis,\n    index,\n    group,\n    element: labelElement,\n    text: label,\n    ...positionalData\n  });\n}\n","import type { EventEmitter } from '../event';\nimport type { OptionsChangedEvent, ResponsiveOptions } from './types';\nimport { extend } from '../utils';\n\nexport interface OptionsProvider<T = unknown> {\n  removeMediaQueryListeners(): void;\n  getCurrentOptions(): T;\n}\n\n/**\n * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n * @param options Options set by user\n * @param responsiveOptions Optional functions to add responsive behavior to chart\n * @param eventEmitter The event emitter that will be used to emit the options changed events\n * @return The consolidated options object from the defaults, base and matching responsive options\n */\nexport function optionsProvider<T = unknown>(\n  options: T,\n  responsiveOptions: ResponsiveOptions<T> | undefined,\n  eventEmitter: EventEmitter\n): OptionsProvider<T> {\n  let currentOptions: T;\n  const mediaQueryListeners: MediaQueryList[] = [];\n\n  function updateCurrentOptions(mediaEvent?: Event) {\n    const previousOptions = currentOptions;\n    currentOptions = extend({}, options);\n\n    if (responsiveOptions) {\n      responsiveOptions.forEach(responsiveOption => {\n        const mql = window.matchMedia(responsiveOption[0]);\n        if (mql.matches) {\n          currentOptions = extend(currentOptions, responsiveOption[1]);\n        }\n      });\n    }\n\n    if (eventEmitter && mediaEvent) {\n      eventEmitter.emit<OptionsChangedEvent<T>>('optionsChanged', {\n        previousOptions,\n        currentOptions\n      });\n    }\n  }\n\n  function removeMediaQueryListeners() {\n    mediaQueryListeners.forEach(mql =>\n      mql.removeEventListener('change', updateCurrentOptions)\n    );\n  }\n\n  if (!window.matchMedia) {\n    throw new Error(\n      \"window.matchMedia not found! Make sure you're using a polyfill.\"\n    );\n  } else if (responsiveOptions) {\n    responsiveOptions.forEach(responsiveOption => {\n      const mql = window.matchMedia(responsiveOption[0]);\n      mql.addEventListener('change', updateCurrentOptions);\n      mediaQueryListeners.push(mql);\n    });\n  }\n  // Execute initially without an event argument so we get the correct options\n  updateCurrentOptions();\n\n  return {\n    removeMediaQueryListeners,\n    getCurrentOptions() {\n      return currentOptions;\n    }\n  };\n}\n","import type { SegmentData } from '../core';\nimport type { SvgPathOptions, PathCommand, PathParams } from './types';\n\n/**\n * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n */\nconst elementDescriptions: Record<string, string[]> = {\n  m: ['x', 'y'],\n  l: ['x', 'y'],\n  c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n  a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n};\n\n/**\n * Default options for newly created SVG path objects.\n */\nconst defaultOptions = {\n  // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n  accuracy: 3\n};\n\nfunction element(\n  command: string,\n  params: PathParams,\n  pathElements: PathCommand[],\n  pos: number,\n  relative: boolean,\n  data?: SegmentData\n) {\n  const pathElement: PathCommand = {\n    command: relative ? command.toLowerCase() : command.toUpperCase(),\n    ...params,\n    ...(data ? { data } : {})\n  };\n\n  pathElements.splice(pos, 0, pathElement);\n}\n\nfunction forEachParam<T extends PathParams = PathParams>(\n  pathElements: PathCommand<T>[],\n  cb: (\n    cmd: PathCommand<T>,\n    param: keyof T,\n    cmdIndex: number,\n    paramIndex: number,\n    cmds: PathCommand<T>[]\n  ) => void\n) {\n  pathElements.forEach((pathElement, pathElementIndex) => {\n    elementDescriptions[pathElement.command.toLowerCase()].forEach(\n      (paramName, paramIndex) => {\n        cb(\n          pathElement,\n          paramName as keyof PathParams,\n          pathElementIndex,\n          paramIndex,\n          pathElements\n        );\n      }\n    );\n  });\n}\n\nexport class SvgPath {\n  /**\n   * This static function on `SvgPath` is joining multiple paths together into one paths.\n   * @param paths A list of paths to be joined together. The order is important.\n   * @param close If the newly created path should be a closed path\n   * @param options Path options for the newly created path.\n   */\n  static join(paths: SvgPath[], close = false, options?: SvgPathOptions) {\n    const joinedPath = new SvgPath(close, options);\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      for (let j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  pathElements: PathCommand[] = [];\n  private pos = 0;\n  private options: Required<SvgPathOptions>;\n\n  /**\n   * Used to construct a new path object.\n   * @param close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param options Options object that overrides the default objects. See default options for more details.\n   */\n  constructor(private readonly close = false, options?: SvgPathOptions) {\n    this.options = { ...defaultOptions, ...options };\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   * @param pos If a number is passed then the cursor is set to this position in the path element array.\n   * @return If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  position(pos: number): this;\n  position(): number;\n  position(pos?: number) {\n    if (pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   * @param count Number of path elements that should be removed from the current position.\n   * @return The current path object for easy call chaining.\n   */\n  remove(count: number) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   * @param x The x coordinate for the move element.\n   * @param y The y coordinate for the move element.\n   * @param relative If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */\n  move(x: number, y: number, relative = false, data?: SegmentData) {\n    element(\n      'M',\n      {\n        x: +x,\n        y: +y\n      },\n      this.pathElements,\n      this.pos++,\n      relative,\n      data\n    );\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   * @param x The x coordinate for the line element.\n   * @param y The y coordinate for the line element.\n   * @param relative If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */\n  line(x: number, y: number, relative = false, data?: SegmentData) {\n    element(\n      'L',\n      {\n        x: +x,\n        y: +y\n      },\n      this.pathElements,\n      this.pos++,\n      relative,\n      data\n    );\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   * @param x1 The x coordinate for the first control point of the bezier curve.\n   * @param y1 The y coordinate for the first control point of the bezier curve.\n   * @param x2 The x coordinate for the second control point of the bezier curve.\n   * @param y2 The y coordinate for the second control point of the bezier curve.\n   * @param x The x coordinate for the target point of the curve element.\n   * @param y The y coordinate for the target point of the curve element.\n   * @param relative If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */\n  curve(\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    x: number,\n    y: number,\n    relative = false,\n    data?: SegmentData\n  ) {\n    element(\n      'C',\n      {\n        x1: +x1,\n        y1: +y1,\n        x2: +x2,\n        y2: +y2,\n        x: +x,\n        y: +y\n      },\n      this.pathElements,\n      this.pos++,\n      relative,\n      data\n    );\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   * @param rx The radius to be used for the x-axis of the arc.\n   * @param ry The radius to be used for the y-axis of the arc.\n   * @param xAr Defines the orientation of the arc\n   * @param lAf Large arc flag\n   * @param sf Sweep flag\n   * @param x The x coordinate for the target point of the curve element.\n   * @param y The y coordinate for the target point of the curve element.\n   * @param relative If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param data Any data that should be stored with the element object that will be accessible in pathElement\n   * @return The current path object for easy call chaining.\n   */\n  arc(\n    rx: number,\n    ry: number,\n    xAr: number,\n    lAf: number,\n    sf: number,\n    x: number,\n    y: number,\n    relative = false,\n    data?: SegmentData\n  ) {\n    element(\n      'A',\n      {\n        rx,\n        ry,\n        xAr,\n        lAf,\n        sf,\n        x,\n        y\n      },\n      this.pathElements,\n      this.pos++,\n      relative,\n      data\n    );\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   * @param path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return The current path object for easy call chaining.\n   */\n  parse(path: string) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    const chunks = path\n      .replace(/([A-Za-z])(-?[0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce<string[][]>((result, pathElement) => {\n        if (pathElement.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(pathElement);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if (chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    const elements = chunks.map(chunk => {\n      const command = chunk.shift() as string;\n      const description = elementDescriptions[command.toLowerCase()];\n\n      return {\n        command,\n        ...description.reduce<Record<string, number>>(\n          (result, paramName, index) => {\n            result[paramName] = +chunk[index];\n            return result;\n          },\n          {}\n        )\n      } as PathCommand;\n    });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    this.pathElements.splice(this.pos, 0, ...elements);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   */\n  stringify() {\n    const accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return (\n      this.pathElements.reduce((path, pathElement) => {\n        const params = elementDescriptions[\n          pathElement.command.toLowerCase()\n        ].map(paramName => {\n          const value = pathElement[paramName as keyof PathCommand] as number;\n\n          return this.options.accuracy\n            ? Math.round(value * accuracyMultiplier) / accuracyMultiplier\n            : value;\n        });\n\n        return path + pathElement.command + params.join(',');\n      }, '') + (this.close ? 'Z' : '')\n    );\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   * @param x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return The current path object for easy call chaining.\n   */\n  scale(x: number, y: number) {\n    forEachParam(this.pathElements, (pathElement, paramName) => {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   * @param x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return The current path object for easy call chaining.\n   */\n  translate(x: number, y: number) {\n    forEachParam(this.pathElements, (pathElement, paramName) => {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   * @param transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return The current path object for easy call chaining.\n   */\n  transform(\n    transformFnc: <T extends PathParams = PathParams>(\n      cmd: PathCommand<T>,\n      param: keyof T,\n      cmdIndex: number,\n      paramIndex: number,\n      cmds: PathCommand<T>[]\n    ) => number | void\n  ) {\n    forEachParam(\n      this.pathElements,\n      (pathElement, paramName, pathElementIndex, paramIndex, pathElements) => {\n        const transformed = transformFnc(\n          pathElement,\n          paramName,\n          pathElementIndex,\n          paramIndex,\n          pathElements\n        );\n        if (transformed || transformed === 0) {\n          pathElement[paramName] = transformed;\n        }\n      }\n    );\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   * @param close Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   */\n  clone(close = false) {\n    const clone = new SvgPath(close || this.close);\n    clone.pos = this.pos;\n    clone.pathElements = this.pathElements\n      .slice()\n      .map(pathElement => ({ ...pathElement }));\n    clone.options = { ...this.options };\n    return clone;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   * @param command The command you'd like to use to split the path\n   */\n  splitByCommand(command: string) {\n    const split = [new SvgPath()];\n\n    this.pathElements.forEach(pathElement => {\n      if (\n        pathElement.command === command.toUpperCase() &&\n        split[split.length - 1].pathElements.length !== 0\n      ) {\n        split.push(new SvgPath());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n}\n","import type { SegmentData } from '../core';\nimport { getMultiValue } from '../core';\nimport { SvgPath } from '../svg';\n\nexport interface NoneInterpolationOptions {\n  fillHoles?: boolean;\n}\n\n/**\n * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n *\n * @example\n * ```ts\n * const chart = new LineChart('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.none({\n *     fillHoles: false\n *   })\n * });\n * ```\n */\nexport function none(options?: NoneInterpolationOptions) {\n  const finalOptions = {\n    fillHoles: false,\n    ...options\n  };\n\n  return function noneInterpolation(\n    pathCoordinates: number[],\n    valueData: SegmentData[]\n  ) {\n    const path = new SvgPath();\n    let hole = true;\n\n    for (let i = 0; i < pathCoordinates.length; i += 2) {\n      const currX = pathCoordinates[i];\n      const currY = pathCoordinates[i + 1];\n      const currData = valueData[i / 2];\n\n      if (getMultiValue(currData.value) !== undefined) {\n        if (hole) {\n          path.move(currX, currY, false, currData);\n        } else {\n          path.line(currX, currY, false, currData);\n        }\n\n        hole = false;\n      } else if (!finalOptions.fillHoles) {\n        hole = true;\n      }\n    }\n\n    return path;\n  };\n}\n","import type { SegmentData } from '../core/types';\nimport { SvgPath } from '../svg';\n\nexport interface SimpleInteractionOptions {\n  divisor?: number;\n  fillHoles?: boolean;\n}\n\n/**\n * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n *\n * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n *\n * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n *\n * @example\n * ```ts\n * const chart = new LineChart('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.simple({\n *     divisor: 2,\n *     fillHoles: false\n *   })\n * });\n * ```\n *\n * @param options The options of the simple interpolation factory function.\n */\nexport function simple(options?: SimpleInteractionOptions) {\n  const finalOptions = {\n    divisor: 2,\n    fillHoles: false,\n    ...options\n  };\n\n  const d = 1 / Math.max(1, finalOptions.divisor);\n\n  return function simpleInterpolation(\n    pathCoordinates: number[],\n    valueData: SegmentData[]\n  ) {\n    const path = new SvgPath();\n    let prevX = 0;\n    let prevY = 0;\n    let prevData;\n\n    for (let i = 0; i < pathCoordinates.length; i += 2) {\n      const currX = pathCoordinates[i];\n      const currY = pathCoordinates[i + 1];\n      const length = (currX - prevX) * d;\n      const currData = valueData[i / 2];\n\n      if (currData.value !== undefined) {\n        if (prevData === undefined) {\n          path.move(currX, currY, false, currData);\n        } else {\n          path.curve(\n            prevX + length,\n            prevY,\n            currX - length,\n            currY,\n            currX,\n            currY,\n            false,\n            currData\n          );\n        }\n\n        prevX = currX;\n        prevY = currY;\n        prevData = currData;\n      } else if (!finalOptions.fillHoles) {\n        prevX = prevY = 0;\n        prevData = undefined;\n      }\n    }\n\n    return path;\n  };\n}\n","import type { SegmentData } from '../core';\nimport { SvgPath } from '../svg';\n\nexport interface StepInterpolationOptions {\n  postpone?: boolean;\n  fillHoles?: boolean;\n}\n\n/**\n * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n *\n * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n *\n * @example\n * ```ts\n * const chart = new Chartist.Line('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.step({\n *     postpone: true,\n *     fillHoles: false\n *   })\n * });\n * ```\n */\nexport function step(options?: StepInterpolationOptions) {\n  const finalOptions = {\n    postpone: true,\n    fillHoles: false,\n    ...options\n  };\n\n  return function stepInterpolation(\n    pathCoordinates: number[],\n    valueData: SegmentData[]\n  ) {\n    const path = new SvgPath();\n\n    let prevX = 0;\n    let prevY = 0;\n    let prevData;\n\n    for (let i = 0; i < pathCoordinates.length; i += 2) {\n      const currX = pathCoordinates[i];\n      const currY = pathCoordinates[i + 1];\n      const currData = valueData[i / 2];\n\n      // If the current point is also not a hole we can draw the step lines\n      if (currData.value !== undefined) {\n        if (prevData === undefined) {\n          path.move(currX, currY, false, currData);\n        } else {\n          if (finalOptions.postpone) {\n            // If postponed we should draw the step line with the value of the previous value\n            path.line(currX, prevY, false, prevData);\n          } else {\n            // If not postponed we should draw the step line with the value of the current value\n            path.line(prevX, currY, false, currData);\n          }\n          // Line to the actual point (this should only be a Y-Axis movement\n          path.line(currX, currY, false, currData);\n        }\n\n        prevX = currX;\n        prevY = currY;\n        prevData = currData;\n      } else if (!finalOptions.fillHoles) {\n        prevX = prevY = 0;\n        prevData = undefined;\n      }\n    }\n\n    return path;\n  };\n}\n","import type { SegmentData } from '../core';\nimport { splitIntoSegments } from '../core';\nimport { SvgPath } from '../svg';\nimport { none } from './none';\n\nexport interface CardinalInterpolationOptions {\n  tension?: number;\n  fillHoles?: boolean;\n}\n\n/**\n * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n *\n * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n *\n * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n *\n * @example\n * ```ts\n * const chart = new LineChart('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.cardinal({\n *     tension: 1,\n *     fillHoles: false\n *   })\n * });\n * ```\n *\n * @param options The options of the cardinal factory function.\n */\nexport function cardinal(options?: CardinalInterpolationOptions) {\n  const finalOptions = {\n    tension: 1,\n    fillHoles: false,\n    ...options\n  };\n\n  const t = Math.min(1, Math.max(0, finalOptions.tension));\n  const c = 1 - t;\n\n  return function cardinalInterpolation(\n    pathCoordinates: number[],\n    valueData: SegmentData[]\n  ): SvgPath {\n    // First we try to split the coordinates into segments\n    // This is necessary to treat \"holes\" in line charts\n    const segments = splitIntoSegments(pathCoordinates, valueData, {\n      fillHoles: finalOptions.fillHoles\n    });\n\n    if (!segments.length) {\n      // If there were no segments return 'none' interpolation\n      return none()([], []);\n    } else if (segments.length > 1) {\n      // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n      // afterwards together into a single path.\n      // For each segment we will recurse the cardinal function\n      // Join the segment path data into a single path and return\n      return SvgPath.join(\n        segments.map(segment =>\n          cardinalInterpolation(segment.pathCoordinates, segment.valueData)\n        )\n      );\n    } else {\n      // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n      // segment\n      pathCoordinates = segments[0].pathCoordinates;\n      valueData = segments[0].valueData;\n\n      // If less than two points we need to fallback to no smoothing\n      if (pathCoordinates.length <= 4) {\n        return none()(pathCoordinates, valueData);\n      }\n\n      const path = new SvgPath().move(\n        pathCoordinates[0],\n        pathCoordinates[1],\n        false,\n        valueData[0]\n      );\n      const z = false;\n\n      for (\n        let i = 0, iLen = pathCoordinates.length;\n        iLen - 2 * Number(!z) > i;\n        i += 2\n      ) {\n        const p = [\n          { x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1] },\n          { x: +pathCoordinates[i], y: +pathCoordinates[i + 1] },\n          { x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3] },\n          { x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5] }\n        ];\n\n        if (z) {\n          if (!i) {\n            p[0] = {\n              x: +pathCoordinates[iLen - 2],\n              y: +pathCoordinates[iLen - 1]\n            };\n          } else if (iLen - 4 === i) {\n            p[3] = { x: +pathCoordinates[0], y: +pathCoordinates[1] };\n          } else if (iLen - 2 === i) {\n            p[2] = { x: +pathCoordinates[0], y: +pathCoordinates[1] };\n            p[3] = { x: +pathCoordinates[2], y: +pathCoordinates[3] };\n          }\n        } else {\n          if (iLen - 4 === i) {\n            p[3] = p[2];\n          } else if (!i) {\n            p[0] = { x: +pathCoordinates[i], y: +pathCoordinates[i + 1] };\n          }\n        }\n\n        path.curve(\n          (t * (-p[0].x + 6 * p[1].x + p[2].x)) / 6 + c * p[2].x,\n          (t * (-p[0].y + 6 * p[1].y + p[2].y)) / 6 + c * p[2].y,\n          (t * (p[1].x + 6 * p[2].x - p[3].x)) / 6 + c * p[2].x,\n          (t * (p[1].y + 6 * p[2].y - p[3].y)) / 6 + c * p[2].y,\n          p[2].x,\n          p[2].y,\n          false,\n          valueData[(i + 2) / 2]\n        );\n      }\n\n      return path;\n    }\n  };\n}\n","import type { SegmentData } from '../core';\nimport { splitIntoSegments } from '../core';\nimport { SvgPath } from '../svg';\nimport { none } from './none';\n\nexport interface MonotoneCubicInterpolationOptions {\n  fillHoles?: boolean;\n}\n\n/**\n * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n *\n * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n *\n * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n *\n * All smoothing functions within Chartist are factory functions that accept an options parameter.\n *\n * @example\n * ```ts\n * const chart = new LineChart('.ct-chart', {\n *   labels: [1, 2, 3, 4, 5],\n *   series: [[1, 2, 8, 1, 7]]\n * }, {\n *   lineSmooth: Interpolation.monotoneCubic({\n *     fillHoles: false\n *   })\n * });\n * ```\n *\n * @param options The options of the monotoneCubic factory function.\n */\nexport function monotoneCubic(options?: MonotoneCubicInterpolationOptions) {\n  const finalOptions = {\n    fillHoles: false,\n    ...options\n  };\n\n  return function monotoneCubicInterpolation(\n    pathCoordinates: number[],\n    valueData: SegmentData[]\n  ): SvgPath {\n    // First we try to split the coordinates into segments\n    // This is necessary to treat \"holes\" in line charts\n    const segments = splitIntoSegments(pathCoordinates, valueData, {\n      fillHoles: finalOptions.fillHoles,\n      increasingX: true\n    });\n\n    if (!segments.length) {\n      // If there were no segments return 'Chartist.Interpolation.none'\n      return none()([], []);\n    } else if (segments.length > 1) {\n      // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n      // afterwards together into a single path.\n      // For each segment we will recurse the monotoneCubic fn function\n      // Join the segment path data into a single path and return\n      return SvgPath.join(\n        segments.map(segment =>\n          monotoneCubicInterpolation(segment.pathCoordinates, segment.valueData)\n        )\n      );\n    } else {\n      // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n      // segment\n      pathCoordinates = segments[0].pathCoordinates;\n      valueData = segments[0].valueData;\n\n      // If less than three points we need to fallback to no smoothing\n      if (pathCoordinates.length <= 4) {\n        return none()(pathCoordinates, valueData);\n      }\n\n      const xs = [];\n      const ys = [];\n      const n = pathCoordinates.length / 2;\n      const ms = [];\n      const ds = [];\n      const dys = [];\n      const dxs = [];\n\n      // Populate x and y coordinates into separate arrays, for readability\n      for (let i = 0; i < n; i++) {\n        xs[i] = pathCoordinates[i * 2];\n        ys[i] = pathCoordinates[i * 2 + 1];\n      }\n\n      // Calculate deltas and derivative\n      for (let i = 0; i < n - 1; i++) {\n        dys[i] = ys[i + 1] - ys[i];\n        dxs[i] = xs[i + 1] - xs[i];\n        ds[i] = dys[i] / dxs[i];\n      }\n\n      // Determine desired slope (m) at each point using Fritsch-Carlson method\n      // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n      ms[0] = ds[0];\n      ms[n - 1] = ds[n - 2];\n\n      for (let i = 1; i < n - 1; i++) {\n        if (ds[i] === 0 || ds[i - 1] === 0 || ds[i - 1] > 0 !== ds[i] > 0) {\n          ms[i] = 0;\n        } else {\n          ms[i] =\n            (3 * (dxs[i - 1] + dxs[i])) /\n            ((2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n          if (!isFinite(ms[i])) {\n            ms[i] = 0;\n          }\n        }\n      }\n\n      // Now build a path from the slopes\n      const path = new SvgPath().move(xs[0], ys[0], false, valueData[0]);\n\n      for (let i = 0; i < n - 1; i++) {\n        path.curve(\n          // First control point\n          xs[i] + dxs[i] / 3,\n          ys[i] + (ms[i] * dxs[i]) / 3,\n          // Second control point\n          xs[i + 1] - dxs[i] / 3,\n          ys[i + 1] - (ms[i + 1] * dxs[i]) / 3,\n          // End point\n          xs[i + 1],\n          ys[i + 1],\n\n          false,\n          valueData[i + 1]\n        );\n      }\n\n      return path;\n    }\n  };\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nexport type EventListener<T = any> = (data: T) => void;\n\nexport type AllEventsListener<T = any> = (event: string, data: T) => void;\n\nexport class EventEmitter {\n  private readonly listeners = new Map<string, Set<EventListener>>();\n  private readonly allListeners = new Set<AllEventsListener>();\n\n  /**\n   * Add an event handler for a specific event\n   * @param event The event name\n   * @param listener A event handler function\n   */\n  on(event: '*', listener: AllEventsListener): void;\n  on(event: string, listener: EventListener): void;\n  on(event: string, listener: EventListener | AllEventsListener) {\n    const { allListeners, listeners } = this;\n\n    if (event === '*') {\n      allListeners.add(listener);\n    } else {\n      if (!listeners.has(event)) {\n        listeners.set(event, new Set());\n      }\n\n      (listeners.get(event) as Set<EventListener>).add(\n        listener as EventListener\n      );\n    }\n  }\n\n  /**\n   * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n   * @param event The event name where a specific or all handlers should be removed\n   * @param [listener] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n   */\n  off(event: '*', listener?: AllEventsListener): void;\n  off(event: string, listener?: EventListener): void;\n  off(event: string, listener?: EventListener | AllEventsListener) {\n    const { allListeners, listeners } = this;\n\n    if (event === '*') {\n      if (listener) {\n        allListeners.delete(listener);\n      } else {\n        allListeners.clear();\n      }\n    } else if (listeners.has(event)) {\n      const eventListeners = listeners.get(event) as Set<EventListener>;\n\n      if (listener) {\n        eventListeners.delete(listener as EventListener);\n      } else {\n        eventListeners.clear();\n      }\n\n      if (!eventListeners.size) {\n        listeners.delete(event);\n      }\n    }\n  }\n\n  /**\n   * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n   * @param event The event name that should be triggered\n   * @param data Arbitrary data that will be passed to the event handler callback functions\n   */\n  emit<T = any>(event: string, data: T) {\n    const { allListeners, listeners } = this;\n\n    // Only do something if there are event handlers with this name existing\n    if (listeners.has(event)) {\n      (listeners.get(event) as Set<EventListener>).forEach(listener =>\n        listener(data)\n      );\n    }\n\n    // Emit event to star event handlers\n    allListeners.forEach(listener => listener(event, data));\n  }\n}\n","import type { Data, Options, DataEvent, ResponsiveOptions } from '../core';\nimport type { Svg } from '../svg';\nimport type { BaseChartEventsTypes } from './types';\nimport { OptionsProvider, optionsProvider } from '../core';\nimport { extend } from '../utils';\nimport { EventListener, AllEventsListener, EventEmitter } from '../event';\n\nconst instances = new WeakMap<Element, BaseChart<unknown>>();\n\nexport abstract class BaseChart<TEventsTypes = BaseChartEventsTypes> {\n  protected svg?: Svg;\n  protected readonly container: Element;\n  protected readonly eventEmitter = new EventEmitter();\n  private readonly resizeListener = () => this.update();\n  // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n  // the chart was created.\n  private initializeTimeoutId: NodeJS.Timer | null = setTimeout(\n    () => this.initialize(),\n    0\n  );\n  private optionsProvider?: OptionsProvider<Options>;\n\n  constructor(\n    query: string | Element | null,\n    protected data: Data,\n    private readonly defaultOptions: Options,\n    private options: Options,\n    private readonly responsiveOptions?: ResponsiveOptions<Options>\n  ) {\n    const container =\n      typeof query === 'string' ? document.querySelector(query) : query;\n\n    if (!container) {\n      throw new Error('Target element is not found');\n    }\n\n    this.container = container;\n\n    const prevInstance = instances.get(container);\n\n    // If chartist was already initialized in this container we are detaching all event listeners first\n    if (prevInstance) {\n      prevInstance.detach();\n    }\n\n    instances.set(container, this);\n  }\n\n  abstract createChart(options: Options): void;\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   * @param data Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param options Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param override If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   */\n  update(data?: Data, options?: Options, override = false) {\n    if (data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit<DataEvent>('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if (options) {\n      this.options = extend(\n        {},\n        override ? this.options : this.defaultOptions,\n        options\n      );\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if (!this.initializeTimeoutId) {\n        this.optionsProvider?.removeMediaQueryListeners();\n        this.optionsProvider = optionsProvider(\n          this.options,\n          this.responsiveOptions,\n          this.eventEmitter\n        );\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if (!this.initializeTimeoutId && this.optionsProvider) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   */\n  detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if (!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider?.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    instances.delete(this.container);\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   * @param event Name of the event. Check the examples for supported events.\n   * @param listener The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  on<T extends keyof TEventsTypes>(\n    event: T,\n    listener: EventListener<TEventsTypes[T]>\n  ): this;\n  on(event: '*', listener: AllEventsListener): this;\n  on(event: string, listener: EventListener): this;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  on(event: string, listener: any) {\n    this.eventEmitter.on(event, listener);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   * @param event Name of the event for which a handler should be removed\n   * @param listener The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  off<T extends keyof TEventsTypes>(\n    event: T,\n    listener?: EventListener<TEventsTypes[T]>\n  ): this;\n  off(event: '*', listener?: AllEventsListener): this;\n  off(event: string, listener?: EventListener): this;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  off(event: string, listener?: any) {\n    this.eventEmitter.off(event, listener);\n    return this;\n  }\n\n  initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = optionsProvider(\n      this.options,\n      this.responsiveOptions,\n      this.eventEmitter\n    );\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.on('optionsChanged', () => this.update());\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if (this.options.plugins) {\n      this.options.plugins.forEach(plugin => {\n        if (Array.isArray(plugin)) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      });\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit<DataEvent>('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = null;\n  }\n}\n","import type {\n  Label,\n  ChartRect,\n  OptionsWithDefaults,\n  NormalizedSeriesPrimitiveValue,\n  NormalizedSeries\n} from '../core';\nimport type { Svg } from '../svg';\nimport type { EventEmitter } from '../event';\nimport { isFalseyButZero } from '../utils';\nimport { createGrid, createLabel } from '../core';\n\nexport const axisUnits = {\n  x: {\n    pos: 'x',\n    len: 'width',\n    dir: 'horizontal',\n    rectStart: 'x1',\n    rectEnd: 'x2',\n    rectOffset: 'y2'\n  },\n  y: {\n    pos: 'y',\n    len: 'height',\n    dir: 'vertical',\n    rectStart: 'y2',\n    rectEnd: 'y1',\n    rectOffset: 'x1'\n  }\n} as const;\n\nexport type XAxisUnits = typeof axisUnits.x;\nexport type YAxisUnits = typeof axisUnits.y;\nexport type AxisUnits = XAxisUnits | YAxisUnits;\n\nexport abstract class Axis {\n  public readonly counterUnits: AxisUnits;\n  public readonly range:\n    | {\n        min: number;\n        max: number;\n      }\n    | undefined;\n  readonly axisLength: number;\n  private readonly gridOffset: number;\n\n  constructor(\n    public readonly units: AxisUnits,\n    private readonly chartRect: ChartRect,\n    private readonly ticks: Label[]\n  ) {\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.axisLength =\n      chartRect[this.units.rectEnd] - chartRect[this.units.rectStart];\n    this.gridOffset = chartRect[this.units.rectOffset];\n  }\n\n  abstract projectValue(\n    value: NormalizedSeriesPrimitiveValue | Label,\n    index?: number,\n    series?: NormalizedSeries\n  ): number;\n\n  createGridAndLabels(\n    gridGroup: Svg,\n    labelGroup: Svg,\n    chartOptions: OptionsWithDefaults,\n    eventEmitter: EventEmitter\n  ) {\n    const axisOptions =\n      this.units.pos === 'x' ? chartOptions.axisX : chartOptions.axisY;\n    const projectedValues = this.ticks.map((tick, i) =>\n      this.projectValue(tick, i)\n    );\n    const labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach((projectedValue, index) => {\n      const labelValue = labelValues[index];\n      const labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      let labelLength;\n      if (projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(\n          this.axisLength - projectedValue,\n          this.axisLength / this.ticks.length\n        );\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (except for 0)\n      if (labelValue !== '' && isFalseyButZero(labelValue)) {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if (this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if (chartOptions.axisX.position === 'start') {\n          labelOffset.y =\n            this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + 5;\n        } else {\n          labelOffset.y =\n            this.chartRect.y1 + chartOptions.axisX.labelOffset.y + 5;\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - labelLength;\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if (chartOptions.axisY.position === 'start') {\n          labelOffset.x =\n            this.chartRect.padding.left + chartOptions.axisY.labelOffset.x;\n        } else {\n          labelOffset.x =\n            this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if (axisOptions.showGrid) {\n        createGrid(\n          projectedValue,\n          index,\n          this,\n          this.gridOffset,\n          this.chartRect[this.counterUnits.len](),\n          gridGroup,\n          [\n            chartOptions.classNames.grid,\n            chartOptions.classNames[this.units.dir]\n          ],\n          eventEmitter\n        );\n      }\n\n      if (axisOptions.showLabel) {\n        createLabel(\n          projectedValue,\n          labelLength,\n          index,\n          labelValue,\n          this,\n          axisOptions.offset,\n          labelOffset,\n          labelGroup,\n          [\n            chartOptions.classNames.label,\n            chartOptions.classNames[this.units.dir],\n            axisOptions.position === 'start'\n              ? chartOptions.classNames[axisOptions.position]\n              : chartOptions.classNames.end\n          ],\n          eventEmitter\n        );\n      }\n    });\n  }\n}\n","import type {\n  ChartRect,\n  AxisOptions,\n  Bounds,\n  NormalizedSeries,\n  NormalizedSeriesPrimitiveValue\n} from '../core';\nimport { getBounds, getHighLow, getMultiValue } from '../core';\nimport { AxisUnits, Axis } from './Axis';\n\nexport class AutoScaleAxis extends Axis {\n  private readonly bounds: Bounds;\n  public override readonly range: {\n    min: number;\n    max: number;\n  };\n\n  constructor(\n    axisUnit: AxisUnits,\n    data: NormalizedSeries[],\n    chartRect: ChartRect,\n    options: AxisOptions\n  ) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    const highLow = options.highLow || getHighLow(data, options, axisUnit.pos);\n    const bounds = getBounds(\n      chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart],\n      highLow,\n      options.scaleMinSpace || 20,\n      options.onlyInteger\n    );\n    const range = {\n      min: bounds.min,\n      max: bounds.max\n    };\n\n    super(axisUnit, chartRect, bounds.values);\n\n    this.bounds = bounds;\n    this.range = range;\n  }\n\n  projectValue(value: NormalizedSeriesPrimitiveValue) {\n    const finalValue = Number(getMultiValue(value, this.units.pos));\n\n    return (\n      (this.axisLength * (finalValue - this.bounds.min)) / this.bounds.range\n    );\n  }\n}\n","import type {\n  ChartRect,\n  AxisOptions,\n  NormalizedSeries,\n  NormalizedSeriesPrimitiveValue\n} from '../core';\nimport { getMultiValue, getHighLow } from '../core/data';\nimport { times } from '../utils';\nimport { AxisUnits, Axis } from './Axis';\n\nexport class FixedScaleAxis extends Axis {\n  public override readonly range: {\n    min: number;\n    max: number;\n  };\n\n  constructor(\n    axisUnit: AxisUnits,\n    data: NormalizedSeries[],\n    chartRect: ChartRect,\n    options: AxisOptions\n  ) {\n    const highLow = options.highLow || getHighLow(data, options, axisUnit.pos);\n    const divisor = options.divisor || 1;\n    const ticks = (\n      options.ticks ||\n      times(\n        divisor,\n        index => highLow.low + ((highLow.high - highLow.low) / divisor) * index\n      )\n    ).sort((a, b) => Number(a) - Number(b));\n    const range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    super(axisUnit, chartRect, ticks);\n\n    this.range = range;\n  }\n\n  projectValue(value: NormalizedSeriesPrimitiveValue) {\n    const finalValue = Number(getMultiValue(value, this.units.pos));\n\n    return (\n      (this.axisLength * (finalValue - this.range.min)) /\n      (this.range.max - this.range.min)\n    );\n  }\n}\n","import type { ChartRect, AxisOptions } from '../core';\nimport { AxisUnits, Axis } from './Axis';\n\nexport class StepAxis extends Axis {\n  private readonly stepLength: number;\n  public readonly stretch: boolean;\n\n  constructor(\n    axisUnit: AxisUnits,\n    _data: unknown,\n    chartRect: ChartRect,\n    options: AxisOptions\n  ) {\n    const ticks = options.ticks || [];\n\n    super(axisUnit, chartRect, ticks);\n\n    const calc = Math.max(1, ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n    this.stretch = Boolean(options.stretch);\n  }\n\n  projectValue(_value: unknown, index: number) {\n    return this.stepLength * index;\n  }\n}\n","import type { Axis } from '../../axes';\nimport type {\n  LineChartData,\n  LineChartOptions,\n  LineChartOptionsWithDefaults,\n  LineChartCreatedEvent,\n  PointDrawEvent,\n  LineDrawEvent,\n  AreaDrawEvent,\n  LineChartEventsTypes\n} from './LineChart.types';\nimport type {\n  SegmentData,\n  Series,\n  SeriesObject,\n  ResponsiveOptions\n} from '../../core';\nimport {\n  alphaNumerate,\n  normalizeData,\n  serialize,\n  getMetaData,\n  createSvg,\n  createChartRect,\n  createGridBackground\n} from '../../core';\nimport { isNumeric, noop, extend, safeHasProperty, each } from '../../utils';\nimport { StepAxis, AutoScaleAxis, axisUnits } from '../../axes';\nimport { monotoneCubic, none } from '../../interpolation';\nimport { BaseChart } from './../BaseChart';\n\nexport function getSeriesOption<\n  T extends keyof Omit<LineChartOptionsWithDefaults, 'series'>\n>(\n  series: Series | SeriesObject,\n  options: LineChartOptionsWithDefaults,\n  key: T\n) {\n  if (\n    safeHasProperty(series, 'name') &&\n    series.name &&\n    options.series?.[series.name]\n  ) {\n    const seriesOptions = options?.series[series.name];\n    const value = seriesOptions[key];\n    const result = value === undefined ? options[key] : value;\n\n    return result as LineChartOptionsWithDefaults[T];\n  } else {\n    return options[key];\n  }\n}\n\n/**\n * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n */\nconst defaultOptions = {\n  // Options for X-Axis\n  axisX: {\n    // The offset of the labels to the chart area\n    offset: 30,\n    // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n    position: 'end' as const,\n    // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n    labelOffset: {\n      x: 0,\n      y: 0\n    },\n    // If labels should be shown or not\n    showLabel: true,\n    // If the axis grid should be drawn or not\n    showGrid: true,\n    // Interpolation function that allows you to intercept the value from the axis label\n    labelInterpolationFnc: noop,\n    // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n    type: undefined\n  },\n  // Options for Y-Axis\n  axisY: {\n    // The offset of the labels to the chart area\n    offset: 40,\n    // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n    position: 'start' as const,\n    // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n    labelOffset: {\n      x: 0,\n      y: 0\n    },\n    // If labels should be shown or not\n    showLabel: true,\n    // If the axis grid should be drawn or not\n    showGrid: true,\n    // Interpolation function that allows you to intercept the value from the axis label\n    labelInterpolationFnc: noop,\n    // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n    type: undefined,\n    // This value specifies the minimum height in pixel of the scale steps\n    scaleMinSpace: 20,\n    // Use only integer values (whole numbers) for the scale steps\n    onlyInteger: false\n  },\n  // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n  width: undefined,\n  // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n  height: undefined,\n  // If the line should be drawn or not\n  showLine: true,\n  // If dots should be drawn or not\n  showPoint: true,\n  // If the line chart should draw an area\n  showArea: false,\n  // The base for the area chart that will be used to close the area shape (is normally 0)\n  areaBase: 0,\n  // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n  lineSmooth: true,\n  // If the line chart should add a background fill to the .ct-grids group.\n  showGridBackground: false,\n  // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n  low: undefined,\n  // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n  high: undefined,\n  // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n  chartPadding: {\n    top: 15,\n    right: 15,\n    bottom: 5,\n    left: 10\n  },\n  // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n  fullWidth: false,\n  // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n  reverseData: false,\n  // Override the class names that get used to generate the SVG structure of the chart\n  classNames: {\n    chart: 'ct-chart-line',\n    label: 'ct-label',\n    labelGroup: 'ct-labels',\n    series: 'ct-series',\n    line: 'ct-line',\n    point: 'ct-point',\n    area: 'ct-area',\n    grid: 'ct-grid',\n    gridGroup: 'ct-grids',\n    gridBackground: 'ct-grid-background',\n    vertical: 'ct-vertical',\n    horizontal: 'ct-horizontal',\n    start: 'ct-start',\n    end: 'ct-end'\n  }\n};\n\nexport class LineChart extends BaseChart<LineChartEventsTypes> {\n  /**\n   * This method creates a new line chart.\n   * @param query A selector query string or directly a DOM element\n   * @param data The data object that needs to consist of a labels and a series array\n   * @param options The options object with options that override the default options. Check the examples for a detailed list.\n   * @param responsiveOptions Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return An object which exposes the API for the created chart\n   *\n   * @example\n   * ```ts\n   * // Create a simple line chart\n   * const data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * const options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new LineChart('.ct-chart', data, options);\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * const chart = new LineChart('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Create a line chart with responsive options\n   *\n   * const data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * const responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new LineChart('.ct-chart', data, null, responsiveOptions);\n   * ```\n   */\n  constructor(\n    query: string | Element | null,\n    protected override data: LineChartData,\n    options?: LineChartOptions,\n    responsiveOptions?: ResponsiveOptions<LineChartOptions>\n  ) {\n    super(\n      query,\n      data,\n      defaultOptions,\n      extend({}, defaultOptions, options),\n      responsiveOptions\n    );\n  }\n\n  /**\n   * Creates a new chart\n   */\n  createChart(options: LineChartOptionsWithDefaults) {\n    const { data } = this;\n    const normalizedData = normalizeData(data, options.reverseData, true);\n\n    // Create new svg object\n    const svg = createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart\n    );\n\n    this.svg = svg;\n\n    // Create groups for labels, grid and series\n    const gridGroup = svg.elem('g').addClass(options.classNames.gridGroup);\n    const seriesGroup = svg.elem('g');\n    const labelGroup = svg.elem('g').addClass(options.classNames.labelGroup);\n\n    const chartRect = createChartRect(svg, options);\n    let axisX: Axis;\n    let axisY: Axis;\n\n    if (options.axisX.type === undefined) {\n      axisX = new StepAxis(axisUnits.x, normalizedData.series, chartRect, {\n        ...options.axisX,\n        ticks: normalizedData.labels,\n        stretch: options.fullWidth\n      });\n    } else {\n      // eslint-disable-next-line new-cap\n      axisX = new options.axisX.type(\n        axisUnits.x,\n        normalizedData.series,\n        chartRect,\n        options.axisX\n      );\n    }\n\n    if (options.axisY.type === undefined) {\n      axisY = new AutoScaleAxis(axisUnits.y, normalizedData.series, chartRect, {\n        ...options.axisY,\n        high: isNumeric(options.high) ? options.high : options.axisY.high,\n        low: isNumeric(options.low) ? options.low : options.axisY.low\n      });\n    } else {\n      // eslint-disable-next-line new-cap\n      axisY = new options.axisY.type(\n        axisUnits.y,\n        normalizedData.series,\n        chartRect,\n        options.axisY\n      );\n    }\n\n    axisX.createGridAndLabels(\n      gridGroup,\n      labelGroup,\n      options,\n      this.eventEmitter\n    );\n    axisY.createGridAndLabels(\n      gridGroup,\n      labelGroup,\n      options,\n      this.eventEmitter\n    );\n\n    if (options.showGridBackground) {\n      createGridBackground(\n        gridGroup,\n        chartRect,\n        options.classNames.gridBackground,\n        this.eventEmitter\n      );\n    }\n\n    // Draw the series\n    each(\n      data.series,\n      (series, seriesIndex) => {\n        const seriesElement = seriesGroup.elem('g');\n        const seriesName = safeHasProperty(series, 'name') && series.name;\n        const seriesClassName =\n          safeHasProperty(series, 'className') && series.className;\n        const seriesMeta = safeHasProperty(series, 'meta')\n          ? series.meta\n          : undefined;\n\n        // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n        if (seriesName) {\n          seriesElement.attr({\n            'ct:series-name': seriesName\n          });\n        }\n\n        if (seriesMeta) {\n          seriesElement.attr({\n            'ct:meta': serialize(seriesMeta)\n          });\n        }\n\n        // Use series class from series data or if not set generate one\n        seriesElement.addClass(\n          [\n            options.classNames.series,\n            seriesClassName ||\n              `${options.classNames.series}-${alphaNumerate(seriesIndex)}`\n          ].join(' ')\n        );\n\n        const pathCoordinates: number[] = [];\n        const pathData: SegmentData[] = [];\n\n        normalizedData.series[seriesIndex].forEach((value, valueIndex) => {\n          const p = {\n            x:\n              chartRect.x1 +\n              axisX.projectValue(\n                value,\n                valueIndex,\n                normalizedData.series[seriesIndex]\n              ),\n            y:\n              chartRect.y1 -\n              axisY.projectValue(\n                value,\n                valueIndex,\n                normalizedData.series[seriesIndex]\n              )\n          };\n          pathCoordinates.push(p.x, p.y);\n          pathData.push({\n            value,\n            valueIndex,\n            meta: getMetaData(series, valueIndex)\n          });\n        });\n\n        const seriesOptions = {\n          lineSmooth: getSeriesOption(series, options, 'lineSmooth'),\n          showPoint: getSeriesOption(series, options, 'showPoint'),\n          showLine: getSeriesOption(series, options, 'showLine'),\n          showArea: getSeriesOption(series, options, 'showArea'),\n          areaBase: getSeriesOption(series, options, 'areaBase')\n        };\n\n        let smoothing;\n        if (typeof seriesOptions.lineSmooth === 'function') {\n          smoothing = seriesOptions.lineSmooth;\n        } else {\n          smoothing = seriesOptions.lineSmooth ? monotoneCubic() : none();\n        }\n\n        // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n        // index, value and meta data\n        const path = smoothing(pathCoordinates, pathData);\n\n        // If we should show points we need to create them now to avoid secondary loop\n        // Points are drawn from the pathElements returned by the interpolation function\n        // Small offset for Firefox to render squares correctly\n        if (seriesOptions.showPoint) {\n          path.pathElements.forEach(pathElement => {\n            const { data: pathElementData } = pathElement;\n            const point = seriesElement.elem(\n              'line',\n              {\n                x1: pathElement.x,\n                y1: pathElement.y,\n                x2: pathElement.x + 0.01,\n                y2: pathElement.y\n              },\n              options.classNames.point\n            );\n\n            if (pathElementData) {\n              let x: number | undefined;\n              let y: number | undefined;\n\n              if (safeHasProperty(pathElementData.value, 'x')) {\n                x = pathElementData.value.x;\n              }\n\n              if (safeHasProperty(pathElementData.value, 'y')) {\n                y = pathElementData.value.y;\n              }\n\n              point.attr({\n                'ct:value': [x, y].filter(isNumeric).join(','),\n                'ct:meta': serialize(pathElementData.meta)\n              });\n            }\n\n            this.eventEmitter.emit<PointDrawEvent>('draw', {\n              type: 'point',\n              value: pathElementData?.value,\n              index: pathElementData?.valueIndex || 0,\n              meta: pathElementData?.meta,\n              series,\n              seriesIndex,\n              axisX,\n              axisY,\n              group: seriesElement,\n              element: point,\n              x: pathElement.x,\n              y: pathElement.y,\n              chartRect\n            });\n          });\n        }\n\n        if (seriesOptions.showLine) {\n          const line = seriesElement.elem(\n            'path',\n            {\n              d: path.stringify()\n            },\n            options.classNames.line,\n            true\n          );\n\n          this.eventEmitter.emit<LineDrawEvent>('draw', {\n            type: 'line',\n            values: normalizedData.series[seriesIndex],\n            path: path.clone(),\n            chartRect,\n            // TODO: Remove redundant\n            index: seriesIndex,\n            series,\n            seriesIndex,\n            meta: seriesMeta,\n            axisX,\n            axisY,\n            group: seriesElement,\n            element: line\n          });\n        }\n\n        // Area currently only works with axes that support a range!\n        if (seriesOptions.showArea && axisY.range) {\n          // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n          // the area is not drawn outside the chart area.\n          const areaBase = Math.max(\n            Math.min(seriesOptions.areaBase, axisY.range.max),\n            axisY.range.min\n          );\n\n          // We project the areaBase value into screen coordinates\n          const areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n          // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n          path\n            .splitByCommand('M')\n            // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n            .filter(pathSegment => pathSegment.pathElements.length > 1)\n            .map(solidPathSegments => {\n              // Receiving the filtered solid path segments we can now convert those segments into fill areas\n              const firstElement = solidPathSegments.pathElements[0];\n              const lastElement =\n                solidPathSegments.pathElements[\n                  solidPathSegments.pathElements.length - 1\n                ];\n\n              // Cloning the solid path segment with closing option and removing the first move command from the clone\n              // We then insert a new move that should start at the area base and draw a straight line up or down\n              // at the end of the path we add an additional straight line to the projected area base value\n              // As the closing option is set our path will be automatically closed\n              return solidPathSegments\n                .clone(true)\n                .position(0)\n                .remove(1)\n                .move(firstElement.x, areaBaseProjected)\n                .line(firstElement.x, firstElement.y)\n                .position(solidPathSegments.pathElements.length + 1)\n                .line(lastElement.x, areaBaseProjected);\n            })\n            .forEach(areaPath => {\n              // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n              // and adding the created DOM elements to the correct series group\n              const area = seriesElement.elem(\n                'path',\n                {\n                  d: areaPath.stringify()\n                },\n                options.classNames.area,\n                true\n              );\n\n              // Emit an event for each area that was drawn\n              this.eventEmitter.emit<AreaDrawEvent>('draw', {\n                type: 'area',\n                values: normalizedData.series[seriesIndex],\n                path: areaPath.clone(),\n                series,\n                seriesIndex,\n                axisX,\n                axisY,\n                chartRect,\n                // TODO: Remove redundant\n                index: seriesIndex,\n                group: seriesElement,\n                element: area,\n                meta: seriesMeta\n              });\n            });\n        }\n      },\n      options.reverseData\n    );\n\n    this.eventEmitter.emit<LineChartCreatedEvent>('created', {\n      chartRect,\n      axisX,\n      axisY,\n      svg,\n      options\n    });\n  }\n}\n","import type { Axis } from '../../axes';\nimport type {\n  BarChartData,\n  BarChartOptions,\n  BarChartOptionsWithDefaults,\n  BarChartCreatedEvent,\n  BarDrawEvent,\n  BarChartEventsTypes\n} from './BarChart.types';\nimport type {\n  NormalizedSeries,\n  ResponsiveOptions,\n  AllSeriesTypes\n} from '../../core';\nimport {\n  isNumeric,\n  noop,\n  serialMap,\n  extend,\n  safeHasProperty,\n  each\n} from '../../utils';\nimport {\n  alphaNumerate,\n  normalizeData,\n  serialize,\n  getMetaData,\n  getHighLow,\n  createSvg,\n  createChartRect,\n  createGridBackground\n} from '../../core';\nimport { AutoScaleAxis, StepAxis, axisUnits } from '../../axes';\nimport { BaseChart } from '../BaseChart';\n\nfunction getSerialSums(series: NormalizedSeries[]) {\n  return serialMap(series, (...args) =>\n    Array.from(args).reduce<{ x: number; y: number }>(\n      (prev, curr) => {\n        return {\n          x: prev.x + (safeHasProperty(curr, 'x') ? curr.x : 0),\n          y: prev.y + (safeHasProperty(curr, 'y') ? curr.y : 0)\n        };\n      },\n      { x: 0, y: 0 }\n    )\n  );\n}\n\n/**\n * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n */\nconst defaultOptions = {\n  // Options for X-Axis\n  axisX: {\n    // The offset of the chart drawing area to the border of the container\n    offset: 30,\n    // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n    position: 'end' as const,\n    // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n    labelOffset: {\n      x: 0,\n      y: 0\n    },\n    // If labels should be shown or not\n    showLabel: true,\n    // If the axis grid should be drawn or not\n    showGrid: true,\n    // Interpolation function that allows you to intercept the value from the axis label\n    labelInterpolationFnc: noop,\n    // This value specifies the minimum width in pixel of the scale steps\n    scaleMinSpace: 30,\n    // Use only integer values (whole numbers) for the scale steps\n    onlyInteger: false\n  },\n  // Options for Y-Axis\n  axisY: {\n    // The offset of the chart drawing area to the border of the container\n    offset: 40,\n    // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n    position: 'start' as const,\n    // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n    labelOffset: {\n      x: 0,\n      y: 0\n    },\n    // If labels should be shown or not\n    showLabel: true,\n    // If the axis grid should be drawn or not\n    showGrid: true,\n    // Interpolation function that allows you to intercept the value from the axis label\n    labelInterpolationFnc: noop,\n    // This value specifies the minimum height in pixel of the scale steps\n    scaleMinSpace: 20,\n    // Use only integer values (whole numbers) for the scale steps\n    onlyInteger: false\n  },\n  // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n  width: undefined,\n  // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n  height: undefined,\n  // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n  high: undefined,\n  // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n  low: undefined,\n  // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n  referenceValue: 0,\n  // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n  chartPadding: {\n    top: 15,\n    right: 15,\n    bottom: 5,\n    left: 10\n  },\n  // Specify the distance in pixel of bars in a group\n  seriesBarDistance: 15,\n  // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n  stackBars: false,\n  // If set to true this property will force the stacked bars to draw from the zero line.\n  // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n  // If set to 'accumulate-relative' positive and negative values will be handled separately.\n  stackMode: 'accumulate' as const,\n  // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n  horizontalBars: false,\n  // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n  distributeSeries: false,\n  // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n  reverseData: false,\n  // If the bar chart should add a background fill to the .ct-grids group.\n  showGridBackground: false,\n  // Override the class names that get used to generate the SVG structure of the chart\n  classNames: {\n    chart: 'ct-chart-bar',\n    horizontalBars: 'ct-horizontal-bars',\n    label: 'ct-label',\n    labelGroup: 'ct-labels',\n    series: 'ct-series',\n    bar: 'ct-bar',\n    grid: 'ct-grid',\n    gridGroup: 'ct-grids',\n    gridBackground: 'ct-grid-background',\n    vertical: 'ct-vertical',\n    horizontal: 'ct-horizontal',\n    start: 'ct-start',\n    end: 'ct-end'\n  }\n};\n\nexport class BarChart extends BaseChart<BarChartEventsTypes> {\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   * @param query A selector query string or directly a DOM element\n   * @param data The data object that needs to consist of a labels and a series array\n   * @param options The options object with options that override the default options. Check the examples for a detailed list.\n   * @param responsiveOptions Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return An object which exposes the API for the created chart\n   *\n   * @example\n   * ```ts\n   * // Create a simple bar chart\n   * const data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new BarChart('.ct-chart', data);\n   * ```\n   *\n   * @example\n   * ```ts\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new BarChart('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   * ```\n   */\n  constructor(\n    query: string | Element | null,\n    protected override data: BarChartData,\n    options?: BarChartOptions,\n    responsiveOptions?: ResponsiveOptions<BarChartOptions>\n  ) {\n    super(\n      query,\n      data,\n      defaultOptions,\n      extend({}, defaultOptions, options),\n      responsiveOptions\n    );\n  }\n\n  /**\n   * Creates a new chart\n   */\n  createChart(options: BarChartOptionsWithDefaults) {\n    const { data } = this;\n    const normalizedData = normalizeData(\n      data,\n      options.reverseData,\n      options.horizontalBars ? 'x' : 'y',\n      true\n    );\n    // Create new svg element\n    const svg = createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart +\n        (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n    const highLow =\n      options.stackBars &&\n      options.stackMode !== true &&\n      normalizedData.series.length\n        ? // If stacked bars we need to calculate the high low from stacked values from each series\n          getHighLow(\n            [getSerialSums(normalizedData.series)],\n            options,\n            options.horizontalBars ? 'x' : 'y'\n          )\n        : getHighLow(\n            normalizedData.series,\n            options,\n            options.horizontalBars ? 'x' : 'y'\n          );\n\n    this.svg = svg;\n\n    // Drawing groups in correct order\n    const gridGroup = svg.elem('g').addClass(options.classNames.gridGroup);\n    const seriesGroup = svg.elem('g');\n    const labelGroup = svg.elem('g').addClass(options.classNames.labelGroup);\n\n    // Overrides of high / low from settings\n    if (typeof options.high === 'number') {\n      highLow.high = options.high;\n    }\n\n    if (typeof options.low === 'number') {\n      highLow.low = options.low;\n    }\n\n    const chartRect = createChartRect(svg, options);\n    let valueAxis: Axis;\n    const labelAxisTicks = // We need to set step count based on some options combinations\n      options.distributeSeries && options.stackBars\n        ? // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n          // use only the first label for the step axis\n          normalizedData.labels.slice(0, 1)\n        : // If distributed series are enabled but stacked bars aren't, we should use the series labels\n          // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n          // as the bars are normalized\n          normalizedData.labels;\n    let labelAxis: Axis;\n    let axisX: Axis;\n    let axisY: Axis;\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if (options.horizontalBars) {\n      if (options.axisX.type === undefined) {\n        valueAxis = axisX = new AutoScaleAxis(\n          axisUnits.x,\n          normalizedData.series,\n          chartRect,\n          { ...options.axisX, highLow: highLow, referenceValue: 0 }\n        );\n      } else {\n        // eslint-disable-next-line new-cap\n        valueAxis = axisX = new options.axisX.type(\n          axisUnits.x,\n          normalizedData.series,\n          chartRect,\n          { ...options.axisX, highLow: highLow, referenceValue: 0 }\n        );\n      }\n\n      if (options.axisY.type === undefined) {\n        labelAxis = axisY = new StepAxis(\n          axisUnits.y,\n          normalizedData.series,\n          chartRect,\n          {\n            ticks: labelAxisTicks\n          }\n        );\n      } else {\n        // eslint-disable-next-line new-cap\n        labelAxis = axisY = new options.axisY.type(\n          axisUnits.y,\n          normalizedData.series,\n          chartRect,\n          options.axisY\n        );\n      }\n    } else {\n      if (options.axisX.type === undefined) {\n        labelAxis = axisX = new StepAxis(\n          axisUnits.x,\n          normalizedData.series,\n          chartRect,\n          {\n            ticks: labelAxisTicks\n          }\n        );\n      } else {\n        // eslint-disable-next-line new-cap\n        labelAxis = axisX = new options.axisX.type(\n          axisUnits.x,\n          normalizedData.series,\n          chartRect,\n          options.axisX\n        );\n      }\n\n      if (options.axisY.type === undefined) {\n        valueAxis = axisY = new AutoScaleAxis(\n          axisUnits.y,\n          normalizedData.series,\n          chartRect,\n          { ...options.axisY, highLow: highLow, referenceValue: 0 }\n        );\n      } else {\n        // eslint-disable-next-line new-cap\n        valueAxis = axisY = new options.axisY.type(\n          axisUnits.y,\n          normalizedData.series,\n          chartRect,\n          { ...options.axisY, highLow: highLow, referenceValue: 0 }\n        );\n      }\n    }\n\n    // Projected 0 point\n    const zeroPoint = options.horizontalBars\n      ? chartRect.x1 + valueAxis.projectValue(0)\n      : chartRect.y1 - valueAxis.projectValue(0);\n    const isAccumulateStackMode = options.stackMode === 'accumulate';\n    const isAccumulateRelativeStackMode =\n      options.stackMode === 'accumulate-relative';\n    // Used to track the screen coordinates of stacked bars\n    const posStackedBarValues: number[] = [];\n    const negStackedBarValues: number[] = [];\n    let stackedBarValues = posStackedBarValues;\n\n    labelAxis.createGridAndLabels(\n      gridGroup,\n      labelGroup,\n      options,\n      this.eventEmitter\n    );\n    valueAxis.createGridAndLabels(\n      gridGroup,\n      labelGroup,\n      options,\n      this.eventEmitter\n    );\n\n    if (options.showGridBackground) {\n      createGridBackground(\n        gridGroup,\n        chartRect,\n        options.classNames.gridBackground,\n        this.eventEmitter\n      );\n    }\n\n    // Draw the series\n    each<AllSeriesTypes[number]>(\n      data.series,\n      (series, seriesIndex) => {\n        // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n        const biPol = seriesIndex - (data.series.length - 1) / 2;\n        // Half of the period width between vertical grid lines used to position bars\n        let periodHalfLength: number;\n\n        // We need to set periodHalfLength based on some options combinations\n        if (options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n          // which is the series count and divide by 2\n          periodHalfLength =\n            labelAxis.axisLength / normalizedData.series.length / 2;\n        } else if (options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n          // length by 2\n          periodHalfLength = labelAxis.axisLength / 2;\n        } else {\n          // On regular bar charts we should just use the series length\n          periodHalfLength =\n            labelAxis.axisLength /\n            normalizedData.series[seriesIndex].length /\n            2;\n        }\n\n        // Adding the series group to the series element\n        const seriesElement = seriesGroup.elem('g');\n        const seriesName = safeHasProperty(series, 'name') && series.name;\n        const seriesClassName =\n          safeHasProperty(series, 'className') && series.className;\n        const seriesMeta = safeHasProperty(series, 'meta')\n          ? series.meta\n          : undefined;\n\n        // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n        if (seriesName) {\n          seriesElement.attr({\n            'ct:series-name': seriesName\n          });\n        }\n\n        if (seriesMeta) {\n          seriesElement.attr({\n            'ct:meta': serialize(seriesMeta)\n          });\n        }\n\n        // Use series class from series data or if not set generate one\n        seriesElement.addClass(\n          [\n            options.classNames.series,\n            seriesClassName ||\n              `${options.classNames.series}-${alphaNumerate(seriesIndex)}`\n          ].join(' ')\n        );\n\n        normalizedData.series[seriesIndex].forEach((value, valueIndex) => {\n          const valueX = safeHasProperty(value, 'x') && value.x;\n          const valueY = safeHasProperty(value, 'y') && value.y;\n          let labelAxisValueIndex;\n          // We need to set labelAxisValueIndex based on some options combinations\n          if (options.distributeSeries && !options.stackBars) {\n            // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n            // on the step axis for label positioning\n            labelAxisValueIndex = seriesIndex;\n          } else if (options.distributeSeries && options.stackBars) {\n            // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n            // 0 for projection on the label step axis\n            labelAxisValueIndex = 0;\n          } else {\n            // On regular bar charts we just use the value index to project on the label step axis\n            labelAxisValueIndex = valueIndex;\n          }\n\n          let projected;\n          // We need to transform coordinates differently based on the chart layout\n          if (options.horizontalBars) {\n            projected = {\n              x:\n                chartRect.x1 +\n                valueAxis.projectValue(\n                  valueX || 0,\n                  valueIndex,\n                  normalizedData.series[seriesIndex]\n                ),\n              y:\n                chartRect.y1 -\n                labelAxis.projectValue(\n                  valueY || 0,\n                  labelAxisValueIndex,\n                  normalizedData.series[seriesIndex]\n                )\n            };\n          } else {\n            projected = {\n              x:\n                chartRect.x1 +\n                labelAxis.projectValue(\n                  valueX || 0,\n                  labelAxisValueIndex,\n                  normalizedData.series[seriesIndex]\n                ),\n              y:\n                chartRect.y1 -\n                valueAxis.projectValue(\n                  valueY || 0,\n                  valueIndex,\n                  normalizedData.series[seriesIndex]\n                )\n            };\n          }\n\n          // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n          // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n          // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n          // add any automated positioning.\n          if (labelAxis instanceof StepAxis) {\n            // Offset to center bar between grid lines, but only if the step axis is not stretched\n            if (!labelAxis.stretch) {\n              projected[labelAxis.units.pos] +=\n                periodHalfLength * (options.horizontalBars ? -1 : 1);\n            }\n            // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n            projected[labelAxis.units.pos] +=\n              options.stackBars || options.distributeSeries\n                ? 0\n                : biPol *\n                  options.seriesBarDistance *\n                  (options.horizontalBars ? -1 : 1);\n          }\n\n          // distinguish between positive and negative values in relative stack mode\n          if (isAccumulateRelativeStackMode) {\n            stackedBarValues =\n              valueY >= 0 || valueX >= 0\n                ? posStackedBarValues\n                : negStackedBarValues;\n          }\n\n          // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n          const previousStack = stackedBarValues[valueIndex] || zeroPoint;\n          stackedBarValues[valueIndex] =\n            previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n          // Skip if value is undefined\n          if (value === undefined) {\n            return;\n          }\n\n          const positions = {\n            [`${labelAxis.units.pos}1`]: projected[labelAxis.units.pos],\n            [`${labelAxis.units.pos}2`]: projected[labelAxis.units.pos]\n          } as Record<'x1' | 'y1' | 'x2' | 'y2', number>;\n\n          if (\n            options.stackBars &&\n            (isAccumulateStackMode ||\n              isAccumulateRelativeStackMode ||\n              !options.stackMode)\n          ) {\n            // Stack mode: accumulate (default)\n            // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n            // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n            // to be the original behaviour (accumulate)\n            positions[`${labelAxis.counterUnits.pos}1`] = previousStack;\n            positions[`${labelAxis.counterUnits.pos}2`] =\n              stackedBarValues[valueIndex];\n          } else {\n            // Draw from the zero line normally\n            // This is also the same code for Stack mode: overlap\n            positions[`${labelAxis.counterUnits.pos}1`] = zeroPoint;\n            positions[`${labelAxis.counterUnits.pos}2`] =\n              projected[labelAxis.counterUnits.pos];\n          }\n\n          // Limit x and y so that they are within the chart rect\n          positions.x1 = Math.min(\n            Math.max(positions.x1, chartRect.x1),\n            chartRect.x2\n          );\n          positions.x2 = Math.min(\n            Math.max(positions.x2, chartRect.x1),\n            chartRect.x2\n          );\n          positions.y1 = Math.min(\n            Math.max(positions.y1, chartRect.y2),\n            chartRect.y1\n          );\n          positions.y2 = Math.min(\n            Math.max(positions.y2, chartRect.y2),\n            chartRect.y1\n          );\n\n          const metaData = getMetaData(series, valueIndex);\n\n          // Create bar element\n          const bar = seriesElement\n            .elem('line', positions, options.classNames.bar)\n            .attr({\n              'ct:value': [valueX, valueY].filter(isNumeric).join(','),\n              'ct:meta': serialize(metaData)\n            });\n\n          this.eventEmitter.emit<BarDrawEvent>('draw', {\n            type: 'bar',\n            value,\n            index: valueIndex,\n            meta: metaData,\n            series,\n            seriesIndex,\n            axisX,\n            axisY,\n            chartRect,\n            group: seriesElement,\n            element: bar,\n            ...positions\n          });\n        });\n      },\n      options.reverseData\n    );\n\n    this.eventEmitter.emit<BarChartCreatedEvent>('created', {\n      chartRect,\n      axisX,\n      axisY,\n      svg,\n      options\n    });\n  }\n}\n","import type {\n  LabelDirection,\n  AnchorPosition,\n  Dot,\n  PieChartData,\n  PieChartOptions,\n  PieChartOptionsWithDefaults,\n  PieChartCreatedEvent,\n  SliceDrawEvent,\n  SliceLabelDrawEvent,\n  PieChartEventsTypes\n} from './PieChart.types';\nimport type { Svg } from '../../svg';\nimport type { ResponsiveOptions } from '../../core';\nimport {\n  alphaNumerate,\n  quantity,\n  normalizeData,\n  serialize,\n  createSvg,\n  createChartRect,\n  polarToCartesian\n} from '../../core';\nimport {\n  noop,\n  sum,\n  extend,\n  isFalseyButZero,\n  safeHasProperty\n} from '../../utils';\nimport { SvgPath } from '../../svg';\nimport { BaseChart } from '../BaseChart';\n\n/**\n * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n */\nconst defaultOptions = {\n  // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n  width: undefined,\n  // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n  height: undefined,\n  // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n  chartPadding: 5,\n  // Override the class names that are used to generate the SVG structure of the chart\n  classNames: {\n    chartPie: 'ct-chart-pie',\n    chartDonut: 'ct-chart-donut',\n    series: 'ct-series',\n    slicePie: 'ct-slice-pie',\n    sliceDonut: 'ct-slice-donut',\n    label: 'ct-label'\n  },\n  // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n  startAngle: 0,\n  // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n  total: undefined,\n  // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n  donut: false,\n  // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n  // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n  donutWidth: 60,\n  // If a label should be shown or not\n  showLabel: true,\n  // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n  labelOffset: 0,\n  // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n  labelPosition: 'inside',\n  // An interpolation function for the label value\n  labelInterpolationFnc: noop,\n  // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n  labelDirection: 'neutral',\n  // If true empty values will be ignored to avoid drawing unnecessary slices and labels\n  ignoreEmptyValues: false\n};\n\n/**\n * Determines SVG anchor position based on direction and center parameter\n */\nexport function determineAnchorPosition(\n  center: Dot,\n  label: Dot,\n  direction: LabelDirection\n): AnchorPosition {\n  const toTheRight = label.x > center.x;\n\n  if (\n    (toTheRight && direction === 'explode') ||\n    (!toTheRight && direction === 'implode')\n  ) {\n    return 'start';\n  } else if (\n    (toTheRight && direction === 'implode') ||\n    (!toTheRight && direction === 'explode')\n  ) {\n    return 'end';\n  } else {\n    return 'middle';\n  }\n}\n\nexport class PieChart extends BaseChart<PieChartEventsTypes> {\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   * @param query A selector query string or directly a DOM element\n   * @param data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param options The options object with options that override the default options. Check the examples for a detailed list.\n   * @param responsiveOptions Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   *\n   * @example\n   * ```ts\n   * // Simple pie chart example with four series\n   * new PieChart('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Drawing a donut chart\n   * new PieChart('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new PieChart('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new PieChart('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   * ```\n   *\n   * @example\n   * ```ts\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new PieChart('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   * ```\n   */\n  constructor(\n    query: string | Element | null,\n    protected override data: PieChartData,\n    options?: PieChartOptions,\n    responsiveOptions?: ResponsiveOptions<PieChartOptions>\n  ) {\n    super(\n      query,\n      data,\n      defaultOptions,\n      extend({}, defaultOptions, options),\n      responsiveOptions\n    );\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  createChart(options: PieChartOptionsWithDefaults) {\n    const { data } = this;\n    const normalizedData = normalizeData(data);\n    const seriesGroups: Svg[] = [];\n    let labelsGroup: Svg;\n    let labelRadius: number;\n    let startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    const svg = createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.donut\n        ? options.classNames.chartDonut\n        : options.classNames.chartPie\n    );\n\n    this.svg = svg;\n\n    // Calculate charting rect\n    const chartRect = createChartRect(svg, options);\n    // Get biggest circle radius possible within chartRect\n    let radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    const totalDataSum = options.total || normalizedData.series.reduce(sum, 0);\n\n    const donutWidth = quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut ? donutWidth.value / 2 : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if (options.labelPosition === 'outside' || options.donut) {\n      labelRadius = radius;\n    } else if (options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    if (options.labelOffset) {\n      labelRadius += options.labelOffset;\n    }\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    const center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    const hasSingleValInSeries =\n      data.series.filter(val =>\n        safeHasProperty(val, 'value') ? val.value !== 0 : val !== 0\n      ).length === 1;\n\n    // Creating the series groups\n    data.series.forEach((_, index) => (seriesGroups[index] = svg.elem('g')));\n    // if we need to show labels we create the label group now\n    if (options.showLabel) {\n      labelsGroup = svg.elem('g');\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.series.forEach((series, index) => {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (normalizedData.series[index] === 0 && options.ignoreEmptyValues) {\n        return;\n      }\n\n      const seriesName = safeHasProperty(series, 'name') && series.name;\n      const seriesClassName =\n        safeHasProperty(series, 'className') && series.className;\n      const seriesMeta = safeHasProperty(series, 'meta')\n        ? series.meta\n        : undefined;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      if (seriesName) {\n        seriesGroups[index].attr({\n          'ct:series-name': seriesName\n        });\n      }\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass(\n        [\n          options.classNames?.series,\n          seriesClassName ||\n            `${options.classNames?.series}-${alphaNumerate(index)}`\n        ].join(' ')\n      );\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      let endAngle =\n        totalDataSum > 0\n          ? startAngle + (normalizedData.series[index] / totalDataSum) * 360\n          : 0;\n\n      // Use slight offset so there are no transparent hairline issues\n      const overlappigStartAngle = Math.max(\n        0,\n        startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2)\n      );\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if (endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      const start = polarToCartesian(\n        center.x,\n        center.y,\n        radius,\n        overlappigStartAngle\n      );\n      const end = polarToCartesian(center.x, center.y, radius, endAngle);\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      const path = new SvgPath(!options.donut)\n        .move(end.x, end.y)\n        .arc(\n          radius,\n          radius,\n          0,\n          Number(endAngle - startAngle > 180),\n          0,\n          start.x,\n          start.y\n        );\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if (!options.donut) {\n        path.line(center.x, center.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      const pathElement = seriesGroups[index].elem(\n        'path',\n        {\n          d: path.stringify()\n        },\n        options.donut\n          ? options.classNames.sliceDonut\n          : options.classNames.slicePie\n      );\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': normalizedData.series[index],\n        'ct:meta': serialize(seriesMeta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if (options.donut) {\n        pathElement.attr({\n          style: 'stroke-width: ' + donutWidth.value + 'px'\n        });\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit<SliceDrawEvent>('draw', {\n        type: 'slice',\n        value: normalizedData.series[index],\n        totalDataSum: totalDataSum,\n        index,\n        meta: seriesMeta,\n        series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center,\n        radius,\n        startAngle,\n        endAngle,\n        chartRect\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if (options.showLabel) {\n        let labelPosition;\n\n        if (data.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        let rawValue;\n        if (\n          normalizedData.labels &&\n          !isFalseyButZero(normalizedData.labels[index])\n        ) {\n          rawValue = normalizedData.labels[index];\n        } else {\n          rawValue = normalizedData.series[index];\n        }\n\n        const interpolatedValue = options.labelInterpolationFnc(\n          rawValue,\n          index\n        );\n\n        if (interpolatedValue || interpolatedValue === 0) {\n          const labelElement = labelsGroup\n            .elem(\n              'text',\n              {\n                dx: labelPosition.x,\n                dy: labelPosition.y,\n                'text-anchor': determineAnchorPosition(\n                  center,\n                  labelPosition,\n                  options.labelDirection\n                )\n              },\n              options.classNames.label\n            )\n            .text(String(interpolatedValue));\n\n          // Fire off draw event\n          this.eventEmitter.emit<SliceLabelDrawEvent>('draw', {\n            type: 'label',\n            index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            chartRect,\n            series,\n            meta: seriesMeta,\n            ...labelPosition\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    });\n\n    this.eventEmitter.emit<PieChartCreatedEvent>('created', {\n      chartRect,\n      svg: svg,\n      options\n    });\n  }\n}\n","import { DOM, APP } from '../app.js';\r\nimport { UTIL } from './utilities.js';\r\nimport { HOME } from './home.js';\r\nimport { BarChart, LineChart, PieChart, Svg, easings } from 'chartist';\r\n\r\nconst INFO = (function () {\r\n  let statList = [];\r\n  let eleGain = 0;\r\n  let eleLoss = 0;\r\n  let gpxPolyline;\r\n  let map;\r\n  let rideDistance;\r\n  let maxSpd;\r\n\r\n  function initMap() {\r\n    map = L.map('map').setView([51.919437, 51.919437], 13);\r\n  }\r\n\r\n  function setupMap() {\r\n    map.invalidateSize();\r\n    map.fitBounds(gpxPolyline.getBounds());\r\n  }\r\n\r\n  function createPolyline(trackPointObjects) {\r\n    let latLngArray = [];\r\n\r\n    for ( let i=0; i<trackPointObjects.length; i++ ) {\r\n      let currentTrackpoint = []\r\n\r\n      currentTrackpoint.push(parseFloat(trackPointObjects[i].lat));\r\n      currentTrackpoint.push(parseFloat(trackPointObjects[i].lon));\r\n\r\n      latLngArray.push(currentTrackpoint);\r\n    }\r\n\r\n    gpxPolyline =  L.polyline(latLngArray, {color: 'var(--orange-70)'}).addTo(map);\r\n\r\n    return gpxPolyline;\r\n  }\r\n\r\n  function addMapTiles() {\r\n    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      maxZoom: 19,\r\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n    }).addTo(map);\r\n  }\r\n\r\n\r\n\r\n  class Statistic {\r\n    constructor(name, value) {\r\n      this.name = name;\r\n      this.value = value;\r\n    }\r\n\r\n    calcDist(trackPointObjects) {\r\n      let distance = 0;\r\n      let sum = 0;\r\n      for ( let i=0; i<trackPointObjects.length; i++ ) {\r\n        sum = distance;\r\n        distance = sum + Number(trackPointObjects[i].dist);\r\n      }\r\n      distance = distance.toFixed(3);\r\n      return distance;\r\n    }\r\n\r\n    calcMovingTime( trackPointObjects, gpxFileSize) {\r\n      let movingTime = 0;\r\n      let sum = 0;\r\n      let numberOfOptimizations = HOME.checkFileSize(gpxFileSize);\r\n      // console.log(gpxFileSize);\r\n      // console.log(numberOfOptimizations);\r\n\r\n      // console.log(trackPointObjects[1].interval);\r\n      // console.log(APP.stopTime);\r\n      // console.log(Math.pow(2, HOME.noOfOptimizations));\r\n      // console.log(HOME.noOfOptimizations);\r\n      // console.log(APP.stopTime * Math.pow(2, HOME.noOfOptimizations));\r\n      // console.log((trackPointObjects[0].interval < (APP.stopTime * Math.pow(2, HOME.noOfOptimizations))));\r\n      // console.log((trackPointObjects[0].speed > APP.stopSpeed)); //OK!\r\n\r\n\r\n      for ( let i=0; i<trackPointObjects.length; i++ ) {\r\n        sum = movingTime;               \r\n\r\n        if ((trackPointObjects[i].interval < (APP.stopTime * Math.pow(2, numberOfOptimizations))) && (trackPointObjects[i].speed > APP.stopSpeed)) {\r\n          movingTime = sum + Number(trackPointObjects[i].interval);\r\n        } else {\r\n          movingTime = sum;\r\n        }\r\n      }\r\n      return movingTime;\r\n    }\r\n\r\n    calcElevationGain(trackPointObjects) {\r\n      for ( let i=0; i<trackPointObjects.length; i++ ) {\r\n        if (trackPointObjects[i].eleDiff >= 0) {\r\n          eleGain = eleGain + Number(trackPointObjects[i].eleDiff);\r\n        } \r\n      }\r\n      eleGain = Number(eleGain);\r\n      return eleGain.toFixed(0);\r\n    };\r\n\r\n    calcElevationLoss(trackPointObjects) {\r\n      for ( let i=0; i<trackPointObjects.length; i++ ) {\r\n        if (trackPointObjects[i].eleDiff < 0) {\r\n          eleLoss = eleLoss + Number(trackPointObjects[i].eleDiff);\r\n        }\r\n      }\r\n      eleLoss = Number(eleLoss);\r\n      return eleLoss.toFixed(0);\r\n    }\r\n\r\n    calcTotalTime(trackPointObjects) {\r\n      let totalTime;\r\n      let start = trackPointObjects.at(0);\r\n      let end = trackPointObjects.at(-1);      \r\n      \r\n      totalTime = (Date.parse(end.time) - Date.parse(start.time))/1000; //in seconds\r\n\r\n      return totalTime;\r\n    }\r\n\r\n    calcAvgSpeed( totalDistance, trackPointObjects, gpxFileSize ) {\r\n      let result;\r\n      let seconds = this.calcMovingTime(trackPointObjects, gpxFileSize);\r\n      \r\n      result = (totalDistance.value / ( seconds / 3600)).toFixed(1);\r\n\r\n      return result;\r\n    }\r\n\r\n    calcMaxSpeed (trackPointObjects) {\r\n      let result = 0;\r\n      let array = (trackPointObjects).map(\r\n\t\t\t\t({ speed }) => {return speed});\r\n\r\n      for (let i = 0; i < trackPointObjects.length; i++) {\r\n        let point1 = parseFloat(array[i]);\r\n        let point2 = parseFloat(array[i-1]);\r\n        let point3 = parseFloat(array[i-2]);\r\n        let pointArray = [ point1, point2, point3 ];\r\n        let currentSpeed;\r\n        \r\n        currentSpeed = (( UTIL.sumArray(pointArray) / pointArray.length ) * 3.6); // in km/h\r\n        \r\n        if (currentSpeed > result) result = currentSpeed.toFixed(1);\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    calcMaxGradient (trackPointObjects) {\r\n      let result = 0;\r\n      let array = (trackPointObjects).map(\r\n\t\t\t\t({ eleDiff, dist }) => {return [eleDiff, dist]});\r\n\r\n      for (let i = APP.numberSmoothing; i < trackPointObjects.length; i++) {\r\n        let eleDiffArray = [];\r\n        // we need to smooth the numbers to avoid weird values due to geolocation inaccuracies:\r\n        for ( let n=0; n<APP.numberSmoothing; n++ ) {\r\n          eleDiffArray.push(parseFloat(array[i-n][0]));\r\n        }     \r\n\r\n        let distArray = [];\r\n        for ( let n=0; n<APP.numberSmoothing; n++ ) {\r\n          distArray.push(parseFloat(array[i-n][1]));\r\n        }\r\n        \r\n        let currentGradient = ( UTIL.sumArray(eleDiffArray) / UTIL.sumArray(distArray) ) * 100; // in %        \r\n        \r\n        if (currentGradient > result) result = currentGradient.toFixed(1);\r\n      }     \r\n      \r\n      return result;\r\n    }\r\n\r\n\r\n    addStat(stat, unit) {\r\n      statList = (`${statList}\r\n        <tr>\r\n          <td>${stat.name}:</td>\r\n          <td><b> ${stat.value}</b> ${unit}</td>\r\n        </tr>\r\n      `);\r\n    }\r\n  }\r\n\r\n  function calculateStats( trackPointObjects, gpxFileSize ) {\r\n    console.log('stat calculation begun.')\r\n    // Total distance\r\n      let totalDistance = new Statistic;\r\n      totalDistance.name = 'Distance';\r\n      totalDistance.value = UTIL.metersToKm(\r\n        totalDistance.calcDist(trackPointObjects));\r\n      totalDistance.addStat(totalDistance, 'km');\r\n\r\n      rideDistance = totalDistance.value;\r\n\r\n    // Moving time\r\n      let movingTime = new Statistic;\r\n      movingTime.name = 'Moving time';\r\n      movingTime.value = UTIL.secondsToMinutesAndSeconds(\r\n        movingTime.calcMovingTime(trackPointObjects, gpxFileSize));\t\t\r\n      movingTime.addStat(movingTime, '');\r\n\r\n    // Total time\r\n      let totalTime = new Statistic;\r\n      totalTime.name = 'Total time';\r\n      totalTime.value = UTIL.secondsToMinutesAndSeconds(\r\n        totalTime.calcTotalTime(trackPointObjects));\t\t\r\n      totalTime.addStat(totalTime, '');\r\n\r\n    // Average speed\r\n      let avgSpeed = new Statistic;\r\n      avgSpeed.name = 'Avg. speed';\r\n      avgSpeed.value = avgSpeed.calcAvgSpeed(totalDistance, trackPointObjects, gpxFileSize );\t\t\r\n      avgSpeed.addStat(avgSpeed, 'km/h');\r\n      \r\n    // Max speed\r\n      let maxSpeed = new Statistic;\r\n      maxSpeed.name = 'Max. speed';\r\n      maxSpeed.value = maxSpeed.calcMaxSpeed( trackPointObjects );\t\t\r\n      maxSpeed.addStat(maxSpeed, 'km/h');\r\n      maxSpd = maxSpeed.value; \r\n      \r\n    // Elevation gain\r\n      let elevationGain  = new Statistic;\r\n      elevationGain.name = 'Elevation Gain';\r\n      elevationGain.value = elevationGain.calcElevationGain(trackPointObjects);\r\n      elevationGain.addStat(elevationGain, 'm');\r\n\r\n    // Elevation loss\r\n      let elevationLoss  = new Statistic;\r\n      elevationLoss.name = 'Elevation Loss';\r\n      elevationLoss.value = elevationLoss.calcElevationLoss(trackPointObjects);\r\n      elevationLoss.addStat(elevationLoss, 'm');\r\n\r\n    // Avg. gradient\r\n      let avgGradient  = new Statistic;\r\n      avgGradient.name = 'Avg. gradient';\r\n      avgGradient.value = ( elevationGain.value / (totalDistance.value * 1000 / 2) * 100 ).toFixed(1);\r\n      avgGradient.addStat(avgGradient, '%');\r\n    \r\n    // Max. gradient\r\n      let maxGradient  = new Statistic;\r\n      maxGradient.name = 'Max. gradient';\r\n      maxGradient.value = maxGradient.calcMaxGradient(trackPointObjects);\r\n      maxGradient.addStat(maxGradient, '%');\r\n\r\n\r\n\r\n    console.log('stat calculation ended.')\r\n    // console.log(statList);\r\n\r\n    return statList;\r\n  }\r\n\r\n  function displayAllStats(statList) {\r\n    document.getElementsByClassName(\"stats__table\")[0].innerHTML = statList;\r\n  }\r\n\r\n  function prepareElevationGraph( trackPointObjects, fidelityPerc ) {\r\n    // We need to divide the ride into equal length segments.\r\n    let graphId = 'graph__elevation';\r\n    let targetDomElement = document.getElementById(graphId);\r\n    let width = targetDomElement.getBoundingClientRect().width;\r\n    let samplePoints = parseInt( width - width * (( 100 - fidelityPerc )*0.01));\r\n\r\n    let xAxis = UTIL.series( 0, rideDistance, samplePoints );\r\n\r\n    // Then get points closest to our criteria, and read their values.\r\n    let yAxis = [];\r\n    let n = 0;\r\n    let currentDist;\r\n    let currentEle;\r\n\r\n    for (let i = 0; i < trackPointObjects.length;) {\r\n      currentDist = Number(trackPointObjects[i].totDist) / 1000;\r\n      currentEle = trackPointObjects[i].ele;\r\n      // console.log(currentDist);\r\n      if ( currentDist >= (xAxis[n])){\r\n        yAxis.push(currentEle);\r\n        n++;\r\n      } \r\n      \r\n      i++;\r\n    }\r\n\r\n    if (yAxis.length = (xAxis.length - 1 )) {\r\n      yAxis.push(trackPointObjects.at(-1).ele);\r\n    }\r\n\r\n    displayLineChart( graphId, yAxis )\r\n  }\r\n\r\n  function prepareSpeedGraph( trackPointObjects, fidelityPerc ) {\r\n    // We need to divide the ride into equal length segments.\r\n    let graphId = 'graph__speed';\r\n    let targetDomElement = document.getElementById(graphId);\r\n    let width = targetDomElement.getBoundingClientRect().width;\r\n    let samplePoints = parseInt( width - width * (( 100 - fidelityPerc )*0.01));\r\n    // samplePoints = 10;\r\n\r\n    let xAxis = UTIL.series( 0, rideDistance, samplePoints );\r\n\r\n    // Then get points closest to our criteria, and read their values.\r\n    let yAxis = [];\r\n    let n = 0;\r\n    let currentDist;\r\n    let currentEle;\r\n    let currentSpeed;\r\n\r\n    // let graphMargin = 20; // percent\r\n    // let graphTop = (maxSpd * ( 1 + graphMargin/100 )) / 3.6;\r\n    // let graphBottom = (maxSpd * ( graphMargin/100 )) / 3.6;\r\n    // console.log(graphBottom);\r\n\r\n    for (let i = 0; i < trackPointObjects.length;) {\r\n      currentDist = Number(trackPointObjects[i].totDist) / 1000;\r\n      currentSpeed = trackPointObjects[i].speed;\r\n      // console.log(currentDist);\r\n      if ( currentDist >= (xAxis[n])){\r\n        yAxis.push(currentSpeed);\r\n        n++;\r\n      } \r\n      \r\n      i++;\r\n    }\r\n\r\n    if (yAxis.length = (xAxis.length - 1 )) {\r\n      yAxis.push(trackPointObjects.at(-1).speed);\r\n    }\r\n\r\n    displayLineChart( graphId, yAxis, 0, );\r\n  }\r\n\r\n  function prepareGradientsGraph (trackPointObjects) {\r\n    let graphId = 'graph__gradients';\r\n    let result = 0;\r\n    let array = (trackPointObjects).map(\r\n      ({ eleDiff, dist, interval }) => {return [eleDiff, dist, interval]});\r\n    let gradientsArray = Array(APP.numberSmoothing).fill('0');\r\n    let intervalArray = [];\r\n    for (let i=0; i<APP.numberSmoothing; i++ ) {\r\n      intervalArray.push(array[i][2])\r\n    }\r\n    let isArrayValid = false;\r\n    let valuesToChart;\r\n\r\n    const prepareGradArray = () => {\r\n      return new Promise((resolve, reject) => {\r\n        for (let i = APP.numberSmoothing; i < trackPointObjects.length; i++) {\r\n          let eleDiffArray = [];\r\n          // we need to smooth the numbers to avoid weird values due to geolocation inaccuracies:\r\n          for ( let n=0; n<APP.numberSmoothing; n++ ) {\r\n            eleDiffArray.push(parseFloat(array[i-n][0]));\r\n          }     \r\n\r\n          let distArray = [];\r\n          for ( let n=0; n<APP.numberSmoothing; n++ ) {\r\n            distArray.push(parseFloat(array[i-n][1]));\r\n          }\r\n          \r\n          let currentGradient = ( UTIL.sumArray(eleDiffArray) / UTIL.sumArray(distArray) ) * 100; // in %        \r\n          let currentInterval = parseFloat(array[i][2]);\r\n\r\n          intervalArray.push(currentInterval);\r\n          gradientsArray.push(currentGradient.toFixed(1));\r\n        }\r\n        if (gradientsArray.length = trackPointObjects.length) {\r\n          isArrayValid = true;\r\n          console.log ( 'Array is valid.' ); \r\n          resolve ( 'Array is valid.' ); \r\n        } else {\r\n          isArrayValid = false;\r\n          console.log ( 'Array is invalid.' );\r\n          reject ( 'Array is invalid.' );\r\n        }\r\n      }, isArrayValid)    \r\n    }    \r\n\r\n    function sortGradientsByTime ( gradArray, intArray, boundaries ) {\r\n      let downhill = boundaries[0];\r\n      let flat = boundaries[1];\r\n      let mildUphill = boundaries[2];\r\n\r\n      let downhillArray = [];\r\n      let flatArray = [];\r\n      let mildUphillArray = [];\r\n      let steepUphillArray = [];\r\n\r\n      for (let i = 0; i < gradArray.length; i++) {\r\n        const gradient = gradArray[i];\r\n        let interval = intArray[i];\r\n        interval = Math.min(interval, APP.stopTime);\r\n\r\n        if(gradient < downhill) {\r\n          downhillArray.push(interval);\r\n        } else if(gradient < flat) {\r\n          flatArray.push(interval);          \r\n        } else if(gradient < mildUphill) {\r\n          mildUphillArray.push(interval);          \r\n        } else {\r\n          steepUphillArray.push(interval);\r\n        }        \r\n      }\r\n\r\n      result = [ UTIL.sumArray(downhillArray),\r\n                 UTIL.sumArray(flatArray),\r\n                 UTIL.sumArray(mildUphillArray),\r\n                 UTIL.sumArray(steepUphillArray), ]\r\n      console.log(result);\r\n\r\n      return result;\r\n    }\r\n    \r\n\r\n    prepareGradArray()\r\n      .then(() => {\r\n        // sort values\r\n        valuesToChart = sortGradientsByTime( gradientsArray, intervalArray, APP.gradientBoundaries);\r\n      })\r\n      .then(() => {\r\n        displayPieChart( graphId, valuesToChart );\r\n      })\r\n      .then(() => {\r\n\r\n      })    \r\n  }\r\n\r\n  function displayLineChart( graphId, valueArray, min, max ) {\r\n    var data = {\r\n      // A labels array that can contain any sort of values\r\n      labels: [ ],\r\n      // Our series array that contains series objects or in this case series data arrays\r\n      series: [\r\n        valueArray,\r\n      ]\r\n    };\r\n    var options = {\r\n      fullWidth: true,\r\n      showArea: true,\r\n      showPoint: false,\r\n      lineSmooth: false,\r\n      chartPadding: 10,\r\n      // X-Axis specific configuration\r\n      axisX: {\r\n        showGrid: false,\r\n        showLabel: false,\r\n        stretch: true,\r\n        offset: 0,\r\n      },\r\n      // Y-Axis specific configuration\r\n      axisY: {\r\n        showLabel: false,\r\n        // Lets offset the chart a bit from the labels\r\n        offset: 0,\r\n        // low: 0,\r\n        // high: max,\r\n        // The label interpolation function enables you to modify the values\r\n        // used for the labels on each axis. Here we are converting the\r\n        // values into million pound.\r\n        labelInterpolationFnc: function (value) {\r\n          return '$' + value + 'm';\r\n        }\r\n      },\r\n    };\r\n    new LineChart(`#${graphId}`, data, options);    \r\n  }\r\n\r\n  function displayPieChart( graphId, valueArray, min, max ) {\r\n    var data = {\r\n      // Our series array that contains series objects or in this case series data arrays\r\n      series: valueArray,\r\n\r\n      // A labels array that can contain any sort of values\r\n      labels: ['downhill', 'flat', 'mild uphill', 'steep uphill'],\r\n\r\n    };\r\n\r\n    console.log(data.labels.length)\r\n\r\n    let joinedLabels = [];\r\n    let joinLabels = function (data) {\r\n      for (let i = 0; i < data.labels.length; i++) {\r\n        let newLabel;\r\n        const label = data.labels[i];\r\n        const value = data.series[i];\r\n        newLabel = `${label} ${value}`;\r\n\r\n        joinedLabels.push(newLabel);\r\n        \r\n      }\r\n      return joinedLabels;\r\n    };\r\n    // joinLabels(data);\r\n\r\n    let data2 = data.series;\r\n\r\n    var options = {\r\n      \r\n      chartPadding: 10,\r\n      donut: true,\r\n      donutWidth: 55,      \r\n\r\n      // labelInterpolationFnc: function (data) {\r\n      //   return data + '%';        \r\n      // }\r\n      \r\n    };\r\n    \r\n    new PieChart(`#${graphId}`, data, options);    \r\n  }\r\n\r\n  return {\r\n    initMap,\r\n    calculateStats,\r\n    setupMap,\r\n    createPolyline,\r\n    addMapTiles,\r\n    displayAllStats,\r\n    prepareElevationGraph,\r\n    prepareSpeedGraph,\r\n    prepareGradientsGraph,\r\n  }\r\n})();\r\n\r\nexport { INFO };","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n// deno-lint-ignore-file no-this-alias prefer-const\n\n// Global\n\nconst MAX_BITS = 15;\nconst D_CODES = 30;\nconst BL_CODES = 19;\n\nconst LENGTH_CODES = 29;\nconst LITERALS = 256;\nconst L_CODES = (LITERALS + 1 + LENGTH_CODES);\nconst HEAP_SIZE = (2 * L_CODES + 1);\n\nconst END_BLOCK = 256;\n\n// Bit length codes must not exceed MAX_BL_BITS bits\nconst MAX_BL_BITS = 7;\n\n// repeat previous bit length 3-6 times (2 bits of repeat count)\nconst REP_3_6 = 16;\n\n// repeat a zero length 3-10 times (3 bits of repeat count)\nconst REPZ_3_10 = 17;\n\n// repeat a zero length 11-138 times (7 bits of repeat count)\nconst REPZ_11_138 = 18;\n\n// The lengths of the bit length codes are sent in order of decreasing\n// probability, to avoid transmitting the lengths for unused bit\n// length codes.\n\nconst Buf_size = 8 * 2;\n\n// JZlib version : \"1.0.2\"\nconst Z_DEFAULT_COMPRESSION = -1;\n\n// compression strategy\nconst Z_FILTERED = 1;\nconst Z_HUFFMAN_ONLY = 2;\nconst Z_DEFAULT_STRATEGY = 0;\n\nconst Z_NO_FLUSH = 0;\nconst Z_PARTIAL_FLUSH = 1;\nconst Z_FULL_FLUSH = 3;\nconst Z_FINISH = 4;\n\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_NEED_DICT = 2;\nconst Z_STREAM_ERROR = -2;\nconst Z_DATA_ERROR = -3;\nconst Z_BUF_ERROR = -5;\n\n// Tree\n\nfunction extractArray(array) {\n\treturn flatArray(array.map(([length, value]) => (new Array(length)).fill(value, 0, length)));\n}\n\nfunction flatArray(array) {\n\treturn array.reduce((a, b) => a.concat(Array.isArray(b) ? flatArray(b) : b), []);\n}\n\n// see definition of array dist_code below\nconst _dist_code = [0, 1, 2, 3].concat(...extractArray([\n\t[2, 4], [2, 5], [4, 6], [4, 7], [8, 8], [8, 9], [16, 10], [16, 11], [32, 12], [32, 13], [64, 14], [64, 15], [2, 0], [1, 16],\n\t[1, 17], [2, 18], [2, 19], [4, 20], [4, 21], [8, 22], [8, 23], [16, 24], [16, 25], [32, 26], [32, 27], [64, 28], [64, 29]\n]));\n\nfunction Tree() {\n\tconst that = this;\n\n\t// dyn_tree; // the dynamic tree\n\t// max_code; // largest code with non zero frequency\n\t// stat_desc; // the corresponding static tree\n\n\t// Compute the optimal bit lengths for a tree and update the total bit\n\t// length\n\t// for the current block.\n\t// IN assertion: the fields freq and dad are set, heap[heap_max] and\n\t// above are the tree nodes sorted by increasing frequency.\n\t// OUT assertions: the field len is set to the optimal bit length, the\n\t// array bl_count contains the frequencies for each bit length.\n\t// The length opt_len is updated; static_len is also updated if stree is\n\t// not null.\n\tfunction gen_bitlen(s) {\n\t\tconst tree = that.dyn_tree;\n\t\tconst stree = that.stat_desc.static_tree;\n\t\tconst extra = that.stat_desc.extra_bits;\n\t\tconst base = that.stat_desc.extra_base;\n\t\tconst max_length = that.stat_desc.max_length;\n\t\tlet h; // heap index\n\t\tlet n, m; // iterate over the tree elements\n\t\tlet bits; // bit length\n\t\tlet xbits; // extra bits\n\t\tlet f; // frequency\n\t\tlet overflow = 0; // number of elements with bit length too large\n\n\t\tfor (bits = 0; bits <= MAX_BITS; bits++)\n\t\t\ts.bl_count[bits] = 0;\n\n\t\t// In a first pass, compute the optimal bit lengths (which may\n\t\t// overflow in the case of the bit length tree).\n\t\ttree[s.heap[s.heap_max] * 2 + 1] = 0; // root of the heap\n\n\t\tfor (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n\t\t\tn = s.heap[h];\n\t\t\tbits = tree[tree[n * 2 + 1] * 2 + 1] + 1;\n\t\t\tif (bits > max_length) {\n\t\t\t\tbits = max_length;\n\t\t\t\toverflow++;\n\t\t\t}\n\t\t\ttree[n * 2 + 1] = bits;\n\t\t\t// We overwrite tree[n*2+1] which is no longer needed\n\n\t\t\tif (n > that.max_code)\n\t\t\t\tcontinue; // not a leaf node\n\n\t\t\ts.bl_count[bits]++;\n\t\t\txbits = 0;\n\t\t\tif (n >= base)\n\t\t\t\txbits = extra[n - base];\n\t\t\tf = tree[n * 2];\n\t\t\ts.opt_len += f * (bits + xbits);\n\t\t\tif (stree)\n\t\t\t\ts.static_len += f * (stree[n * 2 + 1] + xbits);\n\t\t}\n\t\tif (overflow === 0)\n\t\t\treturn;\n\n\t\t// This happens for example on obj2 and pic of the Calgary corpus\n\t\t// Find the first bit length which could increase:\n\t\tdo {\n\t\t\tbits = max_length - 1;\n\t\t\twhile (s.bl_count[bits] === 0)\n\t\t\t\tbits--;\n\t\t\ts.bl_count[bits]--; // move one leaf down the tree\n\t\t\ts.bl_count[bits + 1] += 2; // move one overflow item as its brother\n\t\t\ts.bl_count[max_length]--;\n\t\t\t// The brother of the overflow item also moves one step up,\n\t\t\t// but this does not affect bl_count[max_length]\n\t\t\toverflow -= 2;\n\t\t} while (overflow > 0);\n\n\t\tfor (bits = max_length; bits !== 0; bits--) {\n\t\t\tn = s.bl_count[bits];\n\t\t\twhile (n !== 0) {\n\t\t\t\tm = s.heap[--h];\n\t\t\t\tif (m > that.max_code)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (tree[m * 2 + 1] != bits) {\n\t\t\t\t\ts.opt_len += (bits - tree[m * 2 + 1]) * tree[m * 2];\n\t\t\t\t\ttree[m * 2 + 1] = bits;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Reverse the first len bits of a code, using straightforward code (a\n\t// faster\n\t// method would use a table)\n\t// IN assertion: 1 <= len <= 15\n\tfunction bi_reverse(code, // the value to invert\n\t\tlen // its bit length\n\t) {\n\t\tlet res = 0;\n\t\tdo {\n\t\t\tres |= code & 1;\n\t\t\tcode >>>= 1;\n\t\t\tres <<= 1;\n\t\t} while (--len > 0);\n\t\treturn res >>> 1;\n\t}\n\n\t// Generate the codes for a given tree and bit counts (which need not be\n\t// optimal).\n\t// IN assertion: the array bl_count contains the bit length statistics for\n\t// the given tree and the field len is set for all tree elements.\n\t// OUT assertion: the field code is set for all tree elements of non\n\t// zero code length.\n\tfunction gen_codes(tree, // the tree to decorate\n\t\tmax_code, // largest code with non zero frequency\n\t\tbl_count // number of codes at each bit length\n\t) {\n\t\tconst next_code = []; // next code value for each\n\t\t// bit length\n\t\tlet code = 0; // running code value\n\t\tlet bits; // bit index\n\t\tlet n; // code index\n\t\tlet len;\n\n\t\t// The distribution counts are first used to generate the code values\n\t\t// without bit reversal.\n\t\tfor (bits = 1; bits <= MAX_BITS; bits++) {\n\t\t\tnext_code[bits] = code = ((code + bl_count[bits - 1]) << 1);\n\t\t}\n\n\t\t// Check that the bit counts in bl_count are consistent. The last code\n\t\t// must be all ones.\n\t\t// Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n\t\t// \"inconsistent bit counts\");\n\t\t// Tracev((stderr,\"gen_codes: max_code %d \", max_code));\n\n\t\tfor (n = 0; n <= max_code; n++) {\n\t\t\tlen = tree[n * 2 + 1];\n\t\t\tif (len === 0)\n\t\t\t\tcontinue;\n\t\t\t// Now reverse the bits\n\t\t\ttree[n * 2] = bi_reverse(next_code[len]++, len);\n\t\t}\n\t}\n\n\t// Construct one Huffman tree and assigns the code bit strings and lengths.\n\t// Update the total bit length for the current block.\n\t// IN assertion: the field freq is set for all tree elements.\n\t// OUT assertions: the fields len and code are set to the optimal bit length\n\t// and corresponding code. The length opt_len is updated; static_len is\n\t// also updated if stree is not null. The field max_code is set.\n\tthat.build_tree = function (s) {\n\t\tconst tree = that.dyn_tree;\n\t\tconst stree = that.stat_desc.static_tree;\n\t\tconst elems = that.stat_desc.elems;\n\t\tlet n, m; // iterate over heap elements\n\t\tlet max_code = -1; // largest code with non zero frequency\n\t\tlet node; // new node being created\n\n\t\t// Construct the initial heap, with least frequent element in\n\t\t// heap[1]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n\t\t// heap[0] is not used.\n\t\ts.heap_len = 0;\n\t\ts.heap_max = HEAP_SIZE;\n\n\t\tfor (n = 0; n < elems; n++) {\n\t\t\tif (tree[n * 2] !== 0) {\n\t\t\t\ts.heap[++s.heap_len] = max_code = n;\n\t\t\t\ts.depth[n] = 0;\n\t\t\t} else {\n\t\t\t\ttree[n * 2 + 1] = 0;\n\t\t\t}\n\t\t}\n\n\t\t// The pkzip format requires that at least one distance code exists,\n\t\t// and that at least one bit should be sent even if there is only one\n\t\t// possible code. So to avoid special checks later on we force at least\n\t\t// two codes of non zero frequency.\n\t\twhile (s.heap_len < 2) {\n\t\t\tnode = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;\n\t\t\ttree[node * 2] = 1;\n\t\t\ts.depth[node] = 0;\n\t\t\ts.opt_len--;\n\t\t\tif (stree)\n\t\t\t\ts.static_len -= stree[node * 2 + 1];\n\t\t\t// node is 0 or 1 so it does not have extra bits\n\t\t}\n\t\tthat.max_code = max_code;\n\n\t\t// The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n\t\t// establish sub-heaps of increasing lengths:\n\n\t\tfor (n = Math.floor(s.heap_len / 2); n >= 1; n--)\n\t\t\ts.pqdownheap(tree, n);\n\n\t\t// Construct the Huffman tree by repeatedly combining the least two\n\t\t// frequent nodes.\n\n\t\tnode = elems; // next internal node of the tree\n\t\tdo {\n\t\t\t// n = node of least frequency\n\t\t\tn = s.heap[1];\n\t\t\ts.heap[1] = s.heap[s.heap_len--];\n\t\t\ts.pqdownheap(tree, 1);\n\t\t\tm = s.heap[1]; // m = node of next least frequency\n\n\t\t\ts.heap[--s.heap_max] = n; // keep the nodes sorted by frequency\n\t\t\ts.heap[--s.heap_max] = m;\n\n\t\t\t// Create a new node father of n and m\n\t\t\ttree[node * 2] = (tree[n * 2] + tree[m * 2]);\n\t\t\ts.depth[node] = Math.max(s.depth[n], s.depth[m]) + 1;\n\t\t\ttree[n * 2 + 1] = tree[m * 2 + 1] = node;\n\n\t\t\t// and insert the new node in the heap\n\t\t\ts.heap[1] = node++;\n\t\t\ts.pqdownheap(tree, 1);\n\t\t} while (s.heap_len >= 2);\n\n\t\ts.heap[--s.heap_max] = s.heap[1];\n\n\t\t// At this point, the fields freq and dad are set. We can now\n\t\t// generate the bit lengths.\n\n\t\tgen_bitlen(s);\n\n\t\t// The field len is now set, we can generate the bit codes\n\t\tgen_codes(tree, that.max_code, s.bl_count);\n\t};\n\n}\n\nTree._length_code = [0, 1, 2, 3, 4, 5, 6, 7].concat(...extractArray([\n\t[2, 8], [2, 9], [2, 10], [2, 11], [4, 12], [4, 13], [4, 14], [4, 15], [8, 16], [8, 17], [8, 18], [8, 19],\n\t[16, 20], [16, 21], [16, 22], [16, 23], [32, 24], [32, 25], [32, 26], [31, 27], [1, 28]]));\n\nTree.base_length = [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 16, 20, 24, 28, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 0];\n\nTree.base_dist = [0, 1, 2, 3, 4, 6, 8, 12, 16, 24, 32, 48, 64, 96, 128, 192, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 6144, 8192, 12288, 16384,\n\t24576];\n\n// Mapping from a distance to a distance code. dist is the distance - 1 and\n// must not have side effects. _dist_code[256] and _dist_code[257] are never\n// used.\nTree.d_code = function (dist) {\n\treturn ((dist) < 256 ? _dist_code[dist] : _dist_code[256 + ((dist) >>> 7)]);\n};\n\n// extra bits for each length code\nTree.extra_lbits = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n\n// extra bits for each distance code\nTree.extra_dbits = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\n\n// extra bits for each bit length code\nTree.extra_blbits = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];\n\nTree.bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n// StaticTree\n\nfunction StaticTree(static_tree, extra_bits, extra_base, elems, max_length) {\n\tconst that = this;\n\tthat.static_tree = static_tree;\n\tthat.extra_bits = extra_bits;\n\tthat.extra_base = extra_base;\n\tthat.elems = elems;\n\tthat.max_length = max_length;\n}\n\nconst static_ltree2_first_part = [12, 140, 76, 204, 44, 172, 108, 236, 28, 156, 92, 220, 60, 188, 124, 252, 2, 130, 66, 194, 34, 162, 98, 226, 18, 146, 82,\n\t210, 50, 178, 114, 242, 10, 138, 74, 202, 42, 170, 106, 234, 26, 154, 90, 218, 58, 186, 122, 250, 6, 134, 70, 198, 38, 166, 102, 230, 22, 150, 86,\n\t214, 54, 182, 118, 246, 14, 142, 78, 206, 46, 174, 110, 238, 30, 158, 94, 222, 62, 190, 126, 254, 1, 129, 65, 193, 33, 161, 97, 225, 17, 145, 81,\n\t209, 49, 177, 113, 241, 9, 137, 73, 201, 41, 169, 105, 233, 25, 153, 89, 217, 57, 185, 121, 249, 5, 133, 69, 197, 37, 165, 101, 229, 21, 149, 85,\n\t213, 53, 181, 117, 245, 13, 141, 77, 205, 45, 173, 109, 237, 29, 157, 93, 221, 61, 189, 125, 253, 19, 275, 147, 403, 83, 339, 211, 467, 51, 307,\n\t179, 435, 115, 371, 243, 499, 11, 267, 139, 395, 75, 331, 203, 459, 43, 299, 171, 427, 107, 363, 235, 491, 27, 283, 155, 411, 91, 347, 219, 475,\n\t59, 315, 187, 443, 123, 379, 251, 507, 7, 263, 135, 391, 71, 327, 199, 455, 39, 295, 167, 423, 103, 359, 231, 487, 23, 279, 151, 407, 87, 343, 215,\n\t471, 55, 311, 183, 439, 119, 375, 247, 503, 15, 271, 143, 399, 79, 335, 207, 463, 47, 303, 175, 431, 111, 367, 239, 495, 31, 287, 159, 415, 95,\n\t351, 223, 479, 63, 319, 191, 447, 127, 383, 255, 511, 0, 64, 32, 96, 16, 80, 48, 112, 8, 72, 40, 104, 24, 88, 56, 120, 4, 68, 36, 100, 20, 84, 52,\n\t116, 3, 131, 67, 195, 35, 163, 99, 227];\nconst static_ltree2_second_part = extractArray([[144, 8], [112, 9], [24, 7], [8, 8]]);\nStaticTree.static_ltree = flatArray(static_ltree2_first_part.map((value, index) => [value, static_ltree2_second_part[index]]));\n\nconst static_dtree_first_part = [0, 16, 8, 24, 4, 20, 12, 28, 2, 18, 10, 26, 6, 22, 14, 30, 1, 17, 9, 25, 5, 21, 13, 29, 3, 19, 11, 27, 7, 23];\nconst static_dtree_second_part = extractArray([[30, 5]]);\nStaticTree.static_dtree = flatArray(static_dtree_first_part.map((value, index) => [value, static_dtree_second_part[index]]));\n\nStaticTree.static_l_desc = new StaticTree(StaticTree.static_ltree, Tree.extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n\nStaticTree.static_d_desc = new StaticTree(StaticTree.static_dtree, Tree.extra_dbits, 0, D_CODES, MAX_BITS);\n\nStaticTree.static_bl_desc = new StaticTree(null, Tree.extra_blbits, 0, BL_CODES, MAX_BL_BITS);\n\n// Deflate\n\nconst MAX_MEM_LEVEL = 9;\nconst DEF_MEM_LEVEL = 8;\n\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\tconst that = this;\n\tthat.good_length = good_length;\n\tthat.max_lazy = max_lazy;\n\tthat.nice_length = nice_length;\n\tthat.max_chain = max_chain;\n\tthat.func = func;\n}\n\nconst STORED = 0;\nconst FAST = 1;\nconst SLOW = 2;\nconst config_table = [\n\tnew Config(0, 0, 0, 0, STORED),\n\tnew Config(4, 4, 8, 4, FAST),\n\tnew Config(4, 5, 16, 8, FAST),\n\tnew Config(4, 6, 32, 32, FAST),\n\tnew Config(4, 4, 16, 16, SLOW),\n\tnew Config(8, 16, 32, 32, SLOW),\n\tnew Config(8, 16, 128, 128, SLOW),\n\tnew Config(8, 32, 128, 256, SLOW),\n\tnew Config(32, 128, 258, 1024, SLOW),\n\tnew Config(32, 258, 258, 4096, SLOW)\n];\n\nconst z_errmsg = [\"need dictionary\", // Z_NEED_DICT\n\t// 2\n\t\"stream end\", // Z_STREAM_END 1\n\t\"\", // Z_OK 0\n\t\"\", // Z_ERRNO (-1)\n\t\"stream error\", // Z_STREAM_ERROR (-2)\n\t\"data error\", // Z_DATA_ERROR (-3)\n\t\"\", // Z_MEM_ERROR (-4)\n\t\"buffer error\", // Z_BUF_ERROR (-5)\n\t\"\",// Z_VERSION_ERROR (-6)\n\t\"\"];\n\n// block not completed, need more input or more output\nconst NeedMore = 0;\n\n// block flush performed\nconst BlockDone = 1;\n\n// finish started, need only more output at next deflate\nconst FinishStarted = 2;\n\n// finish done, accept no more input or output\nconst FinishDone = 3;\n\n// preset dictionary flag in zlib header\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\n// The deflate compression method\nconst Z_DEFLATED = 8;\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES = 2;\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nfunction smaller(tree, n, m, depth) {\n\tconst tn2 = tree[n * 2];\n\tconst tm2 = tree[m * 2];\n\treturn (tn2 < tm2 || (tn2 == tm2 && depth[n] <= depth[m]));\n}\n\nfunction Deflate() {\n\n\tconst that = this;\n\tlet strm; // pointer back to this zlib stream\n\tlet status; // as the name implies\n\t// pending_buf; // output still pending\n\tlet pending_buf_size; // size of pending_buf\n\t// pending_out; // next pending byte to output to the stream\n\t// pending; // nb of bytes in the pending buffer\n\n\t// dist_buf; // buffer for distances\n\t// lc_buf; // buffer for literals or lengths\n\t// To simplify the code, dist_buf and lc_buf have the same number of elements.\n\t// To use different lengths, an extra flag array would be necessary.\n\n\tlet last_flush; // value of flush param for previous deflate call\n\n\tlet w_size; // LZ77 win size (32K by default)\n\tlet w_bits; // log2(w_size) (8..16)\n\tlet w_mask; // w_size - 1\n\n\tlet win;\n\t// Sliding win. Input bytes are read into the second half of the win,\n\t// and move to the first half later to keep a dictionary of at least wSize\n\t// bytes. With this organization, matches are limited to a distance of\n\t// wSize-MAX_MATCH bytes, but this ensures that IO is always\n\t// performed with a length multiple of the block size. Also, it limits\n\t// the win size to 64K, which is quite useful on MSDOS.\n\t// To do: use the user input buffer as sliding win.\n\n\tlet window_size;\n\t// Actual size of win: 2*wSize, except when the user input buffer\n\t// is directly used as sliding win.\n\n\tlet prev;\n\t// Link to older string with same hash index. To limit the size of this\n\t// array to 64K, this link is maintained only for the last 32K strings.\n\t// An index in this array is thus a win index modulo 32K.\n\n\tlet head; // Heads of the hash chains or NIL.\n\n\tlet ins_h; // hash index of string to be inserted\n\tlet hash_size; // number of elements in hash table\n\tlet hash_bits; // log2(hash_size)\n\tlet hash_mask; // hash_size-1\n\n\t// Number of bits by which ins_h must be shifted at each input\n\t// step. It must be such that after MIN_MATCH steps, the oldest\n\t// byte no longer takes part in the hash key, that is:\n\t// hash_shift * MIN_MATCH >= hash_bits\n\tlet hash_shift;\n\n\t// Window position at the beginning of the current output block. Gets\n\t// negative when the win is moved backwards.\n\n\tlet block_start;\n\n\tlet match_length; // length of best match\n\tlet prev_match; // previous match\n\tlet match_available; // set if previous match exists\n\tlet strstart; // start of string to insert\n\tlet match_start; // start of matching string\n\tlet lookahead; // number of valid bytes ahead in win\n\n\t// Length of the best match at previous step. Matches not greater than this\n\t// are discarded. This is used in the lazy match evaluation.\n\tlet prev_length;\n\n\t// To speed up deflation, hash chains are never searched beyond this\n\t// length. A higher limit improves compression ratio but degrades the speed.\n\tlet max_chain_length;\n\n\t// Attempt to find a better match only when the current match is strictly\n\t// smaller than this value. This mechanism is used only for compression\n\t// levels >= 4.\n\tlet max_lazy_match;\n\n\t// Insert new strings in the hash table only if the match length is not\n\t// greater than this length. This saves time but degrades compression.\n\t// max_insert_length is used only for compression levels <= 3.\n\n\tlet level; // compression level (1..9)\n\tlet strategy; // favor or force Huffman coding\n\n\t// Use a faster search when the previous match is longer than this\n\tlet good_match;\n\n\t// Stop searching when current match exceeds this\n\tlet nice_match;\n\n\tlet dyn_ltree; // literal and length tree\n\tlet dyn_dtree; // distance tree\n\tlet bl_tree; // Huffman tree for bit lengths\n\n\tconst l_desc = new Tree(); // desc for literal tree\n\tconst d_desc = new Tree(); // desc for distance tree\n\tconst bl_desc = new Tree(); // desc for bit length tree\n\n\t// that.heap_len; // number of elements in the heap\n\t// that.heap_max; // element of largest frequency\n\t// The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n\t// The same heap array is used to build all trees.\n\n\t// Depth of each subtree used as tie breaker for trees of equal frequency\n\tthat.depth = [];\n\n\t// Size of match buffer for literals/lengths. There are 4 reasons for\n\t// limiting lit_bufsize to 64K:\n\t// - frequencies can be kept in 16 bit counters\n\t// - if compression is not successful for the first block, all input\n\t// data is still in the win so we can still emit a stored block even\n\t// when input comes from standard input. (This can also be done for\n\t// all blocks if lit_bufsize is not greater than 32K.)\n\t// - if compression is not successful for a file smaller than 64K, we can\n\t// even emit a stored file instead of a stored block (saving 5 bytes).\n\t// This is applicable only for zip (not gzip or zlib).\n\t// - creating new Huffman trees less frequently may not provide fast\n\t// adaptation to changes in the input data statistics. (Take for\n\t// example a binary file with poorly compressible code followed by\n\t// a highly compressible string table.) Smaller buffer sizes give\n\t// fast adaptation but have of course the overhead of transmitting\n\t// trees more frequently.\n\t// - I can't count above 4\n\tlet lit_bufsize;\n\n\tlet last_lit; // running index in dist_buf and lc_buf\n\n\t// that.opt_len; // bit length of current block with optimal trees\n\t// that.static_len; // bit length of current block with static trees\n\tlet matches; // number of string matches in current block\n\tlet last_eob_len; // bit length of EOB code for last block\n\n\t// Output buffer. bits are inserted starting at the bottom (least\n\t// significant bits).\n\tlet bi_buf;\n\n\t// Number of valid bits in bi_buf. All bits above the last valid bit\n\t// are always zero.\n\tlet bi_valid;\n\n\t// number of codes at each bit length for an optimal tree\n\tthat.bl_count = [];\n\n\t// heap used to build the Huffman trees\n\tthat.heap = [];\n\n\tdyn_ltree = [];\n\tdyn_dtree = [];\n\tbl_tree = [];\n\n\tfunction lm_init() {\n\t\twindow_size = 2 * w_size;\n\n\t\thead[hash_size - 1] = 0;\n\t\tfor (let i = 0; i < hash_size - 1; i++) {\n\t\t\thead[i] = 0;\n\t\t}\n\n\t\t// Set the default configuration parameters:\n\t\tmax_lazy_match = config_table[level].max_lazy;\n\t\tgood_match = config_table[level].good_length;\n\t\tnice_match = config_table[level].nice_length;\n\t\tmax_chain_length = config_table[level].max_chain;\n\n\t\tstrstart = 0;\n\t\tblock_start = 0;\n\t\tlookahead = 0;\n\t\tmatch_length = prev_length = MIN_MATCH - 1;\n\t\tmatch_available = 0;\n\t\tins_h = 0;\n\t}\n\n\tfunction init_block() {\n\t\tlet i;\n\t\t// Initialize the trees.\n\t\tfor (i = 0; i < L_CODES; i++)\n\t\t\tdyn_ltree[i * 2] = 0;\n\t\tfor (i = 0; i < D_CODES; i++)\n\t\t\tdyn_dtree[i * 2] = 0;\n\t\tfor (i = 0; i < BL_CODES; i++)\n\t\t\tbl_tree[i * 2] = 0;\n\n\t\tdyn_ltree[END_BLOCK * 2] = 1;\n\t\tthat.opt_len = that.static_len = 0;\n\t\tlast_lit = matches = 0;\n\t}\n\n\t// Initialize the tree data structures for a new zlib stream.\n\tfunction tr_init() {\n\n\t\tl_desc.dyn_tree = dyn_ltree;\n\t\tl_desc.stat_desc = StaticTree.static_l_desc;\n\n\t\td_desc.dyn_tree = dyn_dtree;\n\t\td_desc.stat_desc = StaticTree.static_d_desc;\n\n\t\tbl_desc.dyn_tree = bl_tree;\n\t\tbl_desc.stat_desc = StaticTree.static_bl_desc;\n\n\t\tbi_buf = 0;\n\t\tbi_valid = 0;\n\t\tlast_eob_len = 8; // enough lookahead for inflate\n\n\t\t// Initialize the first block of the first file:\n\t\tinit_block();\n\t}\n\n\t// Restore the heap property by moving down the tree starting at node k,\n\t// exchanging a node with the smallest of its two sons if necessary,\n\t// stopping\n\t// when the heap property is re-established (each father smaller than its\n\t// two sons).\n\tthat.pqdownheap = function (tree, // the tree to restore\n\t\tk // node to move down\n\t) {\n\t\tconst heap = that.heap;\n\t\tconst v = heap[k];\n\t\tlet j = k << 1; // left son of k\n\t\twhile (j <= that.heap_len) {\n\t\t\t// Set j to the smallest of the two sons:\n\t\t\tif (j < that.heap_len && smaller(tree, heap[j + 1], heap[j], that.depth)) {\n\t\t\t\tj++;\n\t\t\t}\n\t\t\t// Exit if v is smaller than both sons\n\t\t\tif (smaller(tree, v, heap[j], that.depth))\n\t\t\t\tbreak;\n\n\t\t\t// Exchange v with the smallest son\n\t\t\theap[k] = heap[j];\n\t\t\tk = j;\n\t\t\t// And continue down the tree, setting j to the left son of k\n\t\t\tj <<= 1;\n\t\t}\n\t\theap[k] = v;\n\t};\n\n\t// Scan a literal or distance tree to determine the frequencies of the codes\n\t// in the bit length tree.\n\tfunction scan_tree(tree,// the tree to be scanned\n\t\tmax_code // and its largest code of non zero frequency\n\t) {\n\t\tlet prevlen = -1; // last emitted length\n\t\tlet curlen; // length of current code\n\t\tlet nextlen = tree[0 * 2 + 1]; // length of next code\n\t\tlet count = 0; // repeat count of the current code\n\t\tlet max_count = 7; // max repeat count\n\t\tlet min_count = 4; // min repeat count\n\n\t\tif (nextlen === 0) {\n\t\t\tmax_count = 138;\n\t\t\tmin_count = 3;\n\t\t}\n\t\ttree[(max_code + 1) * 2 + 1] = 0xffff; // guard\n\n\t\tfor (let n = 0; n <= max_code; n++) {\n\t\t\tcurlen = nextlen;\n\t\t\tnextlen = tree[(n + 1) * 2 + 1];\n\t\t\tif (++count < max_count && curlen == nextlen) {\n\t\t\t\tcontinue;\n\t\t\t} else if (count < min_count) {\n\t\t\t\tbl_tree[curlen * 2] += count;\n\t\t\t} else if (curlen !== 0) {\n\t\t\t\tif (curlen != prevlen)\n\t\t\t\t\tbl_tree[curlen * 2]++;\n\t\t\t\tbl_tree[REP_3_6 * 2]++;\n\t\t\t} else if (count <= 10) {\n\t\t\t\tbl_tree[REPZ_3_10 * 2]++;\n\t\t\t} else {\n\t\t\t\tbl_tree[REPZ_11_138 * 2]++;\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\tprevlen = curlen;\n\t\t\tif (nextlen === 0) {\n\t\t\t\tmax_count = 138;\n\t\t\t\tmin_count = 3;\n\t\t\t} else if (curlen == nextlen) {\n\t\t\t\tmax_count = 6;\n\t\t\t\tmin_count = 3;\n\t\t\t} else {\n\t\t\t\tmax_count = 7;\n\t\t\t\tmin_count = 4;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Construct the Huffman tree for the bit lengths and return the index in\n\t// bl_order of the last bit length code to send.\n\tfunction build_bl_tree() {\n\t\tlet max_blindex; // index of last bit length code of non zero freq\n\n\t\t// Determine the bit length frequencies for literal and distance trees\n\t\tscan_tree(dyn_ltree, l_desc.max_code);\n\t\tscan_tree(dyn_dtree, d_desc.max_code);\n\n\t\t// Build the bit length tree:\n\t\tbl_desc.build_tree(that);\n\t\t// opt_len now includes the length of the tree representations, except\n\t\t// the lengths of the bit lengths codes and the 5+5+4 bits for the\n\t\t// counts.\n\n\t\t// Determine the number of bit length codes to send. The pkzip format\n\t\t// requires that at least 4 bit length codes be sent. (appnote.txt says\n\t\t// 3 but the actual value used is 4.)\n\t\tfor (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n\t\t\tif (bl_tree[Tree.bl_order[max_blindex] * 2 + 1] !== 0)\n\t\t\t\tbreak;\n\t\t}\n\t\t// Update opt_len to include the bit length tree and counts\n\t\tthat.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n\n\t\treturn max_blindex;\n\t}\n\n\t// Output a byte on the stream.\n\t// IN assertion: there is enough room in pending_buf.\n\tfunction put_byte(p) {\n\t\tthat.pending_buf[that.pending++] = p;\n\t}\n\n\tfunction put_short(w) {\n\t\tput_byte(w & 0xff);\n\t\tput_byte((w >>> 8) & 0xff);\n\t}\n\n\tfunction putShortMSB(b) {\n\t\tput_byte((b >> 8) & 0xff);\n\t\tput_byte((b & 0xff) & 0xff);\n\t}\n\n\tfunction send_bits(value, length) {\n\t\tlet val;\n\t\tconst len = length;\n\t\tif (bi_valid > Buf_size - len) {\n\t\t\tval = value;\n\t\t\t// bi_buf |= (val << bi_valid);\n\t\t\tbi_buf |= ((val << bi_valid) & 0xffff);\n\t\t\tput_short(bi_buf);\n\t\t\tbi_buf = val >>> (Buf_size - bi_valid);\n\t\t\tbi_valid += len - Buf_size;\n\t\t} else {\n\t\t\t// bi_buf |= (value) << bi_valid;\n\t\t\tbi_buf |= (((value) << bi_valid) & 0xffff);\n\t\t\tbi_valid += len;\n\t\t}\n\t}\n\n\tfunction send_code(c, tree) {\n\t\tconst c2 = c * 2;\n\t\tsend_bits(tree[c2] & 0xffff, tree[c2 + 1] & 0xffff);\n\t}\n\n\t// Send a literal or distance tree in compressed form, using the codes in\n\t// bl_tree.\n\tfunction send_tree(tree,// the tree to be sent\n\t\tmax_code // and its largest code of non zero frequency\n\t) {\n\t\tlet n; // iterates over all tree elements\n\t\tlet prevlen = -1; // last emitted length\n\t\tlet curlen; // length of current code\n\t\tlet nextlen = tree[0 * 2 + 1]; // length of next code\n\t\tlet count = 0; // repeat count of the current code\n\t\tlet max_count = 7; // max repeat count\n\t\tlet min_count = 4; // min repeat count\n\n\t\tif (nextlen === 0) {\n\t\t\tmax_count = 138;\n\t\t\tmin_count = 3;\n\t\t}\n\n\t\tfor (n = 0; n <= max_code; n++) {\n\t\t\tcurlen = nextlen;\n\t\t\tnextlen = tree[(n + 1) * 2 + 1];\n\t\t\tif (++count < max_count && curlen == nextlen) {\n\t\t\t\tcontinue;\n\t\t\t} else if (count < min_count) {\n\t\t\t\tdo {\n\t\t\t\t\tsend_code(curlen, bl_tree);\n\t\t\t\t} while (--count !== 0);\n\t\t\t} else if (curlen !== 0) {\n\t\t\t\tif (curlen != prevlen) {\n\t\t\t\t\tsend_code(curlen, bl_tree);\n\t\t\t\t\tcount--;\n\t\t\t\t}\n\t\t\t\tsend_code(REP_3_6, bl_tree);\n\t\t\t\tsend_bits(count - 3, 2);\n\t\t\t} else if (count <= 10) {\n\t\t\t\tsend_code(REPZ_3_10, bl_tree);\n\t\t\t\tsend_bits(count - 3, 3);\n\t\t\t} else {\n\t\t\t\tsend_code(REPZ_11_138, bl_tree);\n\t\t\t\tsend_bits(count - 11, 7);\n\t\t\t}\n\t\t\tcount = 0;\n\t\t\tprevlen = curlen;\n\t\t\tif (nextlen === 0) {\n\t\t\t\tmax_count = 138;\n\t\t\t\tmin_count = 3;\n\t\t\t} else if (curlen == nextlen) {\n\t\t\t\tmax_count = 6;\n\t\t\t\tmin_count = 3;\n\t\t\t} else {\n\t\t\t\tmax_count = 7;\n\t\t\t\tmin_count = 4;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Send the header for a block using dynamic Huffman trees: the counts, the\n\t// lengths of the bit length codes, the literal tree and the distance tree.\n\t// IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n\tfunction send_all_trees(lcodes, dcodes, blcodes) {\n\t\tlet rank; // index in bl_order\n\n\t\tsend_bits(lcodes - 257, 5); // not +255 as stated in appnote.txt\n\t\tsend_bits(dcodes - 1, 5);\n\t\tsend_bits(blcodes - 4, 4); // not -3 as stated in appnote.txt\n\t\tfor (rank = 0; rank < blcodes; rank++) {\n\t\t\tsend_bits(bl_tree[Tree.bl_order[rank] * 2 + 1], 3);\n\t\t}\n\t\tsend_tree(dyn_ltree, lcodes - 1); // literal tree\n\t\tsend_tree(dyn_dtree, dcodes - 1); // distance tree\n\t}\n\n\t// Flush the bit buffer, keeping at most 7 bits in it.\n\tfunction bi_flush() {\n\t\tif (bi_valid == 16) {\n\t\t\tput_short(bi_buf);\n\t\t\tbi_buf = 0;\n\t\t\tbi_valid = 0;\n\t\t} else if (bi_valid >= 8) {\n\t\t\tput_byte(bi_buf & 0xff);\n\t\t\tbi_buf >>>= 8;\n\t\t\tbi_valid -= 8;\n\t\t}\n\t}\n\n\t// Send one empty static block to give enough lookahead for inflate.\n\t// This takes 10 bits, of which 7 may remain in the bit buffer.\n\t// The current inflate code requires 9 bits of lookahead. If the\n\t// last two codes for the previous block (real code plus EOB) were coded\n\t// on 5 bits or less, inflate may have only 5+3 bits of lookahead to decode\n\t// the last real code. In this case we send two empty static blocks instead\n\t// of one. (There are no problems if the previous block is stored or fixed.)\n\t// To simplify the code, we assume the worst case of last real code encoded\n\t// on one bit only.\n\tfunction _tr_align() {\n\t\tsend_bits(STATIC_TREES << 1, 3);\n\t\tsend_code(END_BLOCK, StaticTree.static_ltree);\n\n\t\tbi_flush();\n\n\t\t// Of the 10 bits for the empty block, we have already sent\n\t\t// (10 - bi_valid) bits. The lookahead for the last real code (before\n\t\t// the EOB of the previous block) was thus at least one plus the length\n\t\t// of the EOB plus what we have just sent of the empty static block.\n\t\tif (1 + last_eob_len + 10 - bi_valid < 9) {\n\t\t\tsend_bits(STATIC_TREES << 1, 3);\n\t\t\tsend_code(END_BLOCK, StaticTree.static_ltree);\n\t\t\tbi_flush();\n\t\t}\n\t\tlast_eob_len = 7;\n\t}\n\n\t// Save the match info and tally the frequency counts. Return true if\n\t// the current block must be flushed.\n\tfunction _tr_tally(dist, // distance of matched string\n\t\tlc // match length-MIN_MATCH or unmatched char (if dist==0)\n\t) {\n\t\tlet out_length, in_length, dcode;\n\t\tthat.dist_buf[last_lit] = dist;\n\t\tthat.lc_buf[last_lit] = lc & 0xff;\n\t\tlast_lit++;\n\n\t\tif (dist === 0) {\n\t\t\t// lc is the unmatched char\n\t\t\tdyn_ltree[lc * 2]++;\n\t\t} else {\n\t\t\tmatches++;\n\t\t\t// Here, lc is the match length - MIN_MATCH\n\t\t\tdist--; // dist = match distance - 1\n\t\t\tdyn_ltree[(Tree._length_code[lc] + LITERALS + 1) * 2]++;\n\t\t\tdyn_dtree[Tree.d_code(dist) * 2]++;\n\t\t}\n\n\t\tif ((last_lit & 0x1fff) === 0 && level > 2) {\n\t\t\t// Compute an upper bound for the compressed length\n\t\t\tout_length = last_lit * 8;\n\t\t\tin_length = strstart - block_start;\n\t\t\tfor (dcode = 0; dcode < D_CODES; dcode++) {\n\t\t\t\tout_length += dyn_dtree[dcode * 2] * (5 + Tree.extra_dbits[dcode]);\n\t\t\t}\n\t\t\tout_length >>>= 3;\n\t\t\tif ((matches < Math.floor(last_lit / 2)) && out_length < Math.floor(in_length / 2))\n\t\t\t\treturn true;\n\t\t}\n\n\t\treturn (last_lit == lit_bufsize - 1);\n\t\t// We avoid equality with lit_bufsize because of wraparound at 64K\n\t\t// on 16 bit machines and because stored blocks are restricted to\n\t\t// 64K-1 bytes.\n\t}\n\n\t// Send the block data compressed using the given Huffman trees\n\tfunction compress_block(ltree, dtree) {\n\t\tlet dist; // distance of matched string\n\t\tlet lc; // match length or unmatched char (if dist === 0)\n\t\tlet lx = 0; // running index in dist_buf and lc_buf\n\t\tlet code; // the code to send\n\t\tlet extra; // number of extra bits to send\n\n\t\tif (last_lit !== 0) {\n\t\t\tdo {\n\t\t\t\tdist = that.dist_buf[lx];\n\t\t\t\tlc = that.lc_buf[lx];\n\t\t\t\tlx++;\n\n\t\t\t\tif (dist === 0) {\n\t\t\t\t\tsend_code(lc, ltree); // send a literal byte\n\t\t\t\t} else {\n\t\t\t\t\t// Here, lc is the match length - MIN_MATCH\n\t\t\t\t\tcode = Tree._length_code[lc];\n\n\t\t\t\t\tsend_code(code + LITERALS + 1, ltree); // send the length\n\t\t\t\t\t// code\n\t\t\t\t\textra = Tree.extra_lbits[code];\n\t\t\t\t\tif (extra !== 0) {\n\t\t\t\t\t\tlc -= Tree.base_length[code];\n\t\t\t\t\t\tsend_bits(lc, extra); // send the extra length bits\n\t\t\t\t\t}\n\t\t\t\t\tdist--; // dist is now the match distance - 1\n\t\t\t\t\tcode = Tree.d_code(dist);\n\n\t\t\t\t\tsend_code(code, dtree); // send the distance code\n\t\t\t\t\textra = Tree.extra_dbits[code];\n\t\t\t\t\tif (extra !== 0) {\n\t\t\t\t\t\tdist -= Tree.base_dist[code];\n\t\t\t\t\t\tsend_bits(dist, extra); // send the extra distance bits\n\t\t\t\t\t}\n\t\t\t\t} // literal or match pair ?\n\t\t\t} while (lx < last_lit);\n\t\t}\n\n\t\tsend_code(END_BLOCK, ltree);\n\t\tlast_eob_len = ltree[END_BLOCK * 2 + 1];\n\t}\n\n\t// Flush the bit buffer and align the output on a byte boundary\n\tfunction bi_windup() {\n\t\tif (bi_valid > 8) {\n\t\t\tput_short(bi_buf);\n\t\t} else if (bi_valid > 0) {\n\t\t\tput_byte(bi_buf & 0xff);\n\t\t}\n\t\tbi_buf = 0;\n\t\tbi_valid = 0;\n\t}\n\n\t// Copy a stored block, storing first the length and its\n\t// one's complement if requested.\n\tfunction copy_block(buf, // the input data\n\t\tlen, // its length\n\t\theader // true if block header must be written\n\t) {\n\t\tbi_windup(); // align on byte boundary\n\t\tlast_eob_len = 8; // enough lookahead for inflate\n\n\t\tif (header) {\n\t\t\tput_short(len);\n\t\t\tput_short(~len);\n\t\t}\n\n\t\tthat.pending_buf.set(win.subarray(buf, buf + len), that.pending);\n\t\tthat.pending += len;\n\t}\n\n\t// Send a stored block\n\tfunction _tr_stored_block(buf, // input block\n\t\tstored_len, // length of input block\n\t\teof // true if this is the last block for a file\n\t) {\n\t\tsend_bits((STORED_BLOCK << 1) + (eof ? 1 : 0), 3); // send block type\n\t\tcopy_block(buf, stored_len, true); // with header\n\t}\n\n\t// Determine the best encoding for the current block: dynamic trees, static\n\t// trees or store, and output the encoded block to the zip file.\n\tfunction _tr_flush_block(buf, // input block, or NULL if too old\n\t\tstored_len, // length of input block\n\t\teof // true if this is the last block for a file\n\t) {\n\t\tlet opt_lenb, static_lenb;// opt_len and static_len in bytes\n\t\tlet max_blindex = 0; // index of last bit length code of non zero freq\n\n\t\t// Build the Huffman trees unless a stored block is forced\n\t\tif (level > 0) {\n\t\t\t// Construct the literal and distance trees\n\t\t\tl_desc.build_tree(that);\n\n\t\t\td_desc.build_tree(that);\n\n\t\t\t// At this point, opt_len and static_len are the total bit lengths\n\t\t\t// of\n\t\t\t// the compressed block data, excluding the tree representations.\n\n\t\t\t// Build the bit length tree for the above two trees, and get the\n\t\t\t// index\n\t\t\t// in bl_order of the last bit length code to send.\n\t\t\tmax_blindex = build_bl_tree();\n\n\t\t\t// Determine the best encoding. Compute first the block length in\n\t\t\t// bytes\n\t\t\topt_lenb = (that.opt_len + 3 + 7) >>> 3;\n\t\t\tstatic_lenb = (that.static_len + 3 + 7) >>> 3;\n\n\t\t\tif (static_lenb <= opt_lenb)\n\t\t\t\topt_lenb = static_lenb;\n\t\t} else {\n\t\t\topt_lenb = static_lenb = stored_len + 5; // force a stored block\n\t\t}\n\n\t\tif ((stored_len + 4 <= opt_lenb) && buf != -1) {\n\t\t\t// 4: two words for the lengths\n\t\t\t// The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n\t\t\t// Otherwise we can't have processed more than WSIZE input bytes\n\t\t\t// since\n\t\t\t// the last block flush, because compression would have been\n\t\t\t// successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n\t\t\t// transform a block into a stored block.\n\t\t\t_tr_stored_block(buf, stored_len, eof);\n\t\t} else if (static_lenb == opt_lenb) {\n\t\t\tsend_bits((STATIC_TREES << 1) + (eof ? 1 : 0), 3);\n\t\t\tcompress_block(StaticTree.static_ltree, StaticTree.static_dtree);\n\t\t} else {\n\t\t\tsend_bits((DYN_TREES << 1) + (eof ? 1 : 0), 3);\n\t\t\tsend_all_trees(l_desc.max_code + 1, d_desc.max_code + 1, max_blindex + 1);\n\t\t\tcompress_block(dyn_ltree, dyn_dtree);\n\t\t}\n\n\t\t// The above check is made mod 2^32, for files larger than 512 MB\n\t\t// and uLong implemented on 32 bits.\n\n\t\tinit_block();\n\n\t\tif (eof) {\n\t\t\tbi_windup();\n\t\t}\n\t}\n\n\tfunction flush_block_only(eof) {\n\t\t_tr_flush_block(block_start >= 0 ? block_start : -1, strstart - block_start, eof);\n\t\tblock_start = strstart;\n\t\tstrm.flush_pending();\n\t}\n\n\t// Fill the win when the lookahead becomes insufficient.\n\t// Updates strstart and lookahead.\n\t//\n\t// IN assertion: lookahead < MIN_LOOKAHEAD\n\t// OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n\t// At least one byte has been read, or avail_in === 0; reads are\n\t// performed for at least two bytes (required for the zip translate_eol\n\t// option -- not supported here).\n\tfunction fill_window() {\n\t\tlet n, m;\n\t\tlet p;\n\t\tlet more; // Amount of free space at the end of the win.\n\n\t\tdo {\n\t\t\tmore = (window_size - lookahead - strstart);\n\n\t\t\t// Deal with !@#$% 64K limit:\n\t\t\tif (more === 0 && strstart === 0 && lookahead === 0) {\n\t\t\t\tmore = w_size;\n\t\t\t} else if (more == -1) {\n\t\t\t\t// Very unlikely, but possible on 16 bit machine if strstart ==\n\t\t\t\t// 0\n\t\t\t\t// and lookahead == 1 (input done one byte at time)\n\t\t\t\tmore--;\n\n\t\t\t\t// If the win is almost full and there is insufficient\n\t\t\t\t// lookahead,\n\t\t\t\t// move the upper half to the lower one to make room in the\n\t\t\t\t// upper half.\n\t\t\t} else if (strstart >= w_size + w_size - MIN_LOOKAHEAD) {\n\t\t\t\twin.set(win.subarray(w_size, w_size + w_size), 0);\n\n\t\t\t\tmatch_start -= w_size;\n\t\t\t\tstrstart -= w_size; // we now have strstart >= MAX_DIST\n\t\t\t\tblock_start -= w_size;\n\n\t\t\t\t// Slide the hash table (could be avoided with 32 bit values\n\t\t\t\t// at the expense of memory usage). We slide even when level ==\n\t\t\t\t// 0\n\t\t\t\t// to keep the hash table consistent if we switch back to level\n\t\t\t\t// > 0\n\t\t\t\t// later. (Using level 0 permanently is not an optimal usage of\n\t\t\t\t// zlib, so we don't care about this pathological case.)\n\n\t\t\t\tn = hash_size;\n\t\t\t\tp = n;\n\t\t\t\tdo {\n\t\t\t\t\tm = (head[--p] & 0xffff);\n\t\t\t\t\thead[p] = (m >= w_size ? m - w_size : 0);\n\t\t\t\t} while (--n !== 0);\n\n\t\t\t\tn = w_size;\n\t\t\t\tp = n;\n\t\t\t\tdo {\n\t\t\t\t\tm = (prev[--p] & 0xffff);\n\t\t\t\t\tprev[p] = (m >= w_size ? m - w_size : 0);\n\t\t\t\t\t// If n is not on any hash chain, prev[n] is garbage but\n\t\t\t\t\t// its value will never be used.\n\t\t\t\t} while (--n !== 0);\n\t\t\t\tmore += w_size;\n\t\t\t}\n\n\t\t\tif (strm.avail_in === 0)\n\t\t\t\treturn;\n\n\t\t\t// If there was no sliding:\n\t\t\t// strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n\t\t\t// more == window_size - lookahead - strstart\n\t\t\t// => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n\t\t\t// => more >= window_size - 2*WSIZE + 2\n\t\t\t// In the BIG_MEM or MMAP case (not yet supported),\n\t\t\t// window_size == input_size + MIN_LOOKAHEAD &&\n\t\t\t// strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n\t\t\t// Otherwise, window_size == 2*WSIZE so more >= 2.\n\t\t\t// If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n\n\t\t\tn = strm.read_buf(win, strstart + lookahead, more);\n\t\t\tlookahead += n;\n\n\t\t\t// Initialize the hash value now that we have some input:\n\t\t\tif (lookahead >= MIN_MATCH) {\n\t\t\t\tins_h = win[strstart] & 0xff;\n\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[strstart + 1] & 0xff)) & hash_mask;\n\t\t\t}\n\t\t\t// If the whole input has less than MIN_MATCH bytes, ins_h is\n\t\t\t// garbage,\n\t\t\t// but this is not important since only literal bytes will be\n\t\t\t// emitted.\n\t\t} while (lookahead < MIN_LOOKAHEAD && strm.avail_in !== 0);\n\t}\n\n\t// Copy without compression as much as possible from the input stream,\n\t// return\n\t// the current block state.\n\t// This function does not insert new strings in the dictionary since\n\t// uncompressible data is probably not useful. This function is used\n\t// only for the level=0 compression option.\n\t// NOTE: this function should be optimized to avoid extra copying from\n\t// win to pending_buf.\n\tfunction deflate_stored(flush) {\n\t\t// Stored blocks are limited to 0xffff bytes, pending_buf is limited\n\t\t// to pending_buf_size, and each stored block has a 5 byte header:\n\n\t\tlet max_block_size = 0xffff;\n\t\tlet max_start;\n\n\t\tif (max_block_size > pending_buf_size - 5) {\n\t\t\tmax_block_size = pending_buf_size - 5;\n\t\t}\n\n\t\t// Copy as much as possible from input to output:\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\t// Fill the win as much as possible:\n\t\t\tif (lookahead <= 1) {\n\t\t\t\tfill_window();\n\t\t\t\tif (lookahead === 0 && flush == Z_NO_FLUSH)\n\t\t\t\t\treturn NeedMore;\n\t\t\t\tif (lookahead === 0)\n\t\t\t\t\tbreak; // flush the current block\n\t\t\t}\n\n\t\t\tstrstart += lookahead;\n\t\t\tlookahead = 0;\n\n\t\t\t// Emit a stored block if pending_buf will be full:\n\t\t\tmax_start = block_start + max_block_size;\n\t\t\tif (strstart === 0 || strstart >= max_start) {\n\t\t\t\t// strstart === 0 is possible when wraparound on 16-bit machine\n\t\t\t\tlookahead = (strstart - max_start);\n\t\t\t\tstrstart = max_start;\n\n\t\t\t\tflush_block_only(false);\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\n\t\t\t}\n\n\t\t\t// Flush if we may have to slide, otherwise block_start may become\n\t\t\t// negative and the data will be gone:\n\t\t\tif (strstart - block_start >= w_size - MIN_LOOKAHEAD) {\n\t\t\t\tflush_block_only(false);\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\t\t\t}\n\t\t}\n\n\t\tflush_block_only(flush == Z_FINISH);\n\t\tif (strm.avail_out === 0)\n\t\t\treturn (flush == Z_FINISH) ? FinishStarted : NeedMore;\n\n\t\treturn flush == Z_FINISH ? FinishDone : BlockDone;\n\t}\n\n\tfunction longest_match(cur_match) {\n\t\tlet chain_length = max_chain_length; // max hash chain length\n\t\tlet scan = strstart; // current string\n\t\tlet match; // matched string\n\t\tlet len; // length of current match\n\t\tlet best_len = prev_length; // best match length so far\n\t\tconst limit = strstart > (w_size - MIN_LOOKAHEAD) ? strstart - (w_size - MIN_LOOKAHEAD) : 0;\n\t\tlet _nice_match = nice_match;\n\n\t\t// Stop when cur_match becomes <= limit. To simplify the code,\n\t\t// we prevent matches with the string of win index 0.\n\n\t\tconst wmask = w_mask;\n\n\t\tconst strend = strstart + MAX_MATCH;\n\t\tlet scan_end1 = win[scan + best_len - 1];\n\t\tlet scan_end = win[scan + best_len];\n\n\t\t// The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of\n\t\t// 16.\n\t\t// It is easy to get rid of this optimization if necessary.\n\n\t\t// Do not waste too much time if we already have a good match:\n\t\tif (prev_length >= good_match) {\n\t\t\tchain_length >>= 2;\n\t\t}\n\n\t\t// Do not look for matches beyond the end of the input. This is\n\t\t// necessary\n\t\t// to make deflate deterministic.\n\t\tif (_nice_match > lookahead)\n\t\t\t_nice_match = lookahead;\n\n\t\tdo {\n\t\t\tmatch = cur_match;\n\n\t\t\t// Skip to next match if the match length cannot increase\n\t\t\t// or if the match length is less than 2:\n\t\t\tif (win[match + best_len] != scan_end || win[match + best_len - 1] != scan_end1 || win[match] != win[scan]\n\t\t\t\t|| win[++match] != win[scan + 1])\n\t\t\t\tcontinue;\n\n\t\t\t// The check at best_len-1 can be removed because it will be made\n\t\t\t// again later. (This heuristic is not always a win.)\n\t\t\t// It is not necessary to compare scan[2] and match[2] since they\n\t\t\t// are always equal when the other bytes match, given that\n\t\t\t// the hash keys are equal and that HASH_BITS >= 8.\n\t\t\tscan += 2;\n\t\t\tmatch++;\n\n\t\t\t// We check for insufficient lookahead only every 8th comparison;\n\t\t\t// the 256th check will be made at strstart+258.\n\t\t\t// eslint-disable-next-line no-empty\n\t\t\tdo {\n\t\t\t\t// empty block\n\t\t\t} while (win[++scan] == win[++match] && win[++scan] == win[++match] && win[++scan] == win[++match]\n\t\t\t&& win[++scan] == win[++match] && win[++scan] == win[++match] && win[++scan] == win[++match]\n\t\t\t&& win[++scan] == win[++match] && win[++scan] == win[++match] && scan < strend);\n\n\t\t\tlen = MAX_MATCH - (strend - scan);\n\t\t\tscan = strend - MAX_MATCH;\n\n\t\t\tif (len > best_len) {\n\t\t\t\tmatch_start = cur_match;\n\t\t\t\tbest_len = len;\n\t\t\t\tif (len >= _nice_match)\n\t\t\t\t\tbreak;\n\t\t\t\tscan_end1 = win[scan + best_len - 1];\n\t\t\t\tscan_end = win[scan + best_len];\n\t\t\t}\n\n\t\t} while ((cur_match = (prev[cur_match & wmask] & 0xffff)) > limit && --chain_length !== 0);\n\n\t\tif (best_len <= lookahead)\n\t\t\treturn best_len;\n\t\treturn lookahead;\n\t}\n\n\t// Compress as much as possible from the input stream, return the current\n\t// block state.\n\t// This function does not perform lazy evaluation of matches and inserts\n\t// new strings in the dictionary only for unmatched strings or for short\n\t// matches. It is used only for the fast compression options.\n\tfunction deflate_fast(flush) {\n\t\t// short hash_head = 0; // head of the hash chain\n\t\tlet hash_head = 0; // head of the hash chain\n\t\tlet bflush; // set if current block must be flushed\n\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\t// Make sure that we always have enough lookahead, except\n\t\t\t// at the end of the input file. We need MAX_MATCH bytes\n\t\t\t// for the next match, plus MIN_MATCH bytes to insert the\n\t\t\t// string following the next match.\n\t\t\tif (lookahead < MIN_LOOKAHEAD) {\n\t\t\t\tfill_window();\n\t\t\t\tif (lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {\n\t\t\t\t\treturn NeedMore;\n\t\t\t\t}\n\t\t\t\tif (lookahead === 0)\n\t\t\t\t\tbreak; // flush the current block\n\t\t\t}\n\n\t\t\t// Insert the string win[strstart .. strstart+2] in the\n\t\t\t// dictionary, and set hash_head to the head of the hash chain:\n\t\t\tif (lookahead >= MIN_MATCH) {\n\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\n\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\thead[ins_h] = strstart;\n\t\t\t}\n\n\t\t\t// Find the longest match, discarding those <= prev_length.\n\t\t\t// At this point we have always match_length < MIN_MATCH\n\n\t\t\tif (hash_head !== 0 && ((strstart - hash_head) & 0xffff) <= w_size - MIN_LOOKAHEAD) {\n\t\t\t\t// To simplify the code, we prevent matches with the string\n\t\t\t\t// of win index 0 (in particular we have to avoid a match\n\t\t\t\t// of the string with itself at the start of the input file).\n\t\t\t\tif (strategy != Z_HUFFMAN_ONLY) {\n\t\t\t\t\tmatch_length = longest_match(hash_head);\n\t\t\t\t}\n\t\t\t\t// longest_match() sets match_start\n\t\t\t}\n\t\t\tif (match_length >= MIN_MATCH) {\n\t\t\t\t// check_match(strstart, match_start, match_length);\n\n\t\t\t\tbflush = _tr_tally(strstart - match_start, match_length - MIN_MATCH);\n\n\t\t\t\tlookahead -= match_length;\n\n\t\t\t\t// Insert new strings in the hash table only if the match length\n\t\t\t\t// is not too large. This saves time but degrades compression.\n\t\t\t\tif (match_length <= max_lazy_match && lookahead >= MIN_MATCH) {\n\t\t\t\t\tmatch_length--; // string at strstart already in hash table\n\t\t\t\t\tdo {\n\t\t\t\t\t\tstrstart++;\n\n\t\t\t\t\t\tins_h = ((ins_h << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\t\t\thead[ins_h] = strstart;\n\n\t\t\t\t\t\t// strstart never exceeds WSIZE-MAX_MATCH, so there are\n\t\t\t\t\t\t// always MIN_MATCH bytes ahead.\n\t\t\t\t\t} while (--match_length !== 0);\n\t\t\t\t\tstrstart++;\n\t\t\t\t} else {\n\t\t\t\t\tstrstart += match_length;\n\t\t\t\t\tmatch_length = 0;\n\t\t\t\t\tins_h = win[strstart] & 0xff;\n\n\t\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[strstart + 1] & 0xff)) & hash_mask;\n\t\t\t\t\t// If lookahead < MIN_MATCH, ins_h is garbage, but it does\n\t\t\t\t\t// not\n\t\t\t\t\t// matter since it will be recomputed at next deflate call.\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// No match, output a literal byte\n\n\t\t\t\tbflush = _tr_tally(0, win[strstart] & 0xff);\n\t\t\t\tlookahead--;\n\t\t\t\tstrstart++;\n\t\t\t}\n\t\t\tif (bflush) {\n\n\t\t\t\tflush_block_only(false);\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\t\t\t}\n\t\t}\n\n\t\tflush_block_only(flush == Z_FINISH);\n\t\tif (strm.avail_out === 0) {\n\t\t\tif (flush == Z_FINISH)\n\t\t\t\treturn FinishStarted;\n\t\t\telse\n\t\t\t\treturn NeedMore;\n\t\t}\n\t\treturn flush == Z_FINISH ? FinishDone : BlockDone;\n\t}\n\n\t// Same as above, but achieves better compression. We use a lazy\n\t// evaluation for matches: a match is finally adopted only if there is\n\t// no better match at the next win position.\n\tfunction deflate_slow(flush) {\n\t\t// short hash_head = 0; // head of hash chain\n\t\tlet hash_head = 0; // head of hash chain\n\t\tlet bflush; // set if current block must be flushed\n\t\tlet max_insert;\n\n\t\t// Process the input block.\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\t// Make sure that we always have enough lookahead, except\n\t\t\t// at the end of the input file. We need MAX_MATCH bytes\n\t\t\t// for the next match, plus MIN_MATCH bytes to insert the\n\t\t\t// string following the next match.\n\n\t\t\tif (lookahead < MIN_LOOKAHEAD) {\n\t\t\t\tfill_window();\n\t\t\t\tif (lookahead < MIN_LOOKAHEAD && flush == Z_NO_FLUSH) {\n\t\t\t\t\treturn NeedMore;\n\t\t\t\t}\n\t\t\t\tif (lookahead === 0)\n\t\t\t\t\tbreak; // flush the current block\n\t\t\t}\n\n\t\t\t// Insert the string win[strstart .. strstart+2] in the\n\t\t\t// dictionary, and set hash_head to the head of the hash chain:\n\n\t\t\tif (lookahead >= MIN_MATCH) {\n\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\thead[ins_h] = strstart;\n\t\t\t}\n\n\t\t\t// Find the longest match, discarding those <= prev_length.\n\t\t\tprev_length = match_length;\n\t\t\tprev_match = match_start;\n\t\t\tmatch_length = MIN_MATCH - 1;\n\n\t\t\tif (hash_head !== 0 && prev_length < max_lazy_match && ((strstart - hash_head) & 0xffff) <= w_size - MIN_LOOKAHEAD) {\n\t\t\t\t// To simplify the code, we prevent matches with the string\n\t\t\t\t// of win index 0 (in particular we have to avoid a match\n\t\t\t\t// of the string with itself at the start of the input file).\n\n\t\t\t\tif (strategy != Z_HUFFMAN_ONLY) {\n\t\t\t\t\tmatch_length = longest_match(hash_head);\n\t\t\t\t}\n\t\t\t\t// longest_match() sets match_start\n\n\t\t\t\tif (match_length <= 5 && (strategy == Z_FILTERED || (match_length == MIN_MATCH && strstart - match_start > 4096))) {\n\n\t\t\t\t\t// If prev_match is also MIN_MATCH, match_start is garbage\n\t\t\t\t\t// but we will ignore the current match anyway.\n\t\t\t\t\tmatch_length = MIN_MATCH - 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If there was a match at the previous step and the current\n\t\t\t// match is not better, output the previous match:\n\t\t\tif (prev_length >= MIN_MATCH && match_length <= prev_length) {\n\t\t\t\tmax_insert = strstart + lookahead - MIN_MATCH;\n\t\t\t\t// Do not insert strings in hash table beyond this.\n\n\t\t\t\t// check_match(strstart-1, prev_match, prev_length);\n\n\t\t\t\tbflush = _tr_tally(strstart - 1 - prev_match, prev_length - MIN_MATCH);\n\n\t\t\t\t// Insert in hash table all strings up to the end of the match.\n\t\t\t\t// strstart-1 and strstart are already inserted. If there is not\n\t\t\t\t// enough lookahead, the last two strings are not inserted in\n\t\t\t\t// the hash table.\n\t\t\t\tlookahead -= prev_length - 1;\n\t\t\t\tprev_length -= 2;\n\t\t\t\tdo {\n\t\t\t\t\tif (++strstart <= max_insert) {\n\t\t\t\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(strstart) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\t\t\t\t// prev[strstart&w_mask]=hash_head=head[ins_h];\n\t\t\t\t\t\thash_head = (head[ins_h] & 0xffff);\n\t\t\t\t\t\tprev[strstart & w_mask] = head[ins_h];\n\t\t\t\t\t\thead[ins_h] = strstart;\n\t\t\t\t\t}\n\t\t\t\t} while (--prev_length !== 0);\n\t\t\t\tmatch_available = 0;\n\t\t\t\tmatch_length = MIN_MATCH - 1;\n\t\t\t\tstrstart++;\n\n\t\t\t\tif (bflush) {\n\t\t\t\t\tflush_block_only(false);\n\t\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\t\treturn NeedMore;\n\t\t\t\t}\n\t\t\t} else if (match_available !== 0) {\n\n\t\t\t\t// If there was no match at the previous position, output a\n\t\t\t\t// single literal. If there was a match but the current match\n\t\t\t\t// is longer, truncate the previous match to a single literal.\n\n\t\t\t\tbflush = _tr_tally(0, win[strstart - 1] & 0xff);\n\n\t\t\t\tif (bflush) {\n\t\t\t\t\tflush_block_only(false);\n\t\t\t\t}\n\t\t\t\tstrstart++;\n\t\t\t\tlookahead--;\n\t\t\t\tif (strm.avail_out === 0)\n\t\t\t\t\treturn NeedMore;\n\t\t\t} else {\n\t\t\t\t// There is no previous match to compare with, wait for\n\t\t\t\t// the next step to decide.\n\n\t\t\t\tmatch_available = 1;\n\t\t\t\tstrstart++;\n\t\t\t\tlookahead--;\n\t\t\t}\n\t\t}\n\n\t\tif (match_available !== 0) {\n\t\t\tbflush = _tr_tally(0, win[strstart - 1] & 0xff);\n\t\t\tmatch_available = 0;\n\t\t}\n\t\tflush_block_only(flush == Z_FINISH);\n\n\t\tif (strm.avail_out === 0) {\n\t\t\tif (flush == Z_FINISH)\n\t\t\t\treturn FinishStarted;\n\t\t\telse\n\t\t\t\treturn NeedMore;\n\t\t}\n\n\t\treturn flush == Z_FINISH ? FinishDone : BlockDone;\n\t}\n\n\tfunction deflateReset(strm) {\n\t\tstrm.total_in = strm.total_out = 0;\n\t\tstrm.msg = null; //\n\n\t\tthat.pending = 0;\n\t\tthat.pending_out = 0;\n\n\t\tstatus = BUSY_STATE;\n\n\t\tlast_flush = Z_NO_FLUSH;\n\n\t\ttr_init();\n\t\tlm_init();\n\t\treturn Z_OK;\n\t}\n\n\tthat.deflateInit = function (strm, _level, bits, _method, memLevel, _strategy) {\n\t\tif (!_method)\n\t\t\t_method = Z_DEFLATED;\n\t\tif (!memLevel)\n\t\t\tmemLevel = DEF_MEM_LEVEL;\n\t\tif (!_strategy)\n\t\t\t_strategy = Z_DEFAULT_STRATEGY;\n\n\t\t// byte[] my_version=ZLIB_VERSION;\n\n\t\t//\n\t\t// if (!version || version[0] != my_version[0]\n\t\t// || stream_size != sizeof(z_stream)) {\n\t\t// return Z_VERSION_ERROR;\n\t\t// }\n\n\t\tstrm.msg = null;\n\n\t\tif (_level == Z_DEFAULT_COMPRESSION)\n\t\t\t_level = 6;\n\n\t\tif (memLevel < 1 || memLevel > MAX_MEM_LEVEL || _method != Z_DEFLATED || bits < 9 || bits > 15 || _level < 0 || _level > 9 || _strategy < 0\n\t\t\t|| _strategy > Z_HUFFMAN_ONLY) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\n\t\tstrm.dstate = that;\n\n\t\tw_bits = bits;\n\t\tw_size = 1 << w_bits;\n\t\tw_mask = w_size - 1;\n\n\t\thash_bits = memLevel + 7;\n\t\thash_size = 1 << hash_bits;\n\t\thash_mask = hash_size - 1;\n\t\thash_shift = Math.floor((hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n\t\twin = new Uint8Array(w_size * 2);\n\t\tprev = [];\n\t\thead = [];\n\n\t\tlit_bufsize = 1 << (memLevel + 6); // 16K elements by default\n\n\t\tthat.pending_buf = new Uint8Array(lit_bufsize * 4);\n\t\tpending_buf_size = lit_bufsize * 4;\n\n\t\tthat.dist_buf = new Uint16Array(lit_bufsize);\n\t\tthat.lc_buf = new Uint8Array(lit_bufsize);\n\n\t\tlevel = _level;\n\n\t\tstrategy = _strategy;\n\n\t\treturn deflateReset(strm);\n\t};\n\n\tthat.deflateEnd = function () {\n\t\tif (status != INIT_STATE && status != BUSY_STATE && status != FINISH_STATE) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\t// Deallocate in reverse order of allocations:\n\t\tthat.lc_buf = null;\n\t\tthat.dist_buf = null;\n\t\tthat.pending_buf = null;\n\t\thead = null;\n\t\tprev = null;\n\t\twin = null;\n\t\t// free\n\t\tthat.dstate = null;\n\t\treturn status == BUSY_STATE ? Z_DATA_ERROR : Z_OK;\n\t};\n\n\tthat.deflateParams = function (strm, _level, _strategy) {\n\t\tlet err = Z_OK;\n\n\t\tif (_level == Z_DEFAULT_COMPRESSION) {\n\t\t\t_level = 6;\n\t\t}\n\t\tif (_level < 0 || _level > 9 || _strategy < 0 || _strategy > Z_HUFFMAN_ONLY) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\n\t\tif (config_table[level].func != config_table[_level].func && strm.total_in !== 0) {\n\t\t\t// Flush the last buffer:\n\t\t\terr = strm.deflate(Z_PARTIAL_FLUSH);\n\t\t}\n\n\t\tif (level != _level) {\n\t\t\tlevel = _level;\n\t\t\tmax_lazy_match = config_table[level].max_lazy;\n\t\t\tgood_match = config_table[level].good_length;\n\t\t\tnice_match = config_table[level].nice_length;\n\t\t\tmax_chain_length = config_table[level].max_chain;\n\t\t}\n\t\tstrategy = _strategy;\n\t\treturn err;\n\t};\n\n\tthat.deflateSetDictionary = function (_strm, dictionary, dictLength) {\n\t\tlet length = dictLength;\n\t\tlet n, index = 0;\n\n\t\tif (!dictionary || status != INIT_STATE)\n\t\t\treturn Z_STREAM_ERROR;\n\n\t\tif (length < MIN_MATCH)\n\t\t\treturn Z_OK;\n\t\tif (length > w_size - MIN_LOOKAHEAD) {\n\t\t\tlength = w_size - MIN_LOOKAHEAD;\n\t\t\tindex = dictLength - length; // use the tail of the dictionary\n\t\t}\n\t\twin.set(dictionary.subarray(index, index + length), 0);\n\n\t\tstrstart = length;\n\t\tblock_start = length;\n\n\t\t// Insert all strings in the hash table (except for the last two bytes).\n\t\t// s->lookahead stays null, so s->ins_h will be recomputed at the next\n\t\t// call of fill_window.\n\n\t\tins_h = win[0] & 0xff;\n\t\tins_h = (((ins_h) << hash_shift) ^ (win[1] & 0xff)) & hash_mask;\n\n\t\tfor (n = 0; n <= length - MIN_MATCH; n++) {\n\t\t\tins_h = (((ins_h) << hash_shift) ^ (win[(n) + (MIN_MATCH - 1)] & 0xff)) & hash_mask;\n\t\t\tprev[n & w_mask] = head[ins_h];\n\t\t\thead[ins_h] = n;\n\t\t}\n\t\treturn Z_OK;\n\t};\n\n\tthat.deflate = function (_strm, flush) {\n\t\tlet i, header, level_flags, old_flush, bstate;\n\n\t\tif (flush > Z_FINISH || flush < 0) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\n\t\tif (!_strm.next_out || (!_strm.next_in && _strm.avail_in !== 0) || (status == FINISH_STATE && flush != Z_FINISH)) {\n\t\t\t_strm.msg = z_errmsg[Z_NEED_DICT - (Z_STREAM_ERROR)];\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\tif (_strm.avail_out === 0) {\n\t\t\t_strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n\t\t\treturn Z_BUF_ERROR;\n\t\t}\n\n\t\tstrm = _strm; // just in case\n\t\told_flush = last_flush;\n\t\tlast_flush = flush;\n\n\t\t// Write the zlib header\n\t\tif (status == INIT_STATE) {\n\t\t\theader = (Z_DEFLATED + ((w_bits - 8) << 4)) << 8;\n\t\t\tlevel_flags = ((level - 1) & 0xff) >> 1;\n\n\t\t\tif (level_flags > 3)\n\t\t\t\tlevel_flags = 3;\n\t\t\theader |= (level_flags << 6);\n\t\t\tif (strstart !== 0)\n\t\t\t\theader |= PRESET_DICT;\n\t\t\theader += 31 - (header % 31);\n\n\t\t\tstatus = BUSY_STATE;\n\t\t\tputShortMSB(header);\n\t\t}\n\n\t\t// Flush as much pending output as possible\n\t\tif (that.pending !== 0) {\n\t\t\tstrm.flush_pending();\n\t\t\tif (strm.avail_out === 0) {\n\t\t\t\t// console.log(\" avail_out==0\");\n\t\t\t\t// Since avail_out is 0, deflate will be called again with\n\t\t\t\t// more output space, but possibly with both pending and\n\t\t\t\t// avail_in equal to zero. There won't be anything to do,\n\t\t\t\t// but this is not an error situation so make sure we\n\t\t\t\t// return OK instead of BUF_ERROR at next call of deflate:\n\t\t\t\tlast_flush = -1;\n\t\t\t\treturn Z_OK;\n\t\t\t}\n\n\t\t\t// Make sure there is something to do and avoid duplicate\n\t\t\t// consecutive\n\t\t\t// flushes. For repeated and useless calls with Z_FINISH, we keep\n\t\t\t// returning Z_STREAM_END instead of Z_BUFF_ERROR.\n\t\t} else if (strm.avail_in === 0 && flush <= old_flush && flush != Z_FINISH) {\n\t\t\tstrm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n\t\t\treturn Z_BUF_ERROR;\n\t\t}\n\n\t\t// User must not provide more input after the first FINISH:\n\t\tif (status == FINISH_STATE && strm.avail_in !== 0) {\n\t\t\t_strm.msg = z_errmsg[Z_NEED_DICT - (Z_BUF_ERROR)];\n\t\t\treturn Z_BUF_ERROR;\n\t\t}\n\n\t\t// Start a new block or continue the current one.\n\t\tif (strm.avail_in !== 0 || lookahead !== 0 || (flush != Z_NO_FLUSH && status != FINISH_STATE)) {\n\t\t\tbstate = -1;\n\t\t\tswitch (config_table[level].func) {\n\t\t\t\tcase STORED:\n\t\t\t\t\tbstate = deflate_stored(flush);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FAST:\n\t\t\t\t\tbstate = deflate_fast(flush);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLOW:\n\t\t\t\t\tbstate = deflate_slow(flush);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t}\n\n\t\t\tif (bstate == FinishStarted || bstate == FinishDone) {\n\t\t\t\tstatus = FINISH_STATE;\n\t\t\t}\n\t\t\tif (bstate == NeedMore || bstate == FinishStarted) {\n\t\t\t\tif (strm.avail_out === 0) {\n\t\t\t\t\tlast_flush = -1; // avoid BUF_ERROR next call, see above\n\t\t\t\t}\n\t\t\t\treturn Z_OK;\n\t\t\t\t// If flush != Z_NO_FLUSH && avail_out === 0, the next call\n\t\t\t\t// of deflate should use the same flush parameter to make sure\n\t\t\t\t// that the flush is complete. So we don't have to output an\n\t\t\t\t// empty block here, this will be done at next call. This also\n\t\t\t\t// ensures that for a very small output buffer, we emit at most\n\t\t\t\t// one empty block.\n\t\t\t}\n\n\t\t\tif (bstate == BlockDone) {\n\t\t\t\tif (flush == Z_PARTIAL_FLUSH) {\n\t\t\t\t\t_tr_align();\n\t\t\t\t} else { // FULL_FLUSH or SYNC_FLUSH\n\t\t\t\t\t_tr_stored_block(0, 0, false);\n\t\t\t\t\t// For a full flush, this empty block will be recognized\n\t\t\t\t\t// as a special marker by inflate_sync().\n\t\t\t\t\tif (flush == Z_FULL_FLUSH) {\n\t\t\t\t\t\t// state.head[s.hash_size-1]=0;\n\t\t\t\t\t\tfor (i = 0; i < hash_size/*-1*/; i++)\n\t\t\t\t\t\t\t// forget history\n\t\t\t\t\t\t\thead[i] = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstrm.flush_pending();\n\t\t\t\tif (strm.avail_out === 0) {\n\t\t\t\t\tlast_flush = -1; // avoid BUF_ERROR at next call, see above\n\t\t\t\t\treturn Z_OK;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (flush != Z_FINISH)\n\t\t\treturn Z_OK;\n\t\treturn Z_STREAM_END;\n\t};\n}\n\n// ZStream\n\nfunction ZStream() {\n\tconst that = this;\n\tthat.next_in_index = 0;\n\tthat.next_out_index = 0;\n\t// that.next_in; // next input byte\n\tthat.avail_in = 0; // number of bytes available at next_in\n\tthat.total_in = 0; // total nb of input bytes read so far\n\t// that.next_out; // next output byte should be put there\n\tthat.avail_out = 0; // remaining free space at next_out\n\tthat.total_out = 0; // total nb of bytes output so far\n\t// that.msg;\n\t// that.dstate;\n}\n\nZStream.prototype = {\n\tdeflateInit(level, bits) {\n\t\tconst that = this;\n\t\tthat.dstate = new Deflate();\n\t\tif (!bits)\n\t\t\tbits = MAX_BITS;\n\t\treturn that.dstate.deflateInit(that, level, bits);\n\t},\n\n\tdeflate(flush) {\n\t\tconst that = this;\n\t\tif (!that.dstate) {\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\treturn that.dstate.deflate(that, flush);\n\t},\n\n\tdeflateEnd() {\n\t\tconst that = this;\n\t\tif (!that.dstate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst ret = that.dstate.deflateEnd();\n\t\tthat.dstate = null;\n\t\treturn ret;\n\t},\n\n\tdeflateParams(level, strategy) {\n\t\tconst that = this;\n\t\tif (!that.dstate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.dstate.deflateParams(that, level, strategy);\n\t},\n\n\tdeflateSetDictionary(dictionary, dictLength) {\n\t\tconst that = this;\n\t\tif (!that.dstate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.dstate.deflateSetDictionary(that, dictionary, dictLength);\n\t},\n\n\t// Read a new buffer from the current input stream, update the\n\t// total number of bytes read. All deflate() input goes through\n\t// this function so some applications may wish to modify it to avoid\n\t// allocating a large strm->next_in buffer and copying from it.\n\t// (See also flush_pending()).\n\tread_buf(buf, start, size) {\n\t\tconst that = this;\n\t\tlet len = that.avail_in;\n\t\tif (len > size)\n\t\t\tlen = size;\n\t\tif (len === 0)\n\t\t\treturn 0;\n\t\tthat.avail_in -= len;\n\t\tbuf.set(that.next_in.subarray(that.next_in_index, that.next_in_index + len), start);\n\t\tthat.next_in_index += len;\n\t\tthat.total_in += len;\n\t\treturn len;\n\t},\n\n\t// Flush as much pending output as possible. All deflate() output goes\n\t// through this function so some applications may wish to modify it\n\t// to avoid allocating a large strm->next_out buffer and copying into it.\n\t// (See also read_buf()).\n\tflush_pending() {\n\t\tconst that = this;\n\t\tlet len = that.dstate.pending;\n\n\t\tif (len > that.avail_out)\n\t\t\tlen = that.avail_out;\n\t\tif (len === 0)\n\t\t\treturn;\n\n\t\t// if (that.dstate.pending_buf.length <= that.dstate.pending_out || that.next_out.length <= that.next_out_index\n\t\t// || that.dstate.pending_buf.length < (that.dstate.pending_out + len) || that.next_out.length < (that.next_out_index +\n\t\t// len)) {\n\t\t// console.log(that.dstate.pending_buf.length + \", \" + that.dstate.pending_out + \", \" + that.next_out.length + \", \" +\n\t\t// that.next_out_index + \", \" + len);\n\t\t// console.log(\"avail_out=\" + that.avail_out);\n\t\t// }\n\n\t\tthat.next_out.set(that.dstate.pending_buf.subarray(that.dstate.pending_out, that.dstate.pending_out + len), that.next_out_index);\n\n\t\tthat.next_out_index += len;\n\t\tthat.dstate.pending_out += len;\n\t\tthat.total_out += len;\n\t\tthat.avail_out -= len;\n\t\tthat.dstate.pending -= len;\n\t\tif (that.dstate.pending === 0) {\n\t\t\tthat.dstate.pending_out = 0;\n\t\t}\n\t}\n};\n\n// Deflate\n\nfunction ZipDeflate(options) {\n\tconst that = this;\n\tconst z = new ZStream();\n\tconst bufsize = getMaximumCompressedSize(options && options.chunkSize ? options.chunkSize : 64 * 1024);\n\tconst flush = Z_NO_FLUSH;\n\tconst buf = new Uint8Array(bufsize);\n\tlet level = options ? options.level : Z_DEFAULT_COMPRESSION;\n\tif (typeof level == \"undefined\")\n\t\tlevel = Z_DEFAULT_COMPRESSION;\n\tz.deflateInit(level);\n\tz.next_out = buf;\n\n\tthat.append = function (data, onprogress) {\n\t\tlet err, array, lastIndex = 0, bufferIndex = 0, bufferSize = 0;\n\t\tconst buffers = [];\n\t\tif (!data.length)\n\t\t\treturn;\n\t\tz.next_in_index = 0;\n\t\tz.next_in = data;\n\t\tz.avail_in = data.length;\n\t\tdo {\n\t\t\tz.next_out_index = 0;\n\t\t\tz.avail_out = bufsize;\n\t\t\terr = z.deflate(flush);\n\t\t\tif (err != Z_OK)\n\t\t\t\tthrow new Error(\"deflating: \" + z.msg);\n\t\t\tif (z.next_out_index)\n\t\t\t\tif (z.next_out_index == bufsize)\n\t\t\t\t\tbuffers.push(new Uint8Array(buf));\n\t\t\t\telse\n\t\t\t\t\tbuffers.push(buf.slice(0, z.next_out_index));\n\t\t\tbufferSize += z.next_out_index;\n\t\t\tif (onprogress && z.next_in_index > 0 && z.next_in_index != lastIndex) {\n\t\t\t\tonprogress(z.next_in_index);\n\t\t\t\tlastIndex = z.next_in_index;\n\t\t\t}\n\t\t} while (z.avail_in > 0 || z.avail_out === 0);\n\t\tif (buffers.length > 1) {\n\t\t\tarray = new Uint8Array(bufferSize);\n\t\t\tbuffers.forEach(function (chunk) {\n\t\t\t\tarray.set(chunk, bufferIndex);\n\t\t\t\tbufferIndex += chunk.length;\n\t\t\t});\n\t\t} else {\n\t\t\tarray = buffers[0] || new Uint8Array();\n\t\t}\n\t\treturn array;\n\t};\n\tthat.flush = function () {\n\t\tlet err, array, bufferIndex = 0, bufferSize = 0;\n\t\tconst buffers = [];\n\t\tdo {\n\t\t\tz.next_out_index = 0;\n\t\t\tz.avail_out = bufsize;\n\t\t\terr = z.deflate(Z_FINISH);\n\t\t\tif (err != Z_STREAM_END && err != Z_OK)\n\t\t\t\tthrow new Error(\"deflating: \" + z.msg);\n\t\t\tif (bufsize - z.avail_out > 0)\n\t\t\t\tbuffers.push(buf.slice(0, z.next_out_index));\n\t\t\tbufferSize += z.next_out_index;\n\t\t} while (z.avail_in > 0 || z.avail_out === 0);\n\t\tz.deflateEnd();\n\t\tarray = new Uint8Array(bufferSize);\n\t\tbuffers.forEach(function (chunk) {\n\t\t\tarray.set(chunk, bufferIndex);\n\t\t\tbufferIndex += chunk.length;\n\t\t});\n\t\treturn array;\n\t};\n}\n\nfunction getMaximumCompressedSize(uncompressedSize) {\n\treturn uncompressedSize + (5 * (Math.floor(uncompressedSize / 16383) + 1));\n}\n\nexport {\n\tZipDeflate as Deflate\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n// deno-lint-ignore-file no-this-alias prefer-const\n\n// Global\n\nconst MAX_BITS = 15;\n\nconst Z_OK = 0;\nconst Z_STREAM_END = 1;\nconst Z_NEED_DICT = 2;\nconst Z_STREAM_ERROR = -2;\nconst Z_DATA_ERROR = -3;\nconst Z_MEM_ERROR = -4;\nconst Z_BUF_ERROR = -5;\n\nconst inflate_mask = [0x00000000, 0x00000001, 0x00000003, 0x00000007, 0x0000000f, 0x0000001f, 0x0000003f, 0x0000007f, 0x000000ff, 0x000001ff, 0x000003ff,\n\t0x000007ff, 0x00000fff, 0x00001fff, 0x00003fff, 0x00007fff, 0x0000ffff];\n\nconst MANY = 1440;\n\n// JZlib version : \"1.0.2\"\nconst Z_NO_FLUSH = 0;\nconst Z_FINISH = 4;\n\n// InfTree\nconst fixed_bl = 9;\nconst fixed_bd = 5;\n\nconst fixed_tl = [96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9, 192, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 160, 0, 8, 0,\n\t0, 8, 128, 0, 8, 64, 0, 9, 224, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 144, 83, 7, 59, 0, 8, 120, 0, 8, 56, 0, 9, 208, 81, 7, 17, 0, 8, 104, 0, 8, 40,\n\t0, 9, 176, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 240, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8, 227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 200, 81, 7, 13,\n\t0, 8, 100, 0, 8, 36, 0, 9, 168, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 232, 80, 7, 8, 0, 8, 92, 0, 8, 28, 0, 9, 152, 84, 7, 83, 0, 8, 124, 0, 8, 60,\n\t0, 9, 216, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 184, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9, 248, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7,\n\t35, 0, 8, 114, 0, 8, 50, 0, 9, 196, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 164, 0, 8, 2, 0, 8, 130, 0, 8, 66, 0, 9, 228, 80, 7, 7, 0, 8, 90, 0, 8,\n\t26, 0, 9, 148, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 212, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9, 180, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 244, 80,\n\t7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 204, 81, 7, 15, 0, 8, 102, 0, 8, 38, 0, 9, 172, 0, 8, 6, 0, 8, 134, 0,\n\t8, 70, 0, 9, 236, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 156, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9, 220, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 188, 0,\n\t8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 252, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0, 8, 113, 0, 8, 49, 0, 9, 194, 80, 7, 10, 0, 8, 97,\n\t0, 8, 33, 0, 9, 162, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 226, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9, 146, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 210,\n\t81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 178, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 242, 80, 7, 4, 0, 8, 85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117,\n\t0, 8, 53, 0, 9, 202, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 170, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9, 234, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 154,\n\t84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 218, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 186, 0, 8, 13, 0, 8, 141, 0, 8, 77, 0, 9, 250, 80, 7, 3, 0, 8, 83,\n\t0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 198, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9, 166, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 230,\n\t80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 150, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 214, 82, 7, 19, 0, 8, 107, 0, 8, 43, 0, 9, 182, 0, 8, 11, 0, 8, 139,\n\t0, 8, 75, 0, 9, 246, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9, 206, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 174,\n\t0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 238, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 158, 84, 7, 99, 0, 8, 127, 0, 8, 63, 0, 9, 222, 82, 7, 27, 0, 8, 111,\n\t0, 8, 47, 0, 9, 190, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 254, 96, 7, 256, 0, 8, 80, 0, 8, 16, 84, 8, 115, 82, 7, 31, 0, 8, 112, 0, 8, 48, 0, 9,\n\t193, 80, 7, 10, 0, 8, 96, 0, 8, 32, 0, 9, 161, 0, 8, 0, 0, 8, 128, 0, 8, 64, 0, 9, 225, 80, 7, 6, 0, 8, 88, 0, 8, 24, 0, 9, 145, 83, 7, 59, 0, 8,\n\t120, 0, 8, 56, 0, 9, 209, 81, 7, 17, 0, 8, 104, 0, 8, 40, 0, 9, 177, 0, 8, 8, 0, 8, 136, 0, 8, 72, 0, 9, 241, 80, 7, 4, 0, 8, 84, 0, 8, 20, 85, 8,\n\t227, 83, 7, 43, 0, 8, 116, 0, 8, 52, 0, 9, 201, 81, 7, 13, 0, 8, 100, 0, 8, 36, 0, 9, 169, 0, 8, 4, 0, 8, 132, 0, 8, 68, 0, 9, 233, 80, 7, 8, 0, 8,\n\t92, 0, 8, 28, 0, 9, 153, 84, 7, 83, 0, 8, 124, 0, 8, 60, 0, 9, 217, 82, 7, 23, 0, 8, 108, 0, 8, 44, 0, 9, 185, 0, 8, 12, 0, 8, 140, 0, 8, 76, 0, 9,\n\t249, 80, 7, 3, 0, 8, 82, 0, 8, 18, 85, 8, 163, 83, 7, 35, 0, 8, 114, 0, 8, 50, 0, 9, 197, 81, 7, 11, 0, 8, 98, 0, 8, 34, 0, 9, 165, 0, 8, 2, 0, 8,\n\t130, 0, 8, 66, 0, 9, 229, 80, 7, 7, 0, 8, 90, 0, 8, 26, 0, 9, 149, 84, 7, 67, 0, 8, 122, 0, 8, 58, 0, 9, 213, 82, 7, 19, 0, 8, 106, 0, 8, 42, 0, 9,\n\t181, 0, 8, 10, 0, 8, 138, 0, 8, 74, 0, 9, 245, 80, 7, 5, 0, 8, 86, 0, 8, 22, 192, 8, 0, 83, 7, 51, 0, 8, 118, 0, 8, 54, 0, 9, 205, 81, 7, 15, 0, 8,\n\t102, 0, 8, 38, 0, 9, 173, 0, 8, 6, 0, 8, 134, 0, 8, 70, 0, 9, 237, 80, 7, 9, 0, 8, 94, 0, 8, 30, 0, 9, 157, 84, 7, 99, 0, 8, 126, 0, 8, 62, 0, 9,\n\t221, 82, 7, 27, 0, 8, 110, 0, 8, 46, 0, 9, 189, 0, 8, 14, 0, 8, 142, 0, 8, 78, 0, 9, 253, 96, 7, 256, 0, 8, 81, 0, 8, 17, 85, 8, 131, 82, 7, 31, 0,\n\t8, 113, 0, 8, 49, 0, 9, 195, 80, 7, 10, 0, 8, 97, 0, 8, 33, 0, 9, 163, 0, 8, 1, 0, 8, 129, 0, 8, 65, 0, 9, 227, 80, 7, 6, 0, 8, 89, 0, 8, 25, 0, 9,\n\t147, 83, 7, 59, 0, 8, 121, 0, 8, 57, 0, 9, 211, 81, 7, 17, 0, 8, 105, 0, 8, 41, 0, 9, 179, 0, 8, 9, 0, 8, 137, 0, 8, 73, 0, 9, 243, 80, 7, 4, 0, 8,\n\t85, 0, 8, 21, 80, 8, 258, 83, 7, 43, 0, 8, 117, 0, 8, 53, 0, 9, 203, 81, 7, 13, 0, 8, 101, 0, 8, 37, 0, 9, 171, 0, 8, 5, 0, 8, 133, 0, 8, 69, 0, 9,\n\t235, 80, 7, 8, 0, 8, 93, 0, 8, 29, 0, 9, 155, 84, 7, 83, 0, 8, 125, 0, 8, 61, 0, 9, 219, 82, 7, 23, 0, 8, 109, 0, 8, 45, 0, 9, 187, 0, 8, 13, 0, 8,\n\t141, 0, 8, 77, 0, 9, 251, 80, 7, 3, 0, 8, 83, 0, 8, 19, 85, 8, 195, 83, 7, 35, 0, 8, 115, 0, 8, 51, 0, 9, 199, 81, 7, 11, 0, 8, 99, 0, 8, 35, 0, 9,\n\t167, 0, 8, 3, 0, 8, 131, 0, 8, 67, 0, 9, 231, 80, 7, 7, 0, 8, 91, 0, 8, 27, 0, 9, 151, 84, 7, 67, 0, 8, 123, 0, 8, 59, 0, 9, 215, 82, 7, 19, 0, 8,\n\t107, 0, 8, 43, 0, 9, 183, 0, 8, 11, 0, 8, 139, 0, 8, 75, 0, 9, 247, 80, 7, 5, 0, 8, 87, 0, 8, 23, 192, 8, 0, 83, 7, 51, 0, 8, 119, 0, 8, 55, 0, 9,\n\t207, 81, 7, 15, 0, 8, 103, 0, 8, 39, 0, 9, 175, 0, 8, 7, 0, 8, 135, 0, 8, 71, 0, 9, 239, 80, 7, 9, 0, 8, 95, 0, 8, 31, 0, 9, 159, 84, 7, 99, 0, 8,\n\t127, 0, 8, 63, 0, 9, 223, 82, 7, 27, 0, 8, 111, 0, 8, 47, 0, 9, 191, 0, 8, 15, 0, 8, 143, 0, 8, 79, 0, 9, 255];\nconst fixed_td = [80, 5, 1, 87, 5, 257, 83, 5, 17, 91, 5, 4097, 81, 5, 5, 89, 5, 1025, 85, 5, 65, 93, 5, 16385, 80, 5, 3, 88, 5, 513, 84, 5, 33, 92, 5,\n\t8193, 82, 5, 9, 90, 5, 2049, 86, 5, 129, 192, 5, 24577, 80, 5, 2, 87, 5, 385, 83, 5, 25, 91, 5, 6145, 81, 5, 7, 89, 5, 1537, 85, 5, 97, 93, 5,\n\t24577, 80, 5, 4, 88, 5, 769, 84, 5, 49, 92, 5, 12289, 82, 5, 13, 90, 5, 3073, 86, 5, 193, 192, 5, 24577];\n\n// Tables for deflate from PKZIP's appnote.txt.\nconst cplens = [ // Copy lengths for literal codes 257..285\n\t3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0];\n\n// see note #13 above about 258\nconst cplext = [ // Extra bits for literal codes 257..285\n\t0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 112, 112 // 112==invalid\n];\n\nconst cpdist = [ // Copy offsets for distance codes 0..29\n\t1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577];\n\nconst cpdext = [ // Extra bits for distance codes\n\t0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\n\n// If BMAX needs to be larger than 16, then h and x[] should be uLong.\nconst BMAX = 15; // maximum bit length of any code\n\nfunction InfTree() {\n\tconst that = this;\n\n\tlet hn; // hufts used in space\n\tlet v; // work area for huft_build\n\tlet c; // bit length count table\n\tlet r; // table entry for structure assignment\n\tlet u; // table stack\n\tlet x; // bit offsets, then code stack\n\n\tfunction huft_build(b, // code lengths in bits (all assumed <=\n\t\t// BMAX)\n\t\tbindex, n, // number of codes (assumed <= 288)\n\t\ts, // number of simple-valued codes (0..s-1)\n\t\td, // list of base values for non-simple codes\n\t\te, // list of extra bits for non-simple codes\n\t\tt, // result: starting table\n\t\tm, // maximum lookup bits, returns actual\n\t\thp,// space for trees\n\t\thn,// hufts used in space\n\t\tv // working area: values in order of bit length\n\t) {\n\t\t// Given a list of code lengths and a maximum table size, make a set of\n\t\t// tables to decode that set of codes. Return Z_OK on success,\n\t\t// Z_BUF_ERROR\n\t\t// if the given code set is incomplete (the tables are still built in\n\t\t// this\n\t\t// case), Z_DATA_ERROR if the input is invalid (an over-subscribed set\n\t\t// of\n\t\t// lengths), or Z_MEM_ERROR if not enough memory.\n\n\t\tlet a; // counter for codes of length k\n\t\tlet f; // i repeats in table every f entries\n\t\tlet g; // maximum code length\n\t\tlet h; // table level\n\t\tlet i; // counter, current code\n\t\tlet j; // counter\n\t\tlet k; // number of bits in current code\n\t\tlet l; // bits per table (returned in m)\n\t\tlet mask; // (1 << w) - 1, to avoid cc -O bug on HP\n\t\tlet p; // pointer into c[], b[], or v[]\n\t\tlet q; // points to current table\n\t\tlet w; // bits before this table == (l * h)\n\t\tlet xp; // pointer into x\n\t\tlet y; // number of dummy codes added\n\t\tlet z; // number of entries in current table\n\n\t\t// Generate counts for each bit length\n\n\t\tp = 0;\n\t\ti = n;\n\t\tdo {\n\t\t\tc[b[bindex + p]]++;\n\t\t\tp++;\n\t\t\ti--; // assume all entries <= BMAX\n\t\t} while (i !== 0);\n\n\t\tif (c[0] == n) { // null input--all zero length codes\n\t\t\tt[0] = -1;\n\t\t\tm[0] = 0;\n\t\t\treturn Z_OK;\n\t\t}\n\n\t\t// Find minimum and maximum length, bound *m by those\n\t\tl = m[0];\n\t\tfor (j = 1; j <= BMAX; j++)\n\t\t\tif (c[j] !== 0)\n\t\t\t\tbreak;\n\t\tk = j; // minimum code length\n\t\tif (l < j) {\n\t\t\tl = j;\n\t\t}\n\t\tfor (i = BMAX; i !== 0; i--) {\n\t\t\tif (c[i] !== 0)\n\t\t\t\tbreak;\n\t\t}\n\t\tg = i; // maximum code length\n\t\tif (l > i) {\n\t\t\tl = i;\n\t\t}\n\t\tm[0] = l;\n\n\t\t// Adjust last length count to fill out codes, if needed\n\t\tfor (y = 1 << j; j < i; j++, y <<= 1) {\n\t\t\tif ((y -= c[j]) < 0) {\n\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t}\n\t\t}\n\t\tif ((y -= c[i]) < 0) {\n\t\t\treturn Z_DATA_ERROR;\n\t\t}\n\t\tc[i] += y;\n\n\t\t// Generate starting offsets into the value table for each length\n\t\tx[1] = j = 0;\n\t\tp = 1;\n\t\txp = 2;\n\t\twhile (--i !== 0) { // note that i == g from above\n\t\t\tx[xp] = (j += c[p]);\n\t\t\txp++;\n\t\t\tp++;\n\t\t}\n\n\t\t// Make a table of values in order of bit lengths\n\t\ti = 0;\n\t\tp = 0;\n\t\tdo {\n\t\t\tif ((j = b[bindex + p]) !== 0) {\n\t\t\t\tv[x[j]++] = i;\n\t\t\t}\n\t\t\tp++;\n\t\t} while (++i < n);\n\t\tn = x[g]; // set n to length of v\n\n\t\t// Generate the Huffman codes and for each, make the table entries\n\t\tx[0] = i = 0; // first Huffman code is zero\n\t\tp = 0; // grab values in bit order\n\t\th = -1; // no tables yet--level -1\n\t\tw = -l; // bits decoded == (l * h)\n\t\tu[0] = 0; // just to keep compilers happy\n\t\tq = 0; // ditto\n\t\tz = 0; // ditto\n\n\t\t// go through the bit lengths (k already is bits in shortest code)\n\t\tfor (; k <= g; k++) {\n\t\t\ta = c[k];\n\t\t\twhile (a-- !== 0) {\n\t\t\t\t// here i is the Huffman code of length k bits for value *p\n\t\t\t\t// make tables up to required level\n\t\t\t\twhile (k > w + l) {\n\t\t\t\t\th++;\n\t\t\t\t\tw += l; // previous table always l bits\n\t\t\t\t\t// compute minimum size table less than or equal to l bits\n\t\t\t\t\tz = g - w;\n\t\t\t\t\tz = (z > l) ? l : z; // table size upper limit\n\t\t\t\t\tif ((f = 1 << (j = k - w)) > a + 1) { // try a k-w bit table\n\t\t\t\t\t\t// too few codes for\n\t\t\t\t\t\t// k-w bit table\n\t\t\t\t\t\tf -= a + 1; // deduct codes from patterns left\n\t\t\t\t\t\txp = k;\n\t\t\t\t\t\tif (j < z) {\n\t\t\t\t\t\t\twhile (++j < z) { // try smaller tables up to z bits\n\t\t\t\t\t\t\t\tif ((f <<= 1) <= c[++xp])\n\t\t\t\t\t\t\t\t\tbreak; // enough codes to use up j bits\n\t\t\t\t\t\t\t\tf -= c[xp]; // else deduct codes from patterns\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tz = 1 << j; // table entries for j-bit table\n\n\t\t\t\t\t// allocate new table\n\t\t\t\t\tif (hn[0] + z > MANY) { // (note: doesn't matter for fixed)\n\t\t\t\t\t\treturn Z_DATA_ERROR; // overflow of MANY\n\t\t\t\t\t}\n\t\t\t\t\tu[h] = q = /* hp+ */hn[0]; // DEBUG\n\t\t\t\t\thn[0] += z;\n\n\t\t\t\t\t// connect to last table, if there is one\n\t\t\t\t\tif (h !== 0) {\n\t\t\t\t\t\tx[h] = i; // save pattern for backing up\n\t\t\t\t\t\tr[0] = /* (byte) */j; // bits in this table\n\t\t\t\t\t\tr[1] = /* (byte) */l; // bits to dump before this table\n\t\t\t\t\t\tj = i >>> (w - l);\n\t\t\t\t\t\tr[2] = /* (int) */(q - u[h - 1] - j); // offset to this table\n\t\t\t\t\t\thp.set(r, (u[h - 1] + j) * 3);\n\t\t\t\t\t\t// to\n\t\t\t\t\t\t// last\n\t\t\t\t\t\t// table\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt[0] = q; // first table is returned result\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// set up table entry in r\n\t\t\t\tr[1] = /* (byte) */(k - w);\n\t\t\t\tif (p >= n) {\n\t\t\t\t\tr[0] = 128 + 64; // out of values--invalid code\n\t\t\t\t} else if (v[p] < s) {\n\t\t\t\t\tr[0] = /* (byte) */(v[p] < 256 ? 0 : 32 + 64); // 256 is\n\t\t\t\t\t// end-of-block\n\t\t\t\t\tr[2] = v[p++]; // simple code is just the value\n\t\t\t\t} else {\n\t\t\t\t\tr[0] = /* (byte) */(e[v[p] - s] + 16 + 64); // non-simple--look\n\t\t\t\t\t// up in lists\n\t\t\t\t\tr[2] = d[v[p++] - s];\n\t\t\t\t}\n\n\t\t\t\t// fill code-like entries with r\n\t\t\t\tf = 1 << (k - w);\n\t\t\t\tfor (j = i >>> w; j < z; j += f) {\n\t\t\t\t\thp.set(r, (q + j) * 3);\n\t\t\t\t}\n\n\t\t\t\t// backwards increment the k-bit code i\n\t\t\t\tfor (j = 1 << (k - 1); (i & j) !== 0; j >>>= 1) {\n\t\t\t\t\ti ^= j;\n\t\t\t\t}\n\t\t\t\ti ^= j;\n\n\t\t\t\t// backup over finished tables\n\t\t\t\tmask = (1 << w) - 1; // needed on HP, cc -O bug\n\t\t\t\twhile ((i & mask) != x[h]) {\n\t\t\t\t\th--; // don't need to update q\n\t\t\t\t\tw -= l;\n\t\t\t\t\tmask = (1 << w) - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Return Z_BUF_ERROR if we were given an incomplete table\n\t\treturn y !== 0 && g != 1 ? Z_BUF_ERROR : Z_OK;\n\t}\n\n\tfunction initWorkArea(vsize) {\n\t\tlet i;\n\t\tif (!hn) {\n\t\t\thn = []; // []; //new Array(1);\n\t\t\tv = []; // new Array(vsize);\n\t\t\tc = new Int32Array(BMAX + 1); // new Array(BMAX + 1);\n\t\t\tr = []; // new Array(3);\n\t\t\tu = new Int32Array(BMAX); // new Array(BMAX);\n\t\t\tx = new Int32Array(BMAX + 1); // new Array(BMAX + 1);\n\t\t}\n\t\tif (v.length < vsize) {\n\t\t\tv = []; // new Array(vsize);\n\t\t}\n\t\tfor (i = 0; i < vsize; i++) {\n\t\t\tv[i] = 0;\n\t\t}\n\t\tfor (i = 0; i < BMAX + 1; i++) {\n\t\t\tc[i] = 0;\n\t\t}\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\tr[i] = 0;\n\t\t}\n\t\t// for(int i=0; i<BMAX; i++){u[i]=0;}\n\t\tu.set(c.subarray(0, BMAX), 0);\n\t\t// for(int i=0; i<BMAX+1; i++){x[i]=0;}\n\t\tx.set(c.subarray(0, BMAX + 1), 0);\n\t}\n\n\tthat.inflate_trees_bits = function (c, // 19 code lengths\n\t\tbb, // bits tree desired/actual depth\n\t\ttb, // bits tree result\n\t\thp, // space for trees\n\t\tz // for messages\n\t) {\n\t\tlet result;\n\t\tinitWorkArea(19);\n\t\thn[0] = 0;\n\t\tresult = huft_build(c, 0, 19, 19, null, null, tb, bb, hp, hn, v);\n\n\t\tif (result == Z_DATA_ERROR) {\n\t\t\tz.msg = \"oversubscribed dynamic bit lengths tree\";\n\t\t} else if (result == Z_BUF_ERROR || bb[0] === 0) {\n\t\t\tz.msg = \"incomplete dynamic bit lengths tree\";\n\t\t\tresult = Z_DATA_ERROR;\n\t\t}\n\t\treturn result;\n\t};\n\n\tthat.inflate_trees_dynamic = function (nl, // number of literal/length codes\n\t\tnd, // number of distance codes\n\t\tc, // that many (total) code lengths\n\t\tbl, // literal desired/actual bit depth\n\t\tbd, // distance desired/actual bit depth\n\t\ttl, // literal/length tree result\n\t\ttd, // distance tree result\n\t\thp, // space for trees\n\t\tz // for messages\n\t) {\n\t\tlet result;\n\n\t\t// build literal/length tree\n\t\tinitWorkArea(288);\n\t\thn[0] = 0;\n\t\tresult = huft_build(c, 0, nl, 257, cplens, cplext, tl, bl, hp, hn, v);\n\t\tif (result != Z_OK || bl[0] === 0) {\n\t\t\tif (result == Z_DATA_ERROR) {\n\t\t\t\tz.msg = \"oversubscribed literal/length tree\";\n\t\t\t} else if (result != Z_MEM_ERROR) {\n\t\t\t\tz.msg = \"incomplete literal/length tree\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\t// build distance tree\n\t\tinitWorkArea(288);\n\t\tresult = huft_build(c, nl, nd, 0, cpdist, cpdext, td, bd, hp, hn, v);\n\n\t\tif (result != Z_OK || (bd[0] === 0 && nl > 257)) {\n\t\t\tif (result == Z_DATA_ERROR) {\n\t\t\t\tz.msg = \"oversubscribed distance tree\";\n\t\t\t} else if (result == Z_BUF_ERROR) {\n\t\t\t\tz.msg = \"incomplete distance tree\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t} else if (result != Z_MEM_ERROR) {\n\t\t\t\tz.msg = \"empty distance tree with lengths\";\n\t\t\t\tresult = Z_DATA_ERROR;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\treturn Z_OK;\n\t};\n\n}\n\nInfTree.inflate_trees_fixed = function (bl, // literal desired/actual bit depth\n\tbd, // distance desired/actual bit depth\n\ttl,// literal/length tree result\n\ttd// distance tree result\n) {\n\tbl[0] = fixed_bl;\n\tbd[0] = fixed_bd;\n\ttl[0] = fixed_tl;\n\ttd[0] = fixed_td;\n\treturn Z_OK;\n};\n\n// InfCodes\n\n// waiting for \"i:\"=input,\n// \"o:\"=output,\n// \"x:\"=nothing\nconst START = 0; // x: set up for LEN\nconst LEN = 1; // i: get length/literal/eob next\nconst LENEXT = 2; // i: getting length extra (have base)\nconst DIST = 3; // i: get distance next\nconst DISTEXT = 4;// i: getting distance extra\nconst COPY = 5; // o: copying bytes in win, waiting\n// for space\nconst LIT = 6; // o: got literal, waiting for output\n// space\nconst WASH = 7; // o: got eob, possibly still output\n// waiting\nconst END = 8; // x: got eob and all data flushed\nconst BADCODE = 9;// x: got error\n\nfunction InfCodes() {\n\tconst that = this;\n\n\tlet mode; // current inflate_codes mode\n\n\t// mode dependent information\n\tlet len = 0;\n\n\tlet tree; // pointer into tree\n\tlet tree_index = 0;\n\tlet need = 0; // bits needed\n\n\tlet lit = 0;\n\n\t// if EXT or COPY, where and how much\n\tlet get = 0; // bits to get for extra\n\tlet dist = 0; // distance back to copy from\n\n\tlet lbits = 0; // ltree bits decoded per branch\n\tlet dbits = 0; // dtree bits decoder per branch\n\tlet ltree; // literal/length/eob tree\n\tlet ltree_index = 0; // literal/length/eob tree\n\tlet dtree; // distance tree\n\tlet dtree_index = 0; // distance tree\n\n\t// Called with number of bytes left to write in win at least 258\n\t// (the maximum string length) and number of input bytes available\n\t// at least ten. The ten bytes are six bytes for the longest length/\n\t// distance pair plus four bytes for overloading the bit buffer.\n\n\tfunction inflate_fast(bl, bd, tl, tl_index, td, td_index, s, z) {\n\t\tlet t; // temporary pointer\n\t\tlet tp; // temporary pointer\n\t\tlet tp_index; // temporary pointer\n\t\tlet e; // extra bits or operation\n\t\tlet b; // bit buffer\n\t\tlet k; // bits in bit buffer\n\t\tlet p; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\t\tlet ml; // mask for literal/length tree\n\t\tlet md; // mask for distance tree\n\t\tlet c; // bytes to copy\n\t\tlet d; // distance back to copy from\n\t\tlet r; // copy source pointer\n\n\t\tlet tp_index_t_3; // (tp_index+t)*3\n\n\t\t// load input, output, bit values\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = s.bitb;\n\t\tk = s.bitk;\n\t\tq = s.write;\n\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t// initialize masks\n\t\tml = inflate_mask[bl];\n\t\tmd = inflate_mask[bd];\n\n\t\t// do until not enough input or output space for fast loop\n\t\tdo { // assume called with m >= 258 && n >= 10\n\t\t\t// get literal/length code\n\t\t\twhile (k < (20)) { // max bits for literal/length code\n\t\t\t\tn--;\n\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\tk += 8;\n\t\t\t}\n\n\t\t\tt = b & ml;\n\t\t\ttp = tl;\n\t\t\ttp_index = tl_index;\n\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\tif ((e = tp[tp_index_t_3]) === 0) {\n\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\ts.win[q++] = /* (byte) */tp[tp_index_t_3 + 2];\n\t\t\t\tm--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdo {\n\n\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\tif ((e & 16) !== 0) {\n\t\t\t\t\te &= 15;\n\t\t\t\t\tc = tp[tp_index_t_3 + 2] + (/* (int) */b & inflate_mask[e]);\n\n\t\t\t\t\tb >>= e;\n\t\t\t\t\tk -= e;\n\n\t\t\t\t\t// decode distance base of block to copy\n\t\t\t\t\twhile (k < (15)) { // max bits for distance code\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tt = b & md;\n\t\t\t\t\ttp = td;\n\t\t\t\t\ttp_index = td_index;\n\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\te = tp[tp_index_t_3];\n\n\t\t\t\t\tdo {\n\n\t\t\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\t\t\tif ((e & 16) !== 0) {\n\t\t\t\t\t\t\t// get extra bits to add to distance base\n\t\t\t\t\t\t\te &= 15;\n\t\t\t\t\t\t\twhile (k < (e)) { // get extra bits (up to 13)\n\t\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\td = tp[tp_index_t_3 + 2] + (b & inflate_mask[e]);\n\n\t\t\t\t\t\t\tb >>= (e);\n\t\t\t\t\t\t\tk -= (e);\n\n\t\t\t\t\t\t\t// do the copy\n\t\t\t\t\t\t\tm -= c;\n\t\t\t\t\t\t\tif (q >= d) { // offset before dest\n\t\t\t\t\t\t\t\t// just copy\n\t\t\t\t\t\t\t\tr = q - d;\n\t\t\t\t\t\t\t\tif (q - r > 0 && 2 > (q - r)) {\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++]; // minimum\n\t\t\t\t\t\t\t\t\t// count is\n\t\t\t\t\t\t\t\t\t// three,\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++]; // so unroll\n\t\t\t\t\t\t\t\t\t// loop a\n\t\t\t\t\t\t\t\t\t// little\n\t\t\t\t\t\t\t\t\tc -= 2;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + 2), q);\n\t\t\t\t\t\t\t\t\tq += 2;\n\t\t\t\t\t\t\t\t\tr += 2;\n\t\t\t\t\t\t\t\t\tc -= 2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else { // else offset after destination\n\t\t\t\t\t\t\t\tr = q - d;\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\tr += s.end; // force pointer in win\n\t\t\t\t\t\t\t\t} while (r < 0); // covers invalid distances\n\t\t\t\t\t\t\t\te = s.end - r;\n\t\t\t\t\t\t\t\tif (c > e) { // if source crosses,\n\t\t\t\t\t\t\t\t\tc -= e; // wrapped copy\n\t\t\t\t\t\t\t\t\tif (q - r > 0 && e > (q - r)) {\n\t\t\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++];\n\t\t\t\t\t\t\t\t\t\t} while (--e !== 0);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + e), q);\n\t\t\t\t\t\t\t\t\t\tq += e;\n\t\t\t\t\t\t\t\t\t\tr += e;\n\t\t\t\t\t\t\t\t\t\te = 0;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tr = 0; // copy rest from start of win\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy all or what's left\n\t\t\t\t\t\t\tif (q - r > 0 && c > (q - r)) {\n\t\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\t\ts.win[q++] = s.win[r++];\n\t\t\t\t\t\t\t\t} while (--c !== 0);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ts.win.set(s.win.subarray(r, r + c), q);\n\t\t\t\t\t\t\t\tq += c;\n\t\t\t\t\t\t\t\tr += c;\n\t\t\t\t\t\t\t\tc = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t} else if ((e & 64) === 0) {\n\t\t\t\t\t\t\tt += tp[tp_index_t_3 + 2];\n\t\t\t\t\t\t\tt += (b & inflate_mask[e]);\n\t\t\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\t\t\te = tp[tp_index_t_3];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tz.msg = \"invalid distance code\";\n\n\t\t\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\t\t\tn += c;\n\t\t\t\t\t\t\tp -= c;\n\t\t\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\n\t\t\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\t} while (true);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ((e & 64) === 0) {\n\t\t\t\t\tt += tp[tp_index_t_3 + 2];\n\t\t\t\t\tt += (b & inflate_mask[e]);\n\t\t\t\t\ttp_index_t_3 = (tp_index + t) * 3;\n\t\t\t\t\tif ((e = tp[tp_index_t_3]) === 0) {\n\n\t\t\t\t\t\tb >>= (tp[tp_index_t_3 + 1]);\n\t\t\t\t\t\tk -= (tp[tp_index_t_3 + 1]);\n\n\t\t\t\t\t\ts.win[q++] = /* (byte) */tp[tp_index_t_3 + 2];\n\t\t\t\t\t\tm--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else if ((e & 32) !== 0) {\n\n\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\tn += c;\n\t\t\t\t\tp -= c;\n\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\n\t\t\t\t\treturn Z_STREAM_END;\n\t\t\t\t} else {\n\t\t\t\t\tz.msg = \"invalid literal/length code\";\n\n\t\t\t\t\tc = z.avail_in - n;\n\t\t\t\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\t\t\t\tn += c;\n\t\t\t\t\tp -= c;\n\t\t\t\t\tk -= c << 3;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\n\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\t}\n\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t} while (true);\n\t\t} while (m >= 258 && n >= 10);\n\n\t\t// not enough input or output--restore pointers and return\n\t\tc = z.avail_in - n;\n\t\tc = (k >> 3) < c ? k >> 3 : c;\n\t\tn += c;\n\t\tp -= c;\n\t\tk -= c << 3;\n\n\t\ts.bitb = b;\n\t\ts.bitk = k;\n\t\tz.avail_in = n;\n\t\tz.total_in += p - z.next_in_index;\n\t\tz.next_in_index = p;\n\t\ts.write = q;\n\n\t\treturn Z_OK;\n\t}\n\n\tthat.init = function (bl, bd, tl, tl_index, td, td_index) {\n\t\tmode = START;\n\t\tlbits = /* (byte) */bl;\n\t\tdbits = /* (byte) */bd;\n\t\tltree = tl;\n\t\tltree_index = tl_index;\n\t\tdtree = td;\n\t\tdtree_index = td_index;\n\t\ttree = null;\n\t};\n\n\tthat.proc = function (s, z, r) {\n\t\tlet j; // temporary storage\n\t\tlet tindex; // temporary pointer\n\t\tlet e; // extra bits or operation\n\t\tlet b = 0; // bit buffer\n\t\tlet k = 0; // bits in bit buffer\n\t\tlet p = 0; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\t\tlet f; // pointer to copy strings from\n\n\t\t// copy input/output information to locals (UPDATE macro restores)\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = s.bitb;\n\t\tk = s.bitk;\n\t\tq = s.write;\n\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t// process input and output based on current state\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tswitch (mode) {\n\t\t\t\t// waiting for \"i:\"=input, \"o:\"=output, \"x:\"=nothing\n\t\t\t\tcase START: // x: set up for LEN\n\t\t\t\t\tif (m >= 258 && n >= 10) {\n\n\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\tr = inflate_fast(lbits, dbits, ltree, ltree_index, dtree, dtree_index, s, z);\n\n\t\t\t\t\t\tp = z.next_in_index;\n\t\t\t\t\t\tn = z.avail_in;\n\t\t\t\t\t\tb = s.bitb;\n\t\t\t\t\t\tk = s.bitk;\n\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\tif (r != Z_OK) {\n\t\t\t\t\t\t\tmode = r == Z_STREAM_END ? WASH : BADCODE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tneed = lbits;\n\t\t\t\t\ttree = ltree;\n\t\t\t\t\ttree_index = ltree_index;\n\n\t\t\t\t\tmode = LEN;\n\t\t\t\t/* falls through */\n\t\t\t\tcase LEN: // i: get length/literal/eob next\n\t\t\t\t\tj = need;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttindex = (tree_index + (b & inflate_mask[j])) * 3;\n\n\t\t\t\t\tb >>>= (tree[tindex + 1]);\n\t\t\t\t\tk -= (tree[tindex + 1]);\n\n\t\t\t\t\te = tree[tindex];\n\n\t\t\t\t\tif (e === 0) { // literal\n\t\t\t\t\t\tlit = tree[tindex + 2];\n\t\t\t\t\t\tmode = LIT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 16) !== 0) { // length\n\t\t\t\t\t\tget = e & 15;\n\t\t\t\t\t\tlen = tree[tindex + 2];\n\t\t\t\t\t\tmode = LENEXT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 64) === 0) { // next table\n\t\t\t\t\t\tneed = e;\n\t\t\t\t\t\ttree_index = tindex / 3 + tree[tindex + 2];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 32) !== 0) { // end of block\n\t\t\t\t\t\tmode = WASH;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = BADCODE; // invalid code\n\t\t\t\t\tz.msg = \"invalid literal/length code\";\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase LENEXT: // i: getting length extra (have base)\n\t\t\t\t\tj = get;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tlen += (b & inflate_mask[j]);\n\n\t\t\t\t\tb >>= j;\n\t\t\t\t\tk -= j;\n\n\t\t\t\t\tneed = dbits;\n\t\t\t\t\ttree = dtree;\n\t\t\t\t\ttree_index = dtree_index;\n\t\t\t\t\tmode = DIST;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DIST: // i: get distance next\n\t\t\t\t\tj = need;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttindex = (tree_index + (b & inflate_mask[j])) * 3;\n\n\t\t\t\t\tb >>= tree[tindex + 1];\n\t\t\t\t\tk -= tree[tindex + 1];\n\n\t\t\t\t\te = (tree[tindex]);\n\t\t\t\t\tif ((e & 16) !== 0) { // distance\n\t\t\t\t\t\tget = e & 15;\n\t\t\t\t\t\tdist = tree[tindex + 2];\n\t\t\t\t\t\tmode = DISTEXT;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((e & 64) === 0) { // next table\n\t\t\t\t\t\tneed = e;\n\t\t\t\t\t\ttree_index = tindex / 3 + tree[tindex + 2];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = BADCODE; // invalid code\n\t\t\t\t\tz.msg = \"invalid distance code\";\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase DISTEXT: // i: getting distance extra\n\t\t\t\t\tj = get;\n\n\t\t\t\t\twhile (k < (j)) {\n\t\t\t\t\t\tif (n !== 0)\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\telse {\n\n\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tdist += (b & inflate_mask[j]);\n\n\t\t\t\t\tb >>= j;\n\t\t\t\t\tk -= j;\n\n\t\t\t\t\tmode = COPY;\n\t\t\t\t/* falls through */\n\t\t\t\tcase COPY: // o: copying bytes in win, waiting for space\n\t\t\t\t\tf = q - dist;\n\t\t\t\t\twhile (f < 0) { // modulo win size-\"while\" instead\n\t\t\t\t\t\tf += s.end; // of \"if\" handles invalid distances\n\t\t\t\t\t}\n\t\t\t\t\twhile (len !== 0) {\n\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ts.win[q++] = s.win[f++];\n\t\t\t\t\t\tm--;\n\n\t\t\t\t\t\tif (f == s.end)\n\t\t\t\t\t\t\tf = 0;\n\t\t\t\t\t\tlen--;\n\t\t\t\t\t}\n\t\t\t\t\tmode = START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LIT: // o: got literal, waiting for output space\n\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\t\t\tq = s.write;\n\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\t\t\tif (q == s.end && s.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\n\t\t\t\t\ts.win[q++] = /* (byte) */lit;\n\t\t\t\t\tm--;\n\n\t\t\t\t\tmode = START;\n\t\t\t\t\tbreak;\n\t\t\t\tcase WASH: // o: got eob, possibly more output\n\t\t\t\t\tif (k > 7) { // return unused byte, if any\n\t\t\t\t\t\tk -= 8;\n\t\t\t\t\t\tn++;\n\t\t\t\t\t\tp--; // can always return one\n\t\t\t\t\t}\n\n\t\t\t\t\ts.write = q;\n\t\t\t\t\tr = s.inflate_flush(z, r);\n\t\t\t\t\tq = s.write;\n\t\t\t\t\tm = q < s.read ? s.read - q - 1 : s.end - q;\n\n\t\t\t\t\tif (s.read != s.write) {\n\t\t\t\t\t\ts.bitb = b;\n\t\t\t\t\t\ts.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\ts.write = q;\n\t\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tmode = END;\n\t\t\t\t/* falls through */\n\t\t\t\tcase END:\n\t\t\t\t\tr = Z_STREAM_END;\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tcase BADCODE: // x: got error\n\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\n\t\t\t\tdefault:\n\t\t\t\t\tr = Z_STREAM_ERROR;\n\n\t\t\t\t\ts.bitb = b;\n\t\t\t\t\ts.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\ts.write = q;\n\t\t\t\t\treturn s.inflate_flush(z, r);\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.free = function () {\n\t\t// ZFREE(z, c);\n\t};\n\n}\n\n// InfBlocks\n\n// Table for deflate from PKZIP's appnote.txt.\nconst border = [ // Order of the bit length code lengths\n\t16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\nconst TYPE = 0; // get type bits (3, including end bit)\nconst LENS = 1; // get lengths for stored\nconst STORED = 2;// processing stored block\nconst TABLE = 3; // get table lengths\nconst BTREE = 4; // get bit lengths tree for a dynamic\n// block\nconst DTREE = 5; // get length, distance trees for a\n// dynamic block\nconst CODES = 6; // processing fixed or dynamic block\nconst DRY = 7; // output remaining win bytes\nconst DONELOCKS = 8; // finished last block, done\nconst BADBLOCKS = 9; // ot a data error--stuck here\n\nfunction InfBlocks(z, w) {\n\tconst that = this;\n\n\tlet mode = TYPE; // current inflate_block mode\n\n\tlet left = 0; // if STORED, bytes left to copy\n\n\tlet table = 0; // table lengths (14 bits)\n\tlet index = 0; // index into blens (or border)\n\tlet blens; // bit lengths of codes\n\tconst bb = [0]; // bit length tree depth\n\tconst tb = [0]; // bit length decoding tree\n\n\tconst codes = new InfCodes(); // if CODES, current state\n\n\tlet last = 0; // true if this block is the last block\n\n\tlet hufts = new Int32Array(MANY * 3); // single malloc for tree space\n\tconst check = 0; // check on output\n\tconst inftree = new InfTree();\n\n\tthat.bitk = 0; // bits in bit buffer\n\tthat.bitb = 0; // bit buffer\n\tthat.win = new Uint8Array(w); // sliding win\n\tthat.end = w; // one byte after sliding win\n\tthat.read = 0; // win read pointer\n\tthat.write = 0; // win write pointer\n\n\tthat.reset = function (z, c) {\n\t\tif (c)\n\t\t\tc[0] = check;\n\t\t// if (mode == BTREE || mode == DTREE) {\n\t\t// }\n\t\tif (mode == CODES) {\n\t\t\tcodes.free(z);\n\t\t}\n\t\tmode = TYPE;\n\t\tthat.bitk = 0;\n\t\tthat.bitb = 0;\n\t\tthat.read = that.write = 0;\n\t};\n\n\tthat.reset(z, null);\n\n\t// copy as much as possible from the sliding win to the output area\n\tthat.inflate_flush = function (z, r) {\n\t\tlet n;\n\t\tlet p;\n\t\tlet q;\n\n\t\t// local copies of source and destination pointers\n\t\tp = z.next_out_index;\n\t\tq = that.read;\n\n\t\t// compute number of bytes to copy as far as end of win\n\t\tn = /* (int) */((q <= that.write ? that.write : that.end) - q);\n\t\tif (n > z.avail_out)\n\t\t\tn = z.avail_out;\n\t\tif (n !== 0 && r == Z_BUF_ERROR)\n\t\t\tr = Z_OK;\n\n\t\t// update counters\n\t\tz.avail_out -= n;\n\t\tz.total_out += n;\n\n\t\t// copy as far as end of win\n\t\tz.next_out.set(that.win.subarray(q, q + n), p);\n\t\tp += n;\n\t\tq += n;\n\n\t\t// see if more to copy at beginning of win\n\t\tif (q == that.end) {\n\t\t\t// wrap pointers\n\t\t\tq = 0;\n\t\t\tif (that.write == that.end)\n\t\t\t\tthat.write = 0;\n\n\t\t\t// compute bytes to copy\n\t\t\tn = that.write - q;\n\t\t\tif (n > z.avail_out)\n\t\t\t\tn = z.avail_out;\n\t\t\tif (n !== 0 && r == Z_BUF_ERROR)\n\t\t\t\tr = Z_OK;\n\n\t\t\t// update counters\n\t\t\tz.avail_out -= n;\n\t\t\tz.total_out += n;\n\n\t\t\t// copy\n\t\t\tz.next_out.set(that.win.subarray(q, q + n), p);\n\t\t\tp += n;\n\t\t\tq += n;\n\t\t}\n\n\t\t// update pointers\n\t\tz.next_out_index = p;\n\t\tthat.read = q;\n\n\t\t// done\n\t\treturn r;\n\t};\n\n\tthat.proc = function (z, r) {\n\t\tlet t; // temporary storage\n\t\tlet b; // bit buffer\n\t\tlet k; // bits in bit buffer\n\t\tlet p; // input data pointer\n\t\tlet n; // bytes available there\n\t\tlet q; // output win write pointer\n\t\tlet m; // bytes to end of win or read pointer\n\n\t\tlet i;\n\n\t\t// copy input/output information to locals (UPDATE macro restores)\n\t\t// {\n\t\tp = z.next_in_index;\n\t\tn = z.avail_in;\n\t\tb = that.bitb;\n\t\tk = that.bitk;\n\t\t// }\n\t\t// {\n\t\tq = that.write;\n\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t// }\n\n\t\t// process input based on current state\n\t\t// DEBUG dtree\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tlet bl, bd, tl, td, bl_, bd_, tl_, td_;\n\t\t\tswitch (mode) {\n\t\t\t\tcase TYPE:\n\n\t\t\t\t\twhile (k < (3)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\t\t\t\t\tt = /* (int) */(b & 7);\n\t\t\t\t\tlast = t & 1;\n\n\t\t\t\t\tswitch (t >>> 1) {\n\t\t\t\t\t\tcase 0: // stored\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tt = k & 7; // go to byte boundary\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tmode = LENS; // get length of stored block\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 1: // fixed\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tbl = []; // new Array(1);\n\t\t\t\t\t\t\tbd = []; // new Array(1);\n\t\t\t\t\t\t\ttl = [[]]; // new Array(1);\n\t\t\t\t\t\t\ttd = [[]]; // new Array(1);\n\n\t\t\t\t\t\t\tInfTree.inflate_trees_fixed(bl, bd, tl, td);\n\t\t\t\t\t\t\tcodes.init(bl[0], bd[0], tl[0], 0, td[0], 0);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\tmode = CODES;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 2: // dynamic\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t\tmode = TABLE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 3: // illegal\n\n\t\t\t\t\t\t\t// {\n\t\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t\tz.msg = \"invalid block type\";\n\t\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase LENS:\n\n\t\t\t\t\twhile (k < (32)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((((~b) >>> 16) & 0xffff) != (b & 0xffff)) {\n\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\tz.msg = \"invalid stored block lengths\";\n\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tleft = (b & 0xffff);\n\t\t\t\t\tb = k = 0; // dump bits\n\t\t\t\t\tmode = left !== 0 ? STORED : (last !== 0 ? DRY : TYPE);\n\t\t\t\t\tbreak;\n\t\t\t\tcase STORED:\n\t\t\t\t\tif (n === 0) {\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\tif (q == that.end && that.read !== 0) {\n\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\tr = that.inflate_flush(z, r);\n\t\t\t\t\t\t\tq = that.write;\n\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t\tif (q == that.end && that.read !== 0) {\n\t\t\t\t\t\t\t\tq = 0;\n\t\t\t\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (m === 0) {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\n\t\t\t\t\tt = left;\n\t\t\t\t\tif (t > n)\n\t\t\t\t\t\tt = n;\n\t\t\t\t\tif (t > m)\n\t\t\t\t\t\tt = m;\n\t\t\t\t\tthat.win.set(z.read_buf(p, t), q);\n\t\t\t\t\tp += t;\n\t\t\t\t\tn -= t;\n\t\t\t\t\tq += t;\n\t\t\t\t\tm -= t;\n\t\t\t\t\tif ((left -= t) !== 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tmode = last !== 0 ? DRY : TYPE;\n\t\t\t\t\tbreak;\n\t\t\t\tcase TABLE:\n\n\t\t\t\t\twhile (k < (14)) {\n\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tn--;\n\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\tk += 8;\n\t\t\t\t\t}\n\n\t\t\t\t\ttable = t = (b & 0x3fff);\n\t\t\t\t\tif ((t & 0x1f) > 29 || ((t >> 5) & 0x1f) > 29) {\n\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\tz.msg = \"too many length or distance symbols\";\n\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tt = 258 + (t & 0x1f) + ((t >> 5) & 0x1f);\n\t\t\t\t\tif (!blens || blens.length < t) {\n\t\t\t\t\t\tblens = []; // new Array(t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (i = 0; i < t; i++) {\n\t\t\t\t\t\t\tblens[i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// {\n\t\t\t\t\tb >>>= (14);\n\t\t\t\t\tk -= (14);\n\t\t\t\t\t// }\n\n\t\t\t\t\tindex = 0;\n\t\t\t\t\tmode = BTREE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase BTREE:\n\t\t\t\t\twhile (index < 4 + (table >>> 10)) {\n\t\t\t\t\t\twhile (k < (3)) {\n\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tblens[border[index++]] = b & 7;\n\n\t\t\t\t\t\t// {\n\t\t\t\t\t\tb >>>= (3);\n\t\t\t\t\t\tk -= (3);\n\t\t\t\t\t\t// }\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (index < 19) {\n\t\t\t\t\t\tblens[border[index++]] = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbb[0] = 7;\n\t\t\t\t\tt = inftree.inflate_trees_bits(blens, bb, tb, hufts, z);\n\t\t\t\t\tif (t != Z_OK) {\n\t\t\t\t\t\tr = t;\n\t\t\t\t\t\tif (r == Z_DATA_ERROR) {\n\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\n\t\t\t\t\tindex = 0;\n\t\t\t\t\tmode = DTREE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DTREE:\n\t\t\t\t\t// eslint-disable-next-line no-constant-condition\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tt = table;\n\t\t\t\t\t\tif (index >= 258 + (t & 0x1f) + ((t >> 5) & 0x1f)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet j, c;\n\n\t\t\t\t\t\tt = bb[0];\n\n\t\t\t\t\t\twhile (k < (t)) {\n\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if (tb[0] == -1) {\n\t\t\t\t\t\t// System.err.println(\"null...\");\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\tt = hufts[(tb[0] + (b & inflate_mask[t])) * 3 + 1];\n\t\t\t\t\t\tc = hufts[(tb[0] + (b & inflate_mask[t])) * 3 + 2];\n\n\t\t\t\t\t\tif (c < 16) {\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\t\t\t\t\t\t\tblens[index++] = c;\n\t\t\t\t\t\t} else { // c == 16..18\n\t\t\t\t\t\t\ti = c == 18 ? 7 : c - 14;\n\t\t\t\t\t\t\tj = c == 18 ? 11 : 3;\n\n\t\t\t\t\t\t\twhile (k < (t + i)) {\n\t\t\t\t\t\t\t\tif (n !== 0) {\n\t\t\t\t\t\t\t\t\tr = Z_OK;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tn--;\n\t\t\t\t\t\t\t\tb |= (z.read_byte(p++) & 0xff) << k;\n\t\t\t\t\t\t\t\tk += 8;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tb >>>= (t);\n\t\t\t\t\t\t\tk -= (t);\n\n\t\t\t\t\t\t\tj += (b & inflate_mask[i]);\n\n\t\t\t\t\t\t\tb >>>= (i);\n\t\t\t\t\t\t\tk -= (i);\n\n\t\t\t\t\t\t\ti = index;\n\t\t\t\t\t\t\tt = table;\n\t\t\t\t\t\t\tif (i + j > 258 + (t & 0x1f) + ((t >> 5) & 0x1f) || (c == 16 && i < 1)) {\n\t\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t\t\tz.msg = \"invalid bit length repeat\";\n\t\t\t\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tc = c == 16 ? blens[i - 1] : 0;\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\tblens[i++] = c;\n\t\t\t\t\t\t\t} while (--j !== 0);\n\t\t\t\t\t\t\tindex = i;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttb[0] = -1;\n\t\t\t\t\t// {\n\t\t\t\t\tbl_ = []; // new Array(1);\n\t\t\t\t\tbd_ = []; // new Array(1);\n\t\t\t\t\ttl_ = []; // new Array(1);\n\t\t\t\t\ttd_ = []; // new Array(1);\n\t\t\t\t\tbl_[0] = 9; // must be <= 9 for lookahead assumptions\n\t\t\t\t\tbd_[0] = 6; // must be <= 9 for lookahead assumptions\n\n\t\t\t\t\tt = table;\n\t\t\t\t\tt = inftree.inflate_trees_dynamic(257 + (t & 0x1f), 1 + ((t >> 5) & 0x1f), blens, bl_, bd_, tl_, td_, hufts, z);\n\n\t\t\t\t\tif (t != Z_OK) {\n\t\t\t\t\t\tif (t == Z_DATA_ERROR) {\n\t\t\t\t\t\t\tblens = null;\n\t\t\t\t\t\t\tmode = BADBLOCKS;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tr = t;\n\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tcodes.init(bl_[0], bd_[0], hufts, tl_[0], hufts, td_[0]);\n\t\t\t\t\t// }\n\t\t\t\t\tmode = CODES;\n\t\t\t\t/* falls through */\n\t\t\t\tcase CODES:\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\n\t\t\t\t\tif ((r = codes.proc(that, z, r)) != Z_STREAM_END) {\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tr = Z_OK;\n\t\t\t\t\tcodes.free(z);\n\n\t\t\t\t\tp = z.next_in_index;\n\t\t\t\t\tn = z.avail_in;\n\t\t\t\t\tb = that.bitb;\n\t\t\t\t\tk = that.bitk;\n\t\t\t\t\tq = that.write;\n\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\n\t\t\t\t\tif (last === 0) {\n\t\t\t\t\t\tmode = TYPE;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tmode = DRY;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DRY:\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\tr = that.inflate_flush(z, r);\n\t\t\t\t\tq = that.write;\n\t\t\t\t\tm = /* (int) */(q < that.read ? that.read - q - 1 : that.end - q);\n\t\t\t\t\tif (that.read != that.write) {\n\t\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\t\tthat.write = q;\n\t\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\t\t}\n\t\t\t\t\tmode = DONELOCKS;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DONELOCKS:\n\t\t\t\t\tr = Z_STREAM_END;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t\tcase BADBLOCKS:\n\t\t\t\t\tr = Z_DATA_ERROR;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\n\t\t\t\tdefault:\n\t\t\t\t\tr = Z_STREAM_ERROR;\n\n\t\t\t\t\tthat.bitb = b;\n\t\t\t\t\tthat.bitk = k;\n\t\t\t\t\tz.avail_in = n;\n\t\t\t\t\tz.total_in += p - z.next_in_index;\n\t\t\t\t\tz.next_in_index = p;\n\t\t\t\t\tthat.write = q;\n\t\t\t\t\treturn that.inflate_flush(z, r);\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.free = function (z) {\n\t\tthat.reset(z, null);\n\t\tthat.win = null;\n\t\thufts = null;\n\t\t// ZFREE(z, s);\n\t};\n\n\tthat.set_dictionary = function (d, start, n) {\n\t\tthat.win.set(d.subarray(start, start + n), 0);\n\t\tthat.read = that.write = n;\n\t};\n\n\t// Returns true if inflate is currently at the end of a block generated\n\t// by Z_SYNC_FLUSH or Z_FULL_FLUSH.\n\tthat.sync_point = function () {\n\t\treturn mode == LENS ? 1 : 0;\n\t};\n\n}\n\n// Inflate\n\n// preset dictionary flag in zlib header\nconst PRESET_DICT = 0x20;\n\nconst Z_DEFLATED = 8;\n\nconst METHOD = 0; // waiting for method byte\nconst FLAG = 1; // waiting for flag byte\nconst DICT4 = 2; // four dictionary check bytes to go\nconst DICT3 = 3; // three dictionary check bytes to go\nconst DICT2 = 4; // two dictionary check bytes to go\nconst DICT1 = 5; // one dictionary check byte to go\nconst DICT0 = 6; // waiting for inflateSetDictionary\nconst BLOCKS = 7; // decompressing blocks\nconst DONE = 12; // finished check, done\nconst BAD = 13; // got an error--stay here\n\nconst mark = [0, 0, 0xff, 0xff];\n\nfunction Inflate() {\n\tconst that = this;\n\n\tthat.mode = 0; // current inflate mode\n\n\t// mode dependent information\n\tthat.method = 0; // if FLAGS, method byte\n\n\t// if CHECK, check values to compare\n\tthat.was = [0]; // new Array(1); // computed check value\n\tthat.need = 0; // stream check value\n\n\t// if BAD, inflateSync's marker bytes count\n\tthat.marker = 0;\n\n\t// mode independent information\n\tthat.wbits = 0; // log2(win size) (8..15, defaults to 15)\n\n\t// this.blocks; // current inflate_blocks state\n\n\tfunction inflateReset(z) {\n\t\tif (!z || !z.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\n\t\tz.total_in = z.total_out = 0;\n\t\tz.msg = null;\n\t\tz.istate.mode = BLOCKS;\n\t\tz.istate.blocks.reset(z, null);\n\t\treturn Z_OK;\n\t}\n\n\tthat.inflateEnd = function (z) {\n\t\tif (that.blocks)\n\t\t\tthat.blocks.free(z);\n\t\tthat.blocks = null;\n\t\t// ZFREE(z, z->state);\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflateInit = function (z, w) {\n\t\tz.msg = null;\n\t\tthat.blocks = null;\n\n\t\t// set win size\n\t\tif (w < 8 || w > 15) {\n\t\t\tthat.inflateEnd(z);\n\t\t\treturn Z_STREAM_ERROR;\n\t\t}\n\t\tthat.wbits = w;\n\n\t\tz.istate.blocks = new InfBlocks(z, 1 << w);\n\n\t\t// reset state\n\t\tinflateReset(z);\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflate = function (z, f) {\n\t\tlet r;\n\t\tlet b;\n\n\t\tif (!z || !z.istate || !z.next_in)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tf = f == Z_FINISH ? Z_BUF_ERROR : Z_OK;\n\t\tr = Z_BUF_ERROR;\n\t\t// eslint-disable-next-line no-constant-condition\n\t\twhile (true) {\n\t\t\tswitch (istate.mode) {\n\t\t\t\tcase METHOD:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tif (((istate.method = z.read_byte(z.next_in_index++)) & 0xf) != Z_DEFLATED) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"unknown compression method\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif ((istate.method >> 4) + 8 > istate.wbits) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"invalid win size\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tistate.mode = FLAG;\n\t\t\t\t/* falls through */\n\t\t\t\tcase FLAG:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tb = (z.read_byte(z.next_in_index++)) & 0xff;\n\n\t\t\t\t\tif ((((istate.method << 8) + b) % 31) !== 0) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tz.msg = \"incorrect header check\";\n\t\t\t\t\t\tistate.marker = 5; // can't try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ((b & PRESET_DICT) === 0) {\n\t\t\t\t\t\tistate.mode = BLOCKS;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tistate.mode = DICT4;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT4:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need = ((z.read_byte(z.next_in_index++) & 0xff) << 24) & 0xff000000;\n\t\t\t\t\tistate.mode = DICT3;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT3:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += ((z.read_byte(z.next_in_index++) & 0xff) << 16) & 0xff0000;\n\t\t\t\t\tistate.mode = DICT2;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT2:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += ((z.read_byte(z.next_in_index++) & 0xff) << 8) & 0xff00;\n\t\t\t\t\tistate.mode = DICT1;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DICT1:\n\n\t\t\t\t\tif (z.avail_in === 0)\n\t\t\t\t\t\treturn r;\n\t\t\t\t\tr = f;\n\n\t\t\t\t\tz.avail_in--;\n\t\t\t\t\tz.total_in++;\n\t\t\t\t\tistate.need += (z.read_byte(z.next_in_index++) & 0xff);\n\t\t\t\t\tistate.mode = DICT0;\n\t\t\t\t\treturn Z_NEED_DICT;\n\t\t\t\tcase DICT0:\n\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\tz.msg = \"need dictionary\";\n\t\t\t\t\tistate.marker = 0; // can try inflateSync\n\t\t\t\t\treturn Z_STREAM_ERROR;\n\t\t\t\tcase BLOCKS:\n\n\t\t\t\t\tr = istate.blocks.proc(z, r);\n\t\t\t\t\tif (r == Z_DATA_ERROR) {\n\t\t\t\t\t\tistate.mode = BAD;\n\t\t\t\t\t\tistate.marker = 0; // can try inflateSync\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (r == Z_OK) {\n\t\t\t\t\t\tr = f;\n\t\t\t\t\t}\n\t\t\t\t\tif (r != Z_STREAM_END) {\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}\n\t\t\t\t\tr = f;\n\t\t\t\t\tistate.blocks.reset(z, istate.was);\n\t\t\t\t\tistate.mode = DONE;\n\t\t\t\t/* falls through */\n\t\t\t\tcase DONE:\n\t\t\t\t\tz.avail_in = 0;\n\t\t\t\t\treturn Z_STREAM_END;\n\t\t\t\tcase BAD:\n\t\t\t\t\treturn Z_DATA_ERROR;\n\t\t\t\tdefault:\n\t\t\t\t\treturn Z_STREAM_ERROR;\n\t\t\t}\n\t\t}\n\t};\n\n\tthat.inflateSetDictionary = function (z, dictionary, dictLength) {\n\t\tlet index = 0, length = dictLength;\n\t\tif (!z || !z.istate || z.istate.mode != DICT0)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tif (length >= (1 << istate.wbits)) {\n\t\t\tlength = (1 << istate.wbits) - 1;\n\t\t\tindex = dictLength - length;\n\t\t}\n\t\tistate.blocks.set_dictionary(dictionary, index, length);\n\t\tistate.mode = BLOCKS;\n\t\treturn Z_OK;\n\t};\n\n\tthat.inflateSync = function (z) {\n\t\tlet n; // number of bytes to look at\n\t\tlet p; // pointer to bytes\n\t\tlet m; // number of marker bytes found in a row\n\t\tlet r, w; // temporaries to save total_in and total_out\n\n\t\t// set up\n\t\tif (!z || !z.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst istate = z.istate;\n\t\tif (istate.mode != BAD) {\n\t\t\tistate.mode = BAD;\n\t\t\tistate.marker = 0;\n\t\t}\n\t\tif ((n = z.avail_in) === 0)\n\t\t\treturn Z_BUF_ERROR;\n\t\tp = z.next_in_index;\n\t\tm = istate.marker;\n\n\t\t// search\n\t\twhile (n !== 0 && m < 4) {\n\t\t\tif (z.read_byte(p) == mark[m]) {\n\t\t\t\tm++;\n\t\t\t} else if (z.read_byte(p) !== 0) {\n\t\t\t\tm = 0;\n\t\t\t} else {\n\t\t\t\tm = 4 - m;\n\t\t\t}\n\t\t\tp++;\n\t\t\tn--;\n\t\t}\n\n\t\t// restore\n\t\tz.total_in += p - z.next_in_index;\n\t\tz.next_in_index = p;\n\t\tz.avail_in = n;\n\t\tistate.marker = m;\n\n\t\t// return no joy or set up to restart on a new block\n\t\tif (m != 4) {\n\t\t\treturn Z_DATA_ERROR;\n\t\t}\n\t\tr = z.total_in;\n\t\tw = z.total_out;\n\t\tinflateReset(z);\n\t\tz.total_in = r;\n\t\tz.total_out = w;\n\t\tistate.mode = BLOCKS;\n\t\treturn Z_OK;\n\t};\n\n\t// Returns true if inflate is currently at the end of a block generated\n\t// by Z_SYNC_FLUSH or Z_FULL_FLUSH. This function is used by one PPP\n\t// implementation to provide an additional safety check. PPP uses\n\t// Z_SYNC_FLUSH\n\t// but removes the length bytes of the resulting empty stored block. When\n\t// decompressing, PPP checks that at the end of input packet, inflate is\n\t// waiting for these length bytes.\n\tthat.inflateSyncPoint = function (z) {\n\t\tif (!z || !z.istate || !z.istate.blocks)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn z.istate.blocks.sync_point();\n\t};\n}\n\n// ZStream\n\nfunction ZStream() {\n}\n\nZStream.prototype = {\n\tinflateInit(bits) {\n\t\tconst that = this;\n\t\tthat.istate = new Inflate();\n\t\tif (!bits)\n\t\t\tbits = MAX_BITS;\n\t\treturn that.istate.inflateInit(that, bits);\n\t},\n\n\tinflate(f) {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflate(that, f);\n\t},\n\n\tinflateEnd() {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\tconst ret = that.istate.inflateEnd(that);\n\t\tthat.istate = null;\n\t\treturn ret;\n\t},\n\n\tinflateSync() {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflateSync(that);\n\t},\n\tinflateSetDictionary(dictionary, dictLength) {\n\t\tconst that = this;\n\t\tif (!that.istate)\n\t\t\treturn Z_STREAM_ERROR;\n\t\treturn that.istate.inflateSetDictionary(that, dictionary, dictLength);\n\t},\n\tread_byte(start) {\n\t\tconst that = this;\n\t\treturn that.next_in[start];\n\t},\n\tread_buf(start, size) {\n\t\tconst that = this;\n\t\treturn that.next_in.subarray(start, start + size);\n\t}\n};\n\n// Inflater\n\nfunction ZipInflate(options) {\n\tconst that = this;\n\tconst z = new ZStream();\n\tconst bufsize = options && options.chunkSize ? Math.floor(options.chunkSize * 2) : 128 * 1024;\n\tconst flush = Z_NO_FLUSH;\n\tconst buf = new Uint8Array(bufsize);\n\tlet nomoreinput = false;\n\n\tz.inflateInit();\n\tz.next_out = buf;\n\n\tthat.append = function (data, onprogress) {\n\t\tconst buffers = [];\n\t\tlet err, array, lastIndex = 0, bufferIndex = 0, bufferSize = 0;\n\t\tif (data.length === 0)\n\t\t\treturn;\n\t\tz.next_in_index = 0;\n\t\tz.next_in = data;\n\t\tz.avail_in = data.length;\n\t\tdo {\n\t\t\tz.next_out_index = 0;\n\t\t\tz.avail_out = bufsize;\n\t\t\tif ((z.avail_in === 0) && (!nomoreinput)) { // if buffer is empty and more input is available, refill it\n\t\t\t\tz.next_in_index = 0;\n\t\t\t\tnomoreinput = true;\n\t\t\t}\n\t\t\terr = z.inflate(flush);\n\t\t\tif (nomoreinput && (err === Z_BUF_ERROR)) {\n\t\t\t\tif (z.avail_in !== 0)\n\t\t\t\t\tthrow new Error(\"inflating: bad input\");\n\t\t\t} else if (err !== Z_OK && err !== Z_STREAM_END)\n\t\t\t\tthrow new Error(\"inflating: \" + z.msg);\n\t\t\tif ((nomoreinput || err === Z_STREAM_END) && (z.avail_in === data.length))\n\t\t\t\tthrow new Error(\"inflating: bad input\");\n\t\t\tif (z.next_out_index)\n\t\t\t\tif (z.next_out_index === bufsize)\n\t\t\t\t\tbuffers.push(new Uint8Array(buf));\n\t\t\t\telse\n\t\t\t\t\tbuffers.push(buf.slice(0, z.next_out_index));\n\t\t\tbufferSize += z.next_out_index;\n\t\t\tif (onprogress && z.next_in_index > 0 && z.next_in_index != lastIndex) {\n\t\t\t\tonprogress(z.next_in_index);\n\t\t\t\tlastIndex = z.next_in_index;\n\t\t\t}\n\t\t} while (z.avail_in > 0 || z.avail_out === 0);\n\t\tif (buffers.length > 1) {\n\t\t\tarray = new Uint8Array(bufferSize);\n\t\t\tbuffers.forEach(function (chunk) {\n\t\t\t\tarray.set(chunk, bufferIndex);\n\t\t\t\tbufferIndex += chunk.length;\n\t\t\t});\n\t\t} else {\n\t\t\tarray = buffers[0] || new Uint8Array();\n\t\t}\n\t\treturn array;\n\t};\n\tthat.flush = function () {\n\t\tz.inflateEnd();\n\t};\n}\n\nexport {\n\tZipInflate as Inflate\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst MAX_32_BITS = 0xffffffff;\nconst MAX_16_BITS = 0xffff;\nconst COMPRESSION_METHOD_DEFLATE = 0x08;\nconst COMPRESSION_METHOD_STORE = 0x00;\nconst COMPRESSION_METHOD_AES = 0x63;\n\nconst LOCAL_FILE_HEADER_SIGNATURE = 0x04034b50;\nconst SPLIT_ZIP_FILE_SIGNATURE = 0x08074b50;\nconst DATA_DESCRIPTOR_RECORD_SIGNATURE = SPLIT_ZIP_FILE_SIGNATURE;\nconst CENTRAL_FILE_HEADER_SIGNATURE = 0x02014b50;\nconst END_OF_CENTRAL_DIR_SIGNATURE = 0x06054b50;\nconst ZIP64_END_OF_CENTRAL_DIR_SIGNATURE = 0x06064b50;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE = 0x07064b50;\nconst END_OF_CENTRAL_DIR_LENGTH = 22;\nconst ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH = 20;\nconst ZIP64_END_OF_CENTRAL_DIR_LENGTH = 56;\nconst ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH = END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\nconst EXTRAFIELD_TYPE_ZIP64 = 0x0001;\nconst EXTRAFIELD_TYPE_AES = 0x9901;\nconst EXTRAFIELD_TYPE_NTFS = 0x000a;\nconst EXTRAFIELD_TYPE_NTFS_TAG1 = 0x0001;\nconst EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP = 0x5455;\nconst EXTRAFIELD_TYPE_UNICODE_PATH = 0x7075;\nconst EXTRAFIELD_TYPE_UNICODE_COMMENT = 0x6375;\n\nconst BITFLAG_ENCRYPTED = 0x01;\nconst BITFLAG_LEVEL = 0x06;\nconst BITFLAG_DATA_DESCRIPTOR = 0x0008;\nconst BITFLAG_LANG_ENCODING_FLAG = 0x0800;\nconst FILE_ATTR_MSDOS_DIR_MASK = 0x10;\n\nconst VERSION_DEFLATE = 0x14;\nconst VERSION_ZIP64 = 0x2D;\nconst VERSION_AES = 0x33;\n\nconst DIRECTORY_SIGNATURE = \"/\";\n\nconst MAX_DATE = new Date(2107, 11, 31);\nconst MIN_DATE = new Date(1980, 0, 1);\n\nconst UNDEFINED_VALUE = undefined;\nconst UNDEFINED_TYPE = \"undefined\";\nconst FUNCTION_TYPE = \"function\";\n\nexport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tVERSION_DEFLATE,\n\tVERSION_ZIP64,\n\tVERSION_AES,\n\tDIRECTORY_SIGNATURE,\n\tMIN_DATE,\n\tMAX_DATE,\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE,\n\tFUNCTION_TYPE\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n\nexport {\n\tStreamAdapter\n};\n\nclass StreamAdapter {\n\n\tconstructor(Codec) {\n\t\treturn class extends TransformStream {\n\t\t\tconstructor(_format, options) {\n\t\t\t\tconst codec = new Codec(options);\n\t\t\t\tsuper({\n\t\t\t\t\ttransform(chunk, controller) {\n\t\t\t\t\t\tcontroller.enqueue(codec.append(chunk));\n\t\t\t\t\t},\n\t\t\t\t\tflush(controller) {\n\t\t\t\t\t\tconst chunk = codec.flush();\n\t\t\t\t\t\tif (chunk) {\n\t\t\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global navigator, CompressionStream, DecompressionStream */\n\nimport {\n\tUNDEFINED_VALUE,\n\tUNDEFINED_TYPE\n} from \"./constants.js\";\nimport { StreamAdapter } from \"./streams/stream-adapter.js\";\n\nconst MINIMUM_CHUNK_SIZE = 64;\nlet maxWorkers = 2;\ntry {\n\tif (typeof navigator != UNDEFINED_TYPE && navigator.hardwareConcurrency) {\n\t\tmaxWorkers = navigator.hardwareConcurrency;\n\t}\n} catch (_error) {\n\t// ignored\n}\nconst DEFAULT_CONFIGURATION = {\n\tchunkSize: 512 * 1024,\n\tmaxWorkers,\n\tterminateWorkerTimeout: 5000,\n\tuseWebWorkers: true,\n\tuseCompressionStream: true,\n\tworkerScripts: UNDEFINED_VALUE,\n\tCompressionStreamNative: typeof CompressionStream != UNDEFINED_TYPE && CompressionStream,\n\tDecompressionStreamNative: typeof DecompressionStream != UNDEFINED_TYPE && DecompressionStream\n};\n\nconst config = Object.assign({}, DEFAULT_CONFIGURATION);\n\nexport {\n\tconfigure,\n\tgetConfiguration,\n\tgetChunkSize\n};\n\nfunction getConfiguration() {\n\treturn config;\n}\n\nfunction getChunkSize(config) {\n\treturn Math.max(config.chunkSize, MINIMUM_CHUNK_SIZE);\n}\n\nfunction configure(configuration) {\n\tconst {\n\t\tbaseURL,\n\t\tchunkSize,\n\t\tmaxWorkers,\n\t\tterminateWorkerTimeout,\n\t\tuseCompressionStream,\n\t\tuseWebWorkers,\n\t\tDeflate,\n\t\tInflate,\n\t\tCompressionStream,\n\t\tDecompressionStream,\n\t\tworkerScripts\n\t} = configuration;\n\tsetIfDefined(\"baseURL\", baseURL);\n\tsetIfDefined(\"chunkSize\", chunkSize);\n\tsetIfDefined(\"maxWorkers\", maxWorkers);\n\tsetIfDefined(\"terminateWorkerTimeout\", terminateWorkerTimeout);\n\tsetIfDefined(\"useCompressionStream\", useCompressionStream);\n\tsetIfDefined(\"useWebWorkers\", useWebWorkers);\n\tif (Deflate) {\n\t\tconfig.CompressionStream = new StreamAdapter(Deflate);\n\t}\n\tif (Inflate) {\n\t\tconfig.DecompressionStream = new StreamAdapter(Inflate);\n\t}\n\tsetIfDefined(\"CompressionStream\", CompressionStream);\n\tsetIfDefined(\"DecompressionStream\", DecompressionStream);\n\tif (workerScripts !== UNDEFINED_VALUE) {\n\t\tconst { deflate, inflate } = workerScripts;\n\t\tif (deflate || inflate) {\n\t\t\tif (!config.workerScripts) {\n\t\t\t\tconfig.workerScripts = {};\n\t\t\t}\n\t\t}\n\t\tif (deflate) {\n\t\t\tif (!Array.isArray(deflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.deflate must be an array\");\n\t\t\t}\n\t\t\tconfig.workerScripts.deflate = deflate;\n\t\t}\n\t\tif (inflate) {\n\t\t\tif (!Array.isArray(inflate)) {\n\t\t\t\tthrow new Error(\"workerScripts.inflate must be an array\");\n\t\t\t}\n\t\t\tconfig.workerScripts.inflate = inflate;\n\t\t}\n\t}\n}\n\nfunction setIfDefined(propertyName, propertyValue) {\n\tif (propertyValue !== UNDEFINED_VALUE) {\n\t\tconfig[propertyName] = propertyValue;\n\t}\n}\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst mimeTypes = {};\n\nexport {\n\tmimeTypes,\n\tgetMimeType\n};\n\nfunction getMimeType() {\n\treturn \"application/octet-stream\";\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// deno-lint-ignore-file no-prototype-builtins\n\nimport { getMimeType as getDefaultMimeType } from \"./default-mime-type.js\";\n\nconst table = {\n\t\"application\": {\n\t\t\"andrew-inset\": \"ez\",\n\t\t\"annodex\": \"anx\",\n\t\t\"atom+xml\": \"atom\",\n\t\t\"atomcat+xml\": \"atomcat\",\n\t\t\"atomserv+xml\": \"atomsrv\",\n\t\t\"bbolin\": \"lin\",\n\t\t\"cap\": [\"cap\", \"pcap\"],\n\t\t\"cu-seeme\": \"cu\",\n\t\t\"davmount+xml\": \"davmount\",\n\t\t\"dsptype\": \"tsp\",\n\t\t\"ecmascript\": [\"es\", \"ecma\"],\n\t\t\"futuresplash\": \"spl\",\n\t\t\"hta\": \"hta\",\n\t\t\"java-archive\": \"jar\",\n\t\t\"java-serialized-object\": \"ser\",\n\t\t\"java-vm\": \"class\",\n\t\t\"javascript\": \"js\",\n\t\t\"m3g\": \"m3g\",\n\t\t\"mac-binhex40\": \"hqx\",\n\t\t\"mathematica\": [\"nb\", \"ma\", \"mb\"],\n\t\t\"msaccess\": \"mdb\",\n\t\t\"msword\": [\"doc\", \"dot\"],\n\t\t\"mxf\": \"mxf\",\n\t\t\"oda\": \"oda\",\n\t\t\"ogg\": \"ogx\",\n\t\t\"pdf\": \"pdf\",\n\t\t\"pgp-keys\": \"key\",\n\t\t\"pgp-signature\": [\"asc\", \"sig\"],\n\t\t\"pics-rules\": \"prf\",\n\t\t\"postscript\": [\"ps\", \"ai\", \"eps\", \"epsi\", \"epsf\", \"eps2\", \"eps3\"],\n\t\t\"rar\": \"rar\",\n\t\t\"rdf+xml\": \"rdf\",\n\t\t\"rss+xml\": \"rss\",\n\t\t\"rtf\": \"rtf\",\n\t\t\"smil\": [\"smi\", \"smil\"],\n\t\t\"xhtml+xml\": [\"xhtml\", \"xht\"],\n\t\t\"xml\": [\"xml\", \"xsl\", \"xsd\"],\n\t\t\"xspf+xml\": \"xspf\",\n\t\t\"zip\": \"zip\",\n\t\t\"vnd.android.package-archive\": \"apk\",\n\t\t\"vnd.cinderella\": \"cdy\",\n\t\t\"vnd.google-earth.kml+xml\": \"kml\",\n\t\t\"vnd.google-earth.kmz\": \"kmz\",\n\t\t\"vnd.mozilla.xul+xml\": \"xul\",\n\t\t\"vnd.ms-excel\": [\"xls\", \"xlb\", \"xlt\", \"xlm\", \"xla\", \"xlc\", \"xlw\"],\n\t\t\"vnd.ms-pki.seccat\": \"cat\",\n\t\t\"vnd.ms-pki.stl\": \"stl\",\n\t\t\"vnd.ms-powerpoint\": [\"ppt\", \"pps\", \"pot\"],\n\t\t\"vnd.oasis.opendocument.chart\": \"odc\",\n\t\t\"vnd.oasis.opendocument.database\": \"odb\",\n\t\t\"vnd.oasis.opendocument.formula\": \"odf\",\n\t\t\"vnd.oasis.opendocument.graphics\": \"odg\",\n\t\t\"vnd.oasis.opendocument.graphics-template\": \"otg\",\n\t\t\"vnd.oasis.opendocument.image\": \"odi\",\n\t\t\"vnd.oasis.opendocument.presentation\": \"odp\",\n\t\t\"vnd.oasis.opendocument.presentation-template\": \"otp\",\n\t\t\"vnd.oasis.opendocument.spreadsheet\": \"ods\",\n\t\t\"vnd.oasis.opendocument.spreadsheet-template\": \"ots\",\n\t\t\"vnd.oasis.opendocument.text\": \"odt\",\n\t\t\"vnd.oasis.opendocument.text-master\": \"odm\",\n\t\t\"vnd.oasis.opendocument.text-template\": \"ott\",\n\t\t\"vnd.oasis.opendocument.text-web\": \"oth\",\n\t\t\"vnd.openxmlformats-officedocument.spreadsheetml.sheet\": \"xlsx\",\n\t\t\"vnd.openxmlformats-officedocument.spreadsheetml.template\": \"xltx\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.presentation\": \"pptx\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.slideshow\": \"ppsx\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.template\": \"potx\",\n\t\t\"vnd.openxmlformats-officedocument.wordprocessingml.document\": \"docx\",\n\t\t\"vnd.openxmlformats-officedocument.wordprocessingml.template\": \"dotx\",\n\t\t\"vnd.smaf\": \"mmf\",\n\t\t\"vnd.stardivision.calc\": \"sdc\",\n\t\t\"vnd.stardivision.chart\": \"sds\",\n\t\t\"vnd.stardivision.draw\": \"sda\",\n\t\t\"vnd.stardivision.impress\": \"sdd\",\n\t\t\"vnd.stardivision.math\": [\"sdf\", \"smf\"],\n\t\t\"vnd.stardivision.writer\": [\"sdw\", \"vor\"],\n\t\t\"vnd.stardivision.writer-global\": \"sgl\",\n\t\t\"vnd.sun.xml.calc\": \"sxc\",\n\t\t\"vnd.sun.xml.calc.template\": \"stc\",\n\t\t\"vnd.sun.xml.draw\": \"sxd\",\n\t\t\"vnd.sun.xml.draw.template\": \"std\",\n\t\t\"vnd.sun.xml.impress\": \"sxi\",\n\t\t\"vnd.sun.xml.impress.template\": \"sti\",\n\t\t\"vnd.sun.xml.math\": \"sxm\",\n\t\t\"vnd.sun.xml.writer\": \"sxw\",\n\t\t\"vnd.sun.xml.writer.global\": \"sxg\",\n\t\t\"vnd.sun.xml.writer.template\": \"stw\",\n\t\t\"vnd.symbian.install\": [\"sis\", \"sisx\"],\n\t\t\"vnd.visio\": [\"vsd\", \"vst\", \"vss\", \"vsw\"],\n\t\t\"vnd.wap.wbxml\": \"wbxml\",\n\t\t\"vnd.wap.wmlc\": \"wmlc\",\n\t\t\"vnd.wap.wmlscriptc\": \"wmlsc\",\n\t\t\"vnd.wordperfect\": \"wpd\",\n\t\t\"vnd.wordperfect5.1\": \"wp5\",\n\t\t\"x-123\": \"wk\",\n\t\t\"x-7z-compressed\": \"7z\",\n\t\t\"x-abiword\": \"abw\",\n\t\t\"x-apple-diskimage\": \"dmg\",\n\t\t\"x-bcpio\": \"bcpio\",\n\t\t\"x-bittorrent\": \"torrent\",\n\t\t\"x-cbr\": [\"cbr\", \"cba\", \"cbt\", \"cb7\"],\n\t\t\"x-cbz\": \"cbz\",\n\t\t\"x-cdf\": [\"cdf\", \"cda\"],\n\t\t\"x-cdlink\": \"vcd\",\n\t\t\"x-chess-pgn\": \"pgn\",\n\t\t\"x-cpio\": \"cpio\",\n\t\t\"x-csh\": \"csh\",\n\t\t\"x-debian-package\": [\"deb\", \"udeb\"],\n\t\t\"x-director\": [\"dcr\", \"dir\", \"dxr\", \"cst\", \"cct\", \"cxt\", \"w3d\", \"fgd\", \"swa\"],\n\t\t\"x-dms\": \"dms\",\n\t\t\"x-doom\": \"wad\",\n\t\t\"x-dvi\": \"dvi\",\n\t\t\"x-httpd-eruby\": \"rhtml\",\n\t\t\"x-font\": \"pcf.Z\",\n\t\t\"x-freemind\": \"mm\",\n\t\t\"x-gnumeric\": \"gnumeric\",\n\t\t\"x-go-sgf\": \"sgf\",\n\t\t\"x-graphing-calculator\": \"gcf\",\n\t\t\"x-gtar\": [\"gtar\", \"taz\"],\n\t\t\"x-hdf\": \"hdf\",\n\t\t\"x-httpd-php\": [\"phtml\", \"pht\", \"php\"],\n\t\t\"x-httpd-php-source\": \"phps\",\n\t\t\"x-httpd-php3\": \"php3\",\n\t\t\"x-httpd-php3-preprocessed\": \"php3p\",\n\t\t\"x-httpd-php4\": \"php4\",\n\t\t\"x-httpd-php5\": \"php5\",\n\t\t\"x-ica\": \"ica\",\n\t\t\"x-info\": \"info\",\n\t\t\"x-internet-signup\": [\"ins\", \"isp\"],\n\t\t\"x-iphone\": \"iii\",\n\t\t\"x-iso9660-image\": \"iso\",\n\t\t\"x-java-jnlp-file\": \"jnlp\",\n\t\t\"x-jmol\": \"jmz\",\n\t\t\"x-killustrator\": \"kil\",\n\t\t\"x-koan\": [\"skp\", \"skd\", \"skt\", \"skm\"],\n\t\t\"x-kpresenter\": [\"kpr\", \"kpt\"],\n\t\t\"x-kword\": [\"kwd\", \"kwt\"],\n\t\t\"x-latex\": \"latex\",\n\t\t\"x-lha\": \"lha\",\n\t\t\"x-lyx\": \"lyx\",\n\t\t\"x-lzh\": \"lzh\",\n\t\t\"x-lzx\": \"lzx\",\n\t\t\"x-maker\": [\"frm\", \"maker\", \"frame\", \"fm\", \"fb\", \"book\", \"fbdoc\"],\n\t\t\"x-ms-wmd\": \"wmd\",\n\t\t\"x-ms-wmz\": \"wmz\",\n\t\t\"x-msdos-program\": [\"com\", \"exe\", \"bat\", \"dll\"],\n\t\t\"x-msi\": \"msi\",\n\t\t\"x-netcdf\": [\"nc\", \"cdf\"],\n\t\t\"x-ns-proxy-autoconfig\": [\"pac\", \"dat\"],\n\t\t\"x-nwc\": \"nwc\",\n\t\t\"x-object\": \"o\",\n\t\t\"x-oz-application\": \"oza\",\n\t\t\"x-pkcs7-certreqresp\": \"p7r\",\n\t\t\"x-python-code\": [\"pyc\", \"pyo\"],\n\t\t\"x-qgis\": [\"qgs\", \"shp\", \"shx\"],\n\t\t\"x-quicktimeplayer\": \"qtl\",\n\t\t\"x-redhat-package-manager\": \"rpm\",\n\t\t\"x-ruby\": \"rb\",\n\t\t\"x-sh\": \"sh\",\n\t\t\"x-shar\": \"shar\",\n\t\t\"x-shockwave-flash\": [\"swf\", \"swfl\"],\n\t\t\"x-silverlight\": \"scr\",\n\t\t\"x-stuffit\": \"sit\",\n\t\t\"x-sv4cpio\": \"sv4cpio\",\n\t\t\"x-sv4crc\": \"sv4crc\",\n\t\t\"x-tar\": \"tar\",\n\t\t\"x-tcl\": \"tcl\",\n\t\t\"x-tex-gf\": \"gf\",\n\t\t\"x-tex-pk\": \"pk\",\n\t\t\"x-texinfo\": [\"texinfo\", \"texi\"],\n\t\t\"x-trash\": [\"~\", \"%\", \"bak\", \"old\", \"sik\"],\n\t\t\"x-troff\": [\"t\", \"tr\", \"roff\"],\n\t\t\"x-troff-man\": \"man\",\n\t\t\"x-troff-me\": \"me\",\n\t\t\"x-troff-ms\": \"ms\",\n\t\t\"x-ustar\": \"ustar\",\n\t\t\"x-wais-source\": \"src\",\n\t\t\"x-wingz\": \"wz\",\n\t\t\"x-x509-ca-cert\": [\"crt\", \"der\", \"cer\"],\n\t\t\"x-xcf\": \"xcf\",\n\t\t\"x-xfig\": \"fig\",\n\t\t\"x-xpinstall\": \"xpi\",\n\t\t\"applixware\": \"aw\",\n\t\t\"atomsvc+xml\": \"atomsvc\",\n\t\t\"ccxml+xml\": \"ccxml\",\n\t\t\"cdmi-capability\": \"cdmia\",\n\t\t\"cdmi-container\": \"cdmic\",\n\t\t\"cdmi-domain\": \"cdmid\",\n\t\t\"cdmi-object\": \"cdmio\",\n\t\t\"cdmi-queue\": \"cdmiq\",\n\t\t\"docbook+xml\": \"dbk\",\n\t\t\"dssc+der\": \"dssc\",\n\t\t\"dssc+xml\": \"xdssc\",\n\t\t\"emma+xml\": \"emma\",\n\t\t\"epub+zip\": \"epub\",\n\t\t\"exi\": \"exi\",\n\t\t\"font-tdpfr\": \"pfr\",\n\t\t\"gml+xml\": \"gml\",\n\t\t\"gpx+xml\": \"gpx\",\n\t\t\"gxf\": \"gxf\",\n\t\t\"hyperstudio\": \"stk\",\n\t\t\"inkml+xml\": [\"ink\", \"inkml\"],\n\t\t\"ipfix\": \"ipfix\",\n\t\t\"json\": \"json\",\n\t\t\"jsonml+json\": \"jsonml\",\n\t\t\"lost+xml\": \"lostxml\",\n\t\t\"mads+xml\": \"mads\",\n\t\t\"marc\": \"mrc\",\n\t\t\"marcxml+xml\": \"mrcx\",\n\t\t\"mathml+xml\": \"mathml\",\n\t\t\"mbox\": \"mbox\",\n\t\t\"mediaservercontrol+xml\": \"mscml\",\n\t\t\"metalink+xml\": \"metalink\",\n\t\t\"metalink4+xml\": \"meta4\",\n\t\t\"mets+xml\": \"mets\",\n\t\t\"mods+xml\": \"mods\",\n\t\t\"mp21\": [\"m21\", \"mp21\"],\n\t\t\"mp4\": \"mp4s\",\n\t\t\"oebps-package+xml\": \"opf\",\n\t\t\"omdoc+xml\": \"omdoc\",\n\t\t\"onenote\": [\"onetoc\", \"onetoc2\", \"onetmp\", \"onepkg\"],\n\t\t\"oxps\": \"oxps\",\n\t\t\"patch-ops-error+xml\": \"xer\",\n\t\t\"pgp-encrypted\": \"pgp\",\n\t\t\"pkcs10\": \"p10\",\n\t\t\"pkcs7-mime\": [\"p7m\", \"p7c\"],\n\t\t\"pkcs7-signature\": \"p7s\",\n\t\t\"pkcs8\": \"p8\",\n\t\t\"pkix-attr-cert\": \"ac\",\n\t\t\"pkix-crl\": \"crl\",\n\t\t\"pkix-pkipath\": \"pkipath\",\n\t\t\"pkixcmp\": \"pki\",\n\t\t\"pls+xml\": \"pls\",\n\t\t\"prs.cww\": \"cww\",\n\t\t\"pskc+xml\": \"pskcxml\",\n\t\t\"reginfo+xml\": \"rif\",\n\t\t\"relax-ng-compact-syntax\": \"rnc\",\n\t\t\"resource-lists+xml\": \"rl\",\n\t\t\"resource-lists-diff+xml\": \"rld\",\n\t\t\"rls-services+xml\": \"rs\",\n\t\t\"rpki-ghostbusters\": \"gbr\",\n\t\t\"rpki-manifest\": \"mft\",\n\t\t\"rpki-roa\": \"roa\",\n\t\t\"rsd+xml\": \"rsd\",\n\t\t\"sbml+xml\": \"sbml\",\n\t\t\"scvp-cv-request\": \"scq\",\n\t\t\"scvp-cv-response\": \"scs\",\n\t\t\"scvp-vp-request\": \"spq\",\n\t\t\"scvp-vp-response\": \"spp\",\n\t\t\"sdp\": \"sdp\",\n\t\t\"set-payment-initiation\": \"setpay\",\n\t\t\"set-registration-initiation\": \"setreg\",\n\t\t\"shf+xml\": \"shf\",\n\t\t\"sparql-query\": \"rq\",\n\t\t\"sparql-results+xml\": \"srx\",\n\t\t\"srgs\": \"gram\",\n\t\t\"srgs+xml\": \"grxml\",\n\t\t\"sru+xml\": \"sru\",\n\t\t\"ssdl+xml\": \"ssdl\",\n\t\t\"ssml+xml\": \"ssml\",\n\t\t\"tei+xml\": [\"tei\", \"teicorpus\"],\n\t\t\"thraud+xml\": \"tfi\",\n\t\t\"timestamped-data\": \"tsd\",\n\t\t\"vnd.3gpp.pic-bw-large\": \"plb\",\n\t\t\"vnd.3gpp.pic-bw-small\": \"psb\",\n\t\t\"vnd.3gpp.pic-bw-var\": \"pvb\",\n\t\t\"vnd.3gpp2.tcap\": \"tcap\",\n\t\t\"vnd.3m.post-it-notes\": \"pwn\",\n\t\t\"vnd.accpac.simply.aso\": \"aso\",\n\t\t\"vnd.accpac.simply.imp\": \"imp\",\n\t\t\"vnd.acucobol\": \"acu\",\n\t\t\"vnd.acucorp\": [\"atc\", \"acutc\"],\n\t\t\"vnd.adobe.air-application-installer-package+zip\": \"air\",\n\t\t\"vnd.adobe.formscentral.fcdt\": \"fcdt\",\n\t\t\"vnd.adobe.fxp\": [\"fxp\", \"fxpl\"],\n\t\t\"vnd.adobe.xdp+xml\": \"xdp\",\n\t\t\"vnd.adobe.xfdf\": \"xfdf\",\n\t\t\"vnd.ahead.space\": \"ahead\",\n\t\t\"vnd.airzip.filesecure.azf\": \"azf\",\n\t\t\"vnd.airzip.filesecure.azs\": \"azs\",\n\t\t\"vnd.amazon.ebook\": \"azw\",\n\t\t\"vnd.americandynamics.acc\": \"acc\",\n\t\t\"vnd.amiga.ami\": \"ami\",\n\t\t\"vnd.anser-web-certificate-issue-initiation\": \"cii\",\n\t\t\"vnd.anser-web-funds-transfer-initiation\": \"fti\",\n\t\t\"vnd.antix.game-component\": \"atx\",\n\t\t\"vnd.apple.installer+xml\": \"mpkg\",\n\t\t\"vnd.apple.mpegurl\": \"m3u8\",\n\t\t\"vnd.aristanetworks.swi\": \"swi\",\n\t\t\"vnd.astraea-software.iota\": \"iota\",\n\t\t\"vnd.audiograph\": \"aep\",\n\t\t\"vnd.blueice.multipass\": \"mpm\",\n\t\t\"vnd.bmi\": \"bmi\",\n\t\t\"vnd.businessobjects\": \"rep\",\n\t\t\"vnd.chemdraw+xml\": \"cdxml\",\n\t\t\"vnd.chipnuts.karaoke-mmd\": \"mmd\",\n\t\t\"vnd.claymore\": \"cla\",\n\t\t\"vnd.cloanto.rp9\": \"rp9\",\n\t\t\"vnd.clonk.c4group\": [\"c4g\", \"c4d\", \"c4f\", \"c4p\", \"c4u\"],\n\t\t\"vnd.cluetrust.cartomobile-config\": \"c11amc\",\n\t\t\"vnd.cluetrust.cartomobile-config-pkg\": \"c11amz\",\n\t\t\"vnd.commonspace\": \"csp\",\n\t\t\"vnd.contact.cmsg\": \"cdbcmsg\",\n\t\t\"vnd.cosmocaller\": \"cmc\",\n\t\t\"vnd.crick.clicker\": \"clkx\",\n\t\t\"vnd.crick.clicker.keyboard\": \"clkk\",\n\t\t\"vnd.crick.clicker.palette\": \"clkp\",\n\t\t\"vnd.crick.clicker.template\": \"clkt\",\n\t\t\"vnd.crick.clicker.wordbank\": \"clkw\",\n\t\t\"vnd.criticaltools.wbs+xml\": \"wbs\",\n\t\t\"vnd.ctc-posml\": \"pml\",\n\t\t\"vnd.cups-ppd\": \"ppd\",\n\t\t\"vnd.curl.car\": \"car\",\n\t\t\"vnd.curl.pcurl\": \"pcurl\",\n\t\t\"vnd.dart\": \"dart\",\n\t\t\"vnd.data-vision.rdz\": \"rdz\",\n\t\t\"vnd.dece.data\": [\"uvf\", \"uvvf\", \"uvd\", \"uvvd\"],\n\t\t\"vnd.dece.ttml+xml\": [\"uvt\", \"uvvt\"],\n\t\t\"vnd.dece.unspecified\": [\"uvx\", \"uvvx\"],\n\t\t\"vnd.dece.zip\": [\"uvz\", \"uvvz\"],\n\t\t\"vnd.denovo.fcselayout-link\": \"fe_launch\",\n\t\t\"vnd.dna\": \"dna\",\n\t\t\"vnd.dolby.mlp\": \"mlp\",\n\t\t\"vnd.dpgraph\": \"dpg\",\n\t\t\"vnd.dreamfactory\": \"dfac\",\n\t\t\"vnd.ds-keypoint\": \"kpxx\",\n\t\t\"vnd.dvb.ait\": \"ait\",\n\t\t\"vnd.dvb.service\": \"svc\",\n\t\t\"vnd.dynageo\": \"geo\",\n\t\t\"vnd.ecowin.chart\": \"mag\",\n\t\t\"vnd.enliven\": \"nml\",\n\t\t\"vnd.epson.esf\": \"esf\",\n\t\t\"vnd.epson.msf\": \"msf\",\n\t\t\"vnd.epson.quickanime\": \"qam\",\n\t\t\"vnd.epson.salt\": \"slt\",\n\t\t\"vnd.epson.ssf\": \"ssf\",\n\t\t\"vnd.eszigno3+xml\": [\"es3\", \"et3\"],\n\t\t\"vnd.ezpix-album\": \"ez2\",\n\t\t\"vnd.ezpix-package\": \"ez3\",\n\t\t\"vnd.fdf\": \"fdf\",\n\t\t\"vnd.fdsn.mseed\": \"mseed\",\n\t\t\"vnd.fdsn.seed\": [\"seed\", \"dataless\"],\n\t\t\"vnd.flographit\": \"gph\",\n\t\t\"vnd.fluxtime.clip\": \"ftc\",\n\t\t\"vnd.framemaker\": [\"fm\", \"frame\", \"maker\", \"book\"],\n\t\t\"vnd.frogans.fnc\": \"fnc\",\n\t\t\"vnd.frogans.ltf\": \"ltf\",\n\t\t\"vnd.fsc.weblaunch\": \"fsc\",\n\t\t\"vnd.fujitsu.oasys\": \"oas\",\n\t\t\"vnd.fujitsu.oasys2\": \"oa2\",\n\t\t\"vnd.fujitsu.oasys3\": \"oa3\",\n\t\t\"vnd.fujitsu.oasysgp\": \"fg5\",\n\t\t\"vnd.fujitsu.oasysprs\": \"bh2\",\n\t\t\"vnd.fujixerox.ddd\": \"ddd\",\n\t\t\"vnd.fujixerox.docuworks\": \"xdw\",\n\t\t\"vnd.fujixerox.docuworks.binder\": \"xbd\",\n\t\t\"vnd.fuzzysheet\": \"fzs\",\n\t\t\"vnd.genomatix.tuxedo\": \"txd\",\n\t\t\"vnd.geogebra.file\": \"ggb\",\n\t\t\"vnd.geogebra.tool\": \"ggt\",\n\t\t\"vnd.geometry-explorer\": [\"gex\", \"gre\"],\n\t\t\"vnd.geonext\": \"gxt\",\n\t\t\"vnd.geoplan\": \"g2w\",\n\t\t\"vnd.geospace\": \"g3w\",\n\t\t\"vnd.gmx\": \"gmx\",\n\t\t\"vnd.grafeq\": [\"gqf\", \"gqs\"],\n\t\t\"vnd.groove-account\": \"gac\",\n\t\t\"vnd.groove-help\": \"ghf\",\n\t\t\"vnd.groove-identity-message\": \"gim\",\n\t\t\"vnd.groove-injector\": \"grv\",\n\t\t\"vnd.groove-tool-message\": \"gtm\",\n\t\t\"vnd.groove-tool-template\": \"tpl\",\n\t\t\"vnd.groove-vcard\": \"vcg\",\n\t\t\"vnd.hal+xml\": \"hal\",\n\t\t\"vnd.handheld-entertainment+xml\": \"zmm\",\n\t\t\"vnd.hbci\": \"hbci\",\n\t\t\"vnd.hhe.lesson-player\": \"les\",\n\t\t\"vnd.hp-hpgl\": \"hpgl\",\n\t\t\"vnd.hp-hpid\": \"hpid\",\n\t\t\"vnd.hp-hps\": \"hps\",\n\t\t\"vnd.hp-jlyt\": \"jlt\",\n\t\t\"vnd.hp-pcl\": \"pcl\",\n\t\t\"vnd.hp-pclxl\": \"pclxl\",\n\t\t\"vnd.hydrostatix.sof-data\": \"sfd-hdstx\",\n\t\t\"vnd.ibm.minipay\": \"mpy\",\n\t\t\"vnd.ibm.modcap\": [\"afp\", \"listafp\", \"list3820\"],\n\t\t\"vnd.ibm.rights-management\": \"irm\",\n\t\t\"vnd.ibm.secure-container\": \"sc\",\n\t\t\"vnd.iccprofile\": [\"icc\", \"icm\"],\n\t\t\"vnd.igloader\": \"igl\",\n\t\t\"vnd.immervision-ivp\": \"ivp\",\n\t\t\"vnd.immervision-ivu\": \"ivu\",\n\t\t\"vnd.insors.igm\": \"igm\",\n\t\t\"vnd.intercon.formnet\": [\"xpw\", \"xpx\"],\n\t\t\"vnd.intergeo\": \"i2g\",\n\t\t\"vnd.intu.qbo\": \"qbo\",\n\t\t\"vnd.intu.qfx\": \"qfx\",\n\t\t\"vnd.ipunplugged.rcprofile\": \"rcprofile\",\n\t\t\"vnd.irepository.package+xml\": \"irp\",\n\t\t\"vnd.is-xpr\": \"xpr\",\n\t\t\"vnd.isac.fcs\": \"fcs\",\n\t\t\"vnd.jam\": \"jam\",\n\t\t\"vnd.jcp.javame.midlet-rms\": \"rms\",\n\t\t\"vnd.jisp\": \"jisp\",\n\t\t\"vnd.joost.joda-archive\": \"joda\",\n\t\t\"vnd.kahootz\": [\"ktz\", \"ktr\"],\n\t\t\"vnd.kde.karbon\": \"karbon\",\n\t\t\"vnd.kde.kchart\": \"chrt\",\n\t\t\"vnd.kde.kformula\": \"kfo\",\n\t\t\"vnd.kde.kivio\": \"flw\",\n\t\t\"vnd.kde.kontour\": \"kon\",\n\t\t\"vnd.kde.kpresenter\": [\"kpr\", \"kpt\"],\n\t\t\"vnd.kde.kspread\": \"ksp\",\n\t\t\"vnd.kde.kword\": [\"kwd\", \"kwt\"],\n\t\t\"vnd.kenameaapp\": \"htke\",\n\t\t\"vnd.kidspiration\": \"kia\",\n\t\t\"vnd.kinar\": [\"kne\", \"knp\"],\n\t\t\"vnd.koan\": [\"skp\", \"skd\", \"skt\", \"skm\"],\n\t\t\"vnd.kodak-descriptor\": \"sse\",\n\t\t\"vnd.las.las+xml\": \"lasxml\",\n\t\t\"vnd.llamagraphics.life-balance.desktop\": \"lbd\",\n\t\t\"vnd.llamagraphics.life-balance.exchange+xml\": \"lbe\",\n\t\t\"vnd.lotus-1-2-3\": \"123\",\n\t\t\"vnd.lotus-approach\": \"apr\",\n\t\t\"vnd.lotus-freelance\": \"pre\",\n\t\t\"vnd.lotus-notes\": \"nsf\",\n\t\t\"vnd.lotus-organizer\": \"org\",\n\t\t\"vnd.lotus-screencam\": \"scm\",\n\t\t\"vnd.lotus-wordpro\": \"lwp\",\n\t\t\"vnd.macports.portpkg\": \"portpkg\",\n\t\t\"vnd.mcd\": \"mcd\",\n\t\t\"vnd.medcalcdata\": \"mc1\",\n\t\t\"vnd.mediastation.cdkey\": \"cdkey\",\n\t\t\"vnd.mfer\": \"mwf\",\n\t\t\"vnd.mfmp\": \"mfm\",\n\t\t\"vnd.micrografx.flo\": \"flo\",\n\t\t\"vnd.micrografx.igx\": \"igx\",\n\t\t\"vnd.mif\": \"mif\",\n\t\t\"vnd.mobius.daf\": \"daf\",\n\t\t\"vnd.mobius.dis\": \"dis\",\n\t\t\"vnd.mobius.mbk\": \"mbk\",\n\t\t\"vnd.mobius.mqy\": \"mqy\",\n\t\t\"vnd.mobius.msl\": \"msl\",\n\t\t\"vnd.mobius.plc\": \"plc\",\n\t\t\"vnd.mobius.txf\": \"txf\",\n\t\t\"vnd.mophun.application\": \"mpn\",\n\t\t\"vnd.mophun.certificate\": \"mpc\",\n\t\t\"vnd.ms-artgalry\": \"cil\",\n\t\t\"vnd.ms-cab-compressed\": \"cab\",\n\t\t\"vnd.ms-excel.addin.macroenabled.12\": \"xlam\",\n\t\t\"vnd.ms-excel.sheet.binary.macroenabled.12\": \"xlsb\",\n\t\t\"vnd.ms-excel.sheet.macroenabled.12\": \"xlsm\",\n\t\t\"vnd.ms-excel.template.macroenabled.12\": \"xltm\",\n\t\t\"vnd.ms-fontobject\": \"eot\",\n\t\t\"vnd.ms-htmlhelp\": \"chm\",\n\t\t\"vnd.ms-ims\": \"ims\",\n\t\t\"vnd.ms-lrm\": \"lrm\",\n\t\t\"vnd.ms-officetheme\": \"thmx\",\n\t\t\"vnd.ms-powerpoint.addin.macroenabled.12\": \"ppam\",\n\t\t\"vnd.ms-powerpoint.presentation.macroenabled.12\": \"pptm\",\n\t\t\"vnd.ms-powerpoint.slide.macroenabled.12\": \"sldm\",\n\t\t\"vnd.ms-powerpoint.slideshow.macroenabled.12\": \"ppsm\",\n\t\t\"vnd.ms-powerpoint.template.macroenabled.12\": \"potm\",\n\t\t\"vnd.ms-project\": [\"mpp\", \"mpt\"],\n\t\t\"vnd.ms-word.document.macroenabled.12\": \"docm\",\n\t\t\"vnd.ms-word.template.macroenabled.12\": \"dotm\",\n\t\t\"vnd.ms-works\": [\"wps\", \"wks\", \"wcm\", \"wdb\"],\n\t\t\"vnd.ms-wpl\": \"wpl\",\n\t\t\"vnd.ms-xpsdocument\": \"xps\",\n\t\t\"vnd.mseq\": \"mseq\",\n\t\t\"vnd.musician\": \"mus\",\n\t\t\"vnd.muvee.style\": \"msty\",\n\t\t\"vnd.mynfc\": \"taglet\",\n\t\t\"vnd.neurolanguage.nlu\": \"nlu\",\n\t\t\"vnd.nitf\": [\"ntf\", \"nitf\"],\n\t\t\"vnd.noblenet-directory\": \"nnd\",\n\t\t\"vnd.noblenet-sealer\": \"nns\",\n\t\t\"vnd.noblenet-web\": \"nnw\",\n\t\t\"vnd.nokia.n-gage.data\": \"ngdat\",\n\t\t\"vnd.nokia.n-gage.symbian.install\": \"n-gage\",\n\t\t\"vnd.nokia.radio-preset\": \"rpst\",\n\t\t\"vnd.nokia.radio-presets\": \"rpss\",\n\t\t\"vnd.novadigm.edm\": \"edm\",\n\t\t\"vnd.novadigm.edx\": \"edx\",\n\t\t\"vnd.novadigm.ext\": \"ext\",\n\t\t\"vnd.oasis.opendocument.chart-template\": \"otc\",\n\t\t\"vnd.oasis.opendocument.formula-template\": \"odft\",\n\t\t\"vnd.oasis.opendocument.image-template\": \"oti\",\n\t\t\"vnd.olpc-sugar\": \"xo\",\n\t\t\"vnd.oma.dd2+xml\": \"dd2\",\n\t\t\"vnd.openofficeorg.extension\": \"oxt\",\n\t\t\"vnd.openxmlformats-officedocument.presentationml.slide\": \"sldx\",\n\t\t\"vnd.osgeo.mapguide.package\": \"mgp\",\n\t\t\"vnd.osgi.dp\": \"dp\",\n\t\t\"vnd.osgi.subsystem\": \"esa\",\n\t\t\"vnd.palm\": [\"pdb\", \"pqa\", \"oprc\"],\n\t\t\"vnd.pawaafile\": \"paw\",\n\t\t\"vnd.pg.format\": \"str\",\n\t\t\"vnd.pg.osasli\": \"ei6\",\n\t\t\"vnd.picsel\": \"efif\",\n\t\t\"vnd.pmi.widget\": \"wg\",\n\t\t\"vnd.pocketlearn\": \"plf\",\n\t\t\"vnd.powerbuilder6\": \"pbd\",\n\t\t\"vnd.previewsystems.box\": \"box\",\n\t\t\"vnd.proteus.magazine\": \"mgz\",\n\t\t\"vnd.publishare-delta-tree\": \"qps\",\n\t\t\"vnd.pvi.ptid1\": \"ptid\",\n\t\t\"vnd.quark.quarkxpress\": [\"qxd\", \"qxt\", \"qwd\", \"qwt\", \"qxl\", \"qxb\"],\n\t\t\"vnd.realvnc.bed\": \"bed\",\n\t\t\"vnd.recordare.musicxml\": \"mxl\",\n\t\t\"vnd.recordare.musicxml+xml\": \"musicxml\",\n\t\t\"vnd.rig.cryptonote\": \"cryptonote\",\n\t\t\"vnd.rn-realmedia\": \"rm\",\n\t\t\"vnd.rn-realmedia-vbr\": \"rmvb\",\n\t\t\"vnd.route66.link66+xml\": \"link66\",\n\t\t\"vnd.sailingtracker.track\": \"st\",\n\t\t\"vnd.seemail\": \"see\",\n\t\t\"vnd.sema\": \"sema\",\n\t\t\"vnd.semd\": \"semd\",\n\t\t\"vnd.semf\": \"semf\",\n\t\t\"vnd.shana.informed.formdata\": \"ifm\",\n\t\t\"vnd.shana.informed.formtemplate\": \"itp\",\n\t\t\"vnd.shana.informed.interchange\": \"iif\",\n\t\t\"vnd.shana.informed.package\": \"ipk\",\n\t\t\"vnd.simtech-mindmapper\": [\"twd\", \"twds\"],\n\t\t\"vnd.smart.teacher\": \"teacher\",\n\t\t\"vnd.solent.sdkm+xml\": [\"sdkm\", \"sdkd\"],\n\t\t\"vnd.spotfire.dxp\": \"dxp\",\n\t\t\"vnd.spotfire.sfs\": \"sfs\",\n\t\t\"vnd.stepmania.package\": \"smzip\",\n\t\t\"vnd.stepmania.stepchart\": \"sm\",\n\t\t\"vnd.sus-calendar\": [\"sus\", \"susp\"],\n\t\t\"vnd.svd\": \"svd\",\n\t\t\"vnd.syncml+xml\": \"xsm\",\n\t\t\"vnd.syncml.dm+wbxml\": \"bdm\",\n\t\t\"vnd.syncml.dm+xml\": \"xdm\",\n\t\t\"vnd.tao.intent-module-archive\": \"tao\",\n\t\t\"vnd.tcpdump.pcap\": [\"pcap\", \"cap\", \"dmp\"],\n\t\t\"vnd.tmobile-livetv\": \"tmo\",\n\t\t\"vnd.trid.tpt\": \"tpt\",\n\t\t\"vnd.triscape.mxs\": \"mxs\",\n\t\t\"vnd.trueapp\": \"tra\",\n\t\t\"vnd.ufdl\": [\"ufd\", \"ufdl\"],\n\t\t\"vnd.uiq.theme\": \"utz\",\n\t\t\"vnd.umajin\": \"umj\",\n\t\t\"vnd.unity\": \"unityweb\",\n\t\t\"vnd.uoml+xml\": \"uoml\",\n\t\t\"vnd.vcx\": \"vcx\",\n\t\t\"vnd.visionary\": \"vis\",\n\t\t\"vnd.vsf\": \"vsf\",\n\t\t\"vnd.webturbo\": \"wtb\",\n\t\t\"vnd.wolfram.player\": \"nbp\",\n\t\t\"vnd.wqd\": \"wqd\",\n\t\t\"vnd.wt.stf\": \"stf\",\n\t\t\"vnd.xara\": \"xar\",\n\t\t\"vnd.xfdl\": \"xfdl\",\n\t\t\"vnd.yamaha.hv-dic\": \"hvd\",\n\t\t\"vnd.yamaha.hv-script\": \"hvs\",\n\t\t\"vnd.yamaha.hv-voice\": \"hvp\",\n\t\t\"vnd.yamaha.openscoreformat\": \"osf\",\n\t\t\"vnd.yamaha.openscoreformat.osfpvg+xml\": \"osfpvg\",\n\t\t\"vnd.yamaha.smaf-audio\": \"saf\",\n\t\t\"vnd.yamaha.smaf-phrase\": \"spf\",\n\t\t\"vnd.yellowriver-custom-menu\": \"cmp\",\n\t\t\"vnd.zul\": [\"zir\", \"zirz\"],\n\t\t\"vnd.zzazz.deck+xml\": \"zaz\",\n\t\t\"voicexml+xml\": \"vxml\",\n\t\t\"widget\": \"wgt\",\n\t\t\"winhlp\": \"hlp\",\n\t\t\"wsdl+xml\": \"wsdl\",\n\t\t\"wspolicy+xml\": \"wspolicy\",\n\t\t\"x-ace-compressed\": \"ace\",\n\t\t\"x-authorware-bin\": [\"aab\", \"x32\", \"u32\", \"vox\"],\n\t\t\"x-authorware-map\": \"aam\",\n\t\t\"x-authorware-seg\": \"aas\",\n\t\t\"x-blorb\": [\"blb\", \"blorb\"],\n\t\t\"x-bzip\": \"bz\",\n\t\t\"x-bzip2\": [\"bz2\", \"boz\"],\n\t\t\"x-cfs-compressed\": \"cfs\",\n\t\t\"x-chat\": \"chat\",\n\t\t\"x-conference\": \"nsc\",\n\t\t\"x-dgc-compressed\": \"dgc\",\n\t\t\"x-dtbncx+xml\": \"ncx\",\n\t\t\"x-dtbook+xml\": \"dtb\",\n\t\t\"x-dtbresource+xml\": \"res\",\n\t\t\"x-eva\": \"eva\",\n\t\t\"x-font-bdf\": \"bdf\",\n\t\t\"x-font-ghostscript\": \"gsf\",\n\t\t\"x-font-linux-psf\": \"psf\",\n\t\t\"x-font-otf\": \"otf\",\n\t\t\"x-font-pcf\": \"pcf\",\n\t\t\"x-font-snf\": \"snf\",\n\t\t\"x-font-ttf\": [\"ttf\", \"ttc\"],\n\t\t\"x-font-type1\": [\"pfa\", \"pfb\", \"pfm\", \"afm\"],\n\t\t\"x-font-woff\": \"woff\",\n\t\t\"x-freearc\": \"arc\",\n\t\t\"x-gca-compressed\": \"gca\",\n\t\t\"x-glulx\": \"ulx\",\n\t\t\"x-gramps-xml\": \"gramps\",\n\t\t\"x-install-instructions\": \"install\",\n\t\t\"x-lzh-compressed\": [\"lzh\", \"lha\"],\n\t\t\"x-mie\": \"mie\",\n\t\t\"x-mobipocket-ebook\": [\"prc\", \"mobi\"],\n\t\t\"x-ms-application\": \"application\",\n\t\t\"x-ms-shortcut\": \"lnk\",\n\t\t\"x-ms-xbap\": \"xbap\",\n\t\t\"x-msbinder\": \"obd\",\n\t\t\"x-mscardfile\": \"crd\",\n\t\t\"x-msclip\": \"clp\",\n\t\t\"x-msdownload\": [\"exe\", \"dll\", \"com\", \"bat\", \"msi\"],\n\t\t\"x-msmediaview\": [\"mvb\", \"m13\", \"m14\"],\n\t\t\"x-msmetafile\": [\"wmf\", \"wmz\", \"emf\", \"emz\"],\n\t\t\"x-msmoney\": \"mny\",\n\t\t\"x-mspublisher\": \"pub\",\n\t\t\"x-msschedule\": \"scd\",\n\t\t\"x-msterminal\": \"trm\",\n\t\t\"x-mswrite\": \"wri\",\n\t\t\"x-nzb\": \"nzb\",\n\t\t\"x-pkcs12\": [\"p12\", \"pfx\"],\n\t\t\"x-pkcs7-certificates\": [\"p7b\", \"spc\"],\n\t\t\"x-research-info-systems\": \"ris\",\n\t\t\"x-silverlight-app\": \"xap\",\n\t\t\"x-sql\": \"sql\",\n\t\t\"x-stuffitx\": \"sitx\",\n\t\t\"x-subrip\": \"srt\",\n\t\t\"x-t3vm-image\": \"t3\",\n\t\t\"x-tads\": \"gam\",\n\t\t\"x-tex\": \"tex\",\n\t\t\"x-tex-tfm\": \"tfm\",\n\t\t\"x-tgif\": \"obj\",\n\t\t\"x-xliff+xml\": \"xlf\",\n\t\t\"x-xz\": \"xz\",\n\t\t\"x-zmachine\": [\"z1\", \"z2\", \"z3\", \"z4\", \"z5\", \"z6\", \"z7\", \"z8\"],\n\t\t\"xaml+xml\": \"xaml\",\n\t\t\"xcap-diff+xml\": \"xdf\",\n\t\t\"xenc+xml\": \"xenc\",\n\t\t\"xml-dtd\": \"dtd\",\n\t\t\"xop+xml\": \"xop\",\n\t\t\"xproc+xml\": \"xpl\",\n\t\t\"xslt+xml\": \"xslt\",\n\t\t\"xv+xml\": [\"mxml\", \"xhvml\", \"xvml\", \"xvm\"],\n\t\t\"yang\": \"yang\",\n\t\t\"yin+xml\": \"yin\",\n\t\t\"envoy\": \"evy\",\n\t\t\"fractals\": \"fif\",\n\t\t\"internet-property-stream\": \"acx\",\n\t\t\"olescript\": \"axs\",\n\t\t\"vnd.ms-outlook\": \"msg\",\n\t\t\"vnd.ms-pkicertstore\": \"sst\",\n\t\t\"x-compress\": \"z\",\n\t\t\"x-compressed\": \"tgz\",\n\t\t\"x-gzip\": \"gz\",\n\t\t\"x-perfmon\": [\"pma\", \"pmc\", \"pml\", \"pmr\", \"pmw\"],\n\t\t\"x-pkcs7-mime\": [\"p7c\", \"p7m\"],\n\t\t\"ynd.ms-pkipko\": \"pko\"\n\t},\n\t\"audio\": {\n\t\t\"amr\": \"amr\",\n\t\t\"amr-wb\": \"awb\",\n\t\t\"annodex\": \"axa\",\n\t\t\"basic\": [\"au\", \"snd\"],\n\t\t\"flac\": \"flac\",\n\t\t\"midi\": [\"mid\", \"midi\", \"kar\", \"rmi\"],\n\t\t\"mpeg\": [\"mpga\", \"mpega\", \"mp2\", \"mp3\", \"m4a\", \"mp2a\", \"m2a\", \"m3a\"],\n\t\t\"mpegurl\": \"m3u\",\n\t\t\"ogg\": [\"oga\", \"ogg\", \"spx\"],\n\t\t\"prs.sid\": \"sid\",\n\t\t\"x-aiff\": [\"aif\", \"aiff\", \"aifc\"],\n\t\t\"x-gsm\": \"gsm\",\n\t\t\"x-ms-wma\": \"wma\",\n\t\t\"x-ms-wax\": \"wax\",\n\t\t\"x-pn-realaudio\": \"ram\",\n\t\t\"x-realaudio\": \"ra\",\n\t\t\"x-sd2\": \"sd2\",\n\t\t\"x-wav\": \"wav\",\n\t\t\"adpcm\": \"adp\",\n\t\t\"mp4\": \"mp4a\",\n\t\t\"s3m\": \"s3m\",\n\t\t\"silk\": \"sil\",\n\t\t\"vnd.dece.audio\": [\"uva\", \"uvva\"],\n\t\t\"vnd.digital-winds\": \"eol\",\n\t\t\"vnd.dra\": \"dra\",\n\t\t\"vnd.dts\": \"dts\",\n\t\t\"vnd.dts.hd\": \"dtshd\",\n\t\t\"vnd.lucent.voice\": \"lvp\",\n\t\t\"vnd.ms-playready.media.pya\": \"pya\",\n\t\t\"vnd.nuera.ecelp4800\": \"ecelp4800\",\n\t\t\"vnd.nuera.ecelp7470\": \"ecelp7470\",\n\t\t\"vnd.nuera.ecelp9600\": \"ecelp9600\",\n\t\t\"vnd.rip\": \"rip\",\n\t\t\"webm\": \"weba\",\n\t\t\"x-aac\": \"aac\",\n\t\t\"x-caf\": \"caf\",\n\t\t\"x-matroska\": \"mka\",\n\t\t\"x-pn-realaudio-plugin\": \"rmp\",\n\t\t\"xm\": \"xm\",\n\t\t\"mid\": [\"mid\", \"rmi\"]\n\t},\n\t\"chemical\": {\n\t\t\"x-alchemy\": \"alc\",\n\t\t\"x-cache\": [\"cac\", \"cache\"],\n\t\t\"x-cache-csf\": \"csf\",\n\t\t\"x-cactvs-binary\": [\"cbin\", \"cascii\", \"ctab\"],\n\t\t\"x-cdx\": \"cdx\",\n\t\t\"x-chem3d\": \"c3d\",\n\t\t\"x-cif\": \"cif\",\n\t\t\"x-cmdf\": \"cmdf\",\n\t\t\"x-cml\": \"cml\",\n\t\t\"x-compass\": \"cpa\",\n\t\t\"x-crossfire\": \"bsd\",\n\t\t\"x-csml\": [\"csml\", \"csm\"],\n\t\t\"x-ctx\": \"ctx\",\n\t\t\"x-cxf\": [\"cxf\", \"cef\"],\n\t\t\"x-embl-dl-nucleotide\": [\"emb\", \"embl\"],\n\t\t\"x-gamess-input\": [\"inp\", \"gam\", \"gamin\"],\n\t\t\"x-gaussian-checkpoint\": [\"fch\", \"fchk\"],\n\t\t\"x-gaussian-cube\": \"cub\",\n\t\t\"x-gaussian-input\": [\"gau\", \"gjc\", \"gjf\"],\n\t\t\"x-gaussian-log\": \"gal\",\n\t\t\"x-gcg8-sequence\": \"gcg\",\n\t\t\"x-genbank\": \"gen\",\n\t\t\"x-hin\": \"hin\",\n\t\t\"x-isostar\": [\"istr\", \"ist\"],\n\t\t\"x-jcamp-dx\": [\"jdx\", \"dx\"],\n\t\t\"x-kinemage\": \"kin\",\n\t\t\"x-macmolecule\": \"mcm\",\n\t\t\"x-macromodel-input\": [\"mmd\", \"mmod\"],\n\t\t\"x-mdl-molfile\": \"mol\",\n\t\t\"x-mdl-rdfile\": \"rd\",\n\t\t\"x-mdl-rxnfile\": \"rxn\",\n\t\t\"x-mdl-sdfile\": [\"sd\", \"sdf\"],\n\t\t\"x-mdl-tgf\": \"tgf\",\n\t\t\"x-mmcif\": \"mcif\",\n\t\t\"x-mol2\": \"mol2\",\n\t\t\"x-molconn-Z\": \"b\",\n\t\t\"x-mopac-graph\": \"gpt\",\n\t\t\"x-mopac-input\": [\"mop\", \"mopcrt\", \"mpc\", \"zmt\"],\n\t\t\"x-mopac-out\": \"moo\",\n\t\t\"x-ncbi-asn1\": \"asn\",\n\t\t\"x-ncbi-asn1-ascii\": [\"prt\", \"ent\"],\n\t\t\"x-ncbi-asn1-binary\": [\"val\", \"aso\"],\n\t\t\"x-pdb\": [\"pdb\", \"ent\"],\n\t\t\"x-rosdal\": \"ros\",\n\t\t\"x-swissprot\": \"sw\",\n\t\t\"x-vamas-iso14976\": \"vms\",\n\t\t\"x-vmd\": \"vmd\",\n\t\t\"x-xtel\": \"xtel\",\n\t\t\"x-xyz\": \"xyz\"\n\t},\n\t\"image\": {\n\t\t\"gif\": \"gif\",\n\t\t\"ief\": \"ief\",\n\t\t\"jpeg\": [\"jpeg\", \"jpg\", \"jpe\"],\n\t\t\"pcx\": \"pcx\",\n\t\t\"png\": \"png\",\n\t\t\"svg+xml\": [\"svg\", \"svgz\"],\n\t\t\"tiff\": [\"tiff\", \"tif\"],\n\t\t\"vnd.djvu\": [\"djvu\", \"djv\"],\n\t\t\"vnd.wap.wbmp\": \"wbmp\",\n\t\t\"x-canon-cr2\": \"cr2\",\n\t\t\"x-canon-crw\": \"crw\",\n\t\t\"x-cmu-raster\": \"ras\",\n\t\t\"x-coreldraw\": \"cdr\",\n\t\t\"x-coreldrawpattern\": \"pat\",\n\t\t\"x-coreldrawtemplate\": \"cdt\",\n\t\t\"x-corelphotopaint\": \"cpt\",\n\t\t\"x-epson-erf\": \"erf\",\n\t\t\"x-icon\": \"ico\",\n\t\t\"x-jg\": \"art\",\n\t\t\"x-jng\": \"jng\",\n\t\t\"x-nikon-nef\": \"nef\",\n\t\t\"x-olympus-orf\": \"orf\",\n\t\t\"x-photoshop\": \"psd\",\n\t\t\"x-portable-anymap\": \"pnm\",\n\t\t\"x-portable-bitmap\": \"pbm\",\n\t\t\"x-portable-graymap\": \"pgm\",\n\t\t\"x-portable-pixmap\": \"ppm\",\n\t\t\"x-rgb\": \"rgb\",\n\t\t\"x-xbitmap\": \"xbm\",\n\t\t\"x-xpixmap\": \"xpm\",\n\t\t\"x-xwindowdump\": \"xwd\",\n\t\t\"bmp\": \"bmp\",\n\t\t\"cgm\": \"cgm\",\n\t\t\"g3fax\": \"g3\",\n\t\t\"ktx\": \"ktx\",\n\t\t\"prs.btif\": \"btif\",\n\t\t\"sgi\": \"sgi\",\n\t\t\"vnd.dece.graphic\": [\"uvi\", \"uvvi\", \"uvg\", \"uvvg\"],\n\t\t\"vnd.dwg\": \"dwg\",\n\t\t\"vnd.dxf\": \"dxf\",\n\t\t\"vnd.fastbidsheet\": \"fbs\",\n\t\t\"vnd.fpx\": \"fpx\",\n\t\t\"vnd.fst\": \"fst\",\n\t\t\"vnd.fujixerox.edmics-mmr\": \"mmr\",\n\t\t\"vnd.fujixerox.edmics-rlc\": \"rlc\",\n\t\t\"vnd.ms-modi\": \"mdi\",\n\t\t\"vnd.ms-photo\": \"wdp\",\n\t\t\"vnd.net-fpx\": \"npx\",\n\t\t\"vnd.xiff\": \"xif\",\n\t\t\"webp\": \"webp\",\n\t\t\"x-3ds\": \"3ds\",\n\t\t\"x-cmx\": \"cmx\",\n\t\t\"x-freehand\": [\"fh\", \"fhc\", \"fh4\", \"fh5\", \"fh7\"],\n\t\t\"x-pict\": [\"pic\", \"pct\"],\n\t\t\"x-tga\": \"tga\",\n\t\t\"cis-cod\": \"cod\",\n\t\t\"pipeg\": \"jfif\"\n\t},\n\t\"message\": {\n\t\t\"rfc822\": [\"eml\", \"mime\", \"mht\", \"mhtml\", \"nws\"]\n\t},\n\t\"model\": {\n\t\t\"iges\": [\"igs\", \"iges\"],\n\t\t\"mesh\": [\"msh\", \"mesh\", \"silo\"],\n\t\t\"vrml\": [\"wrl\", \"vrml\"],\n\t\t\"x3d+vrml\": [\"x3dv\", \"x3dvz\"],\n\t\t\"x3d+xml\": [\"x3d\", \"x3dz\"],\n\t\t\"x3d+binary\": [\"x3db\", \"x3dbz\"],\n\t\t\"vnd.collada+xml\": \"dae\",\n\t\t\"vnd.dwf\": \"dwf\",\n\t\t\"vnd.gdl\": \"gdl\",\n\t\t\"vnd.gtw\": \"gtw\",\n\t\t\"vnd.mts\": \"mts\",\n\t\t\"vnd.vtu\": \"vtu\"\n\t},\n\t\"text\": {\n\t\t\"cache-manifest\": [\"manifest\", \"appcache\"],\n\t\t\"calendar\": [\"ics\", \"icz\", \"ifb\"],\n\t\t\"css\": \"css\",\n\t\t\"csv\": \"csv\",\n\t\t\"h323\": \"323\",\n\t\t\"html\": [\"html\", \"htm\", \"shtml\", \"stm\"],\n\t\t\"iuls\": \"uls\",\n\t\t\"mathml\": \"mml\",\n\t\t\"plain\": [\"txt\", \"text\", \"brf\", \"conf\", \"def\", \"list\", \"log\", \"in\", \"bas\"],\n\t\t\"richtext\": \"rtx\",\n\t\t\"scriptlet\": [\"sct\", \"wsc\"],\n\t\t\"texmacs\": [\"tm\", \"ts\"],\n\t\t\"tab-separated-values\": \"tsv\",\n\t\t\"vnd.sun.j2me.app-descriptor\": \"jad\",\n\t\t\"vnd.wap.wml\": \"wml\",\n\t\t\"vnd.wap.wmlscript\": \"wmls\",\n\t\t\"x-bibtex\": \"bib\",\n\t\t\"x-boo\": \"boo\",\n\t\t\"x-c++hdr\": [\"h++\", \"hpp\", \"hxx\", \"hh\"],\n\t\t\"x-c++src\": [\"c++\", \"cpp\", \"cxx\", \"cc\"],\n\t\t\"x-component\": \"htc\",\n\t\t\"x-dsrc\": \"d\",\n\t\t\"x-diff\": [\"diff\", \"patch\"],\n\t\t\"x-haskell\": \"hs\",\n\t\t\"x-java\": \"java\",\n\t\t\"x-literate-haskell\": \"lhs\",\n\t\t\"x-moc\": \"moc\",\n\t\t\"x-pascal\": [\"p\", \"pas\"],\n\t\t\"x-pcs-gcd\": \"gcd\",\n\t\t\"x-perl\": [\"pl\", \"pm\"],\n\t\t\"x-python\": \"py\",\n\t\t\"x-scala\": \"scala\",\n\t\t\"x-setext\": \"etx\",\n\t\t\"x-tcl\": [\"tcl\", \"tk\"],\n\t\t\"x-tex\": [\"tex\", \"ltx\", \"sty\", \"cls\"],\n\t\t\"x-vcalendar\": \"vcs\",\n\t\t\"x-vcard\": \"vcf\",\n\t\t\"n3\": \"n3\",\n\t\t\"prs.lines.tag\": \"dsc\",\n\t\t\"sgml\": [\"sgml\", \"sgm\"],\n\t\t\"troff\": [\"t\", \"tr\", \"roff\", \"man\", \"me\", \"ms\"],\n\t\t\"turtle\": \"ttl\",\n\t\t\"uri-list\": [\"uri\", \"uris\", \"urls\"],\n\t\t\"vcard\": \"vcard\",\n\t\t\"vnd.curl\": \"curl\",\n\t\t\"vnd.curl.dcurl\": \"dcurl\",\n\t\t\"vnd.curl.scurl\": \"scurl\",\n\t\t\"vnd.curl.mcurl\": \"mcurl\",\n\t\t\"vnd.dvb.subtitle\": \"sub\",\n\t\t\"vnd.fly\": \"fly\",\n\t\t\"vnd.fmi.flexstor\": \"flx\",\n\t\t\"vnd.graphviz\": \"gv\",\n\t\t\"vnd.in3d.3dml\": \"3dml\",\n\t\t\"vnd.in3d.spot\": \"spot\",\n\t\t\"x-asm\": [\"s\", \"asm\"],\n\t\t\"x-c\": [\"c\", \"cc\", \"cxx\", \"cpp\", \"h\", \"hh\", \"dic\"],\n\t\t\"x-fortran\": [\"f\", \"for\", \"f77\", \"f90\"],\n\t\t\"x-opml\": \"opml\",\n\t\t\"x-nfo\": \"nfo\",\n\t\t\"x-sfv\": \"sfv\",\n\t\t\"x-uuencode\": \"uu\",\n\t\t\"webviewhtml\": \"htt\"\n\t},\n\t\"video\": {\n\t\t\"avif\": \".avif\",\n\t\t\"3gpp\": \"3gp\",\n\t\t\"annodex\": \"axv\",\n\t\t\"dl\": \"dl\",\n\t\t\"dv\": [\"dif\", \"dv\"],\n\t\t\"fli\": \"fli\",\n\t\t\"gl\": \"gl\",\n\t\t\"mpeg\": [\"mpeg\", \"mpg\", \"mpe\", \"m1v\", \"m2v\", \"mp2\", \"mpa\", \"mpv2\"],\n\t\t\"mp4\": [\"mp4\", \"mp4v\", \"mpg4\"],\n\t\t\"quicktime\": [\"qt\", \"mov\"],\n\t\t\"ogg\": \"ogv\",\n\t\t\"vnd.mpegurl\": [\"mxu\", \"m4u\"],\n\t\t\"x-flv\": \"flv\",\n\t\t\"x-la-asf\": [\"lsf\", \"lsx\"],\n\t\t\"x-mng\": \"mng\",\n\t\t\"x-ms-asf\": [\"asf\", \"asx\", \"asr\"],\n\t\t\"x-ms-wm\": \"wm\",\n\t\t\"x-ms-wmv\": \"wmv\",\n\t\t\"x-ms-wmx\": \"wmx\",\n\t\t\"x-ms-wvx\": \"wvx\",\n\t\t\"x-msvideo\": \"avi\",\n\t\t\"x-sgi-movie\": \"movie\",\n\t\t\"x-matroska\": [\"mpv\", \"mkv\", \"mk3d\", \"mks\"],\n\t\t\"3gpp2\": \"3g2\",\n\t\t\"h261\": \"h261\",\n\t\t\"h263\": \"h263\",\n\t\t\"h264\": \"h264\",\n\t\t\"jpeg\": \"jpgv\",\n\t\t\"jpm\": [\"jpm\", \"jpgm\"],\n\t\t\"mj2\": [\"mj2\", \"mjp2\"],\n\t\t\"vnd.dece.hd\": [\"uvh\", \"uvvh\"],\n\t\t\"vnd.dece.mobile\": [\"uvm\", \"uvvm\"],\n\t\t\"vnd.dece.pd\": [\"uvp\", \"uvvp\"],\n\t\t\"vnd.dece.sd\": [\"uvs\", \"uvvs\"],\n\t\t\"vnd.dece.video\": [\"uvv\", \"uvvv\"],\n\t\t\"vnd.dvb.file\": \"dvb\",\n\t\t\"vnd.fvt\": \"fvt\",\n\t\t\"vnd.ms-playready.media.pyv\": \"pyv\",\n\t\t\"vnd.uvvu.mp4\": [\"uvu\", \"uvvu\"],\n\t\t\"vnd.vivo\": \"viv\",\n\t\t\"webm\": \"webm\",\n\t\t\"x-f4v\": \"f4v\",\n\t\t\"x-m4v\": \"m4v\",\n\t\t\"x-ms-vob\": \"vob\",\n\t\t\"x-smv\": \"smv\"\n\t},\n\t\"x-conference\": {\n\t\t\"x-cooltalk\": \"ice\"\n\t},\n\t\"x-world\": {\n\t\t\"x-vrml\": [\"vrm\", \"vrml\", \"wrl\", \"flr\", \"wrz\", \"xaf\", \"xof\"]\n\t}\n};\n\nconst mimeTypes = (() => {\n\tconst mimeTypes = {};\n\tfor (const type in table) {\n\t\t// eslint-disable-next-line no-prototype-builtins\n\t\tif (table.hasOwnProperty(type)) {\n\t\t\tfor (const subtype in table[type]) {\n\t\t\t\t// eslint-disable-next-line no-prototype-builtins\n\t\t\t\tif (table[type].hasOwnProperty(subtype)) {\n\t\t\t\t\tconst value = table[type][subtype];\n\t\t\t\t\tif (typeof value == \"string\") {\n\t\t\t\t\t\tmimeTypes[value] = type + \"/\" + subtype;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let indexMimeType = 0; indexMimeType < value.length; indexMimeType++) {\n\t\t\t\t\t\t\tmimeTypes[value[indexMimeType]] = type + \"/\" + subtype;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn mimeTypes;\n})();\n\nexport {\n\tmimeTypes,\n\tgetMimeType\n};\n\nfunction getMimeType(filename) {\n\treturn filename && mimeTypes[filename.split(\".\").pop().toLowerCase()] || getDefaultMimeType();\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst table = [];\nfor (let i = 0; i < 256; i++) {\n\tlet t = i;\n\tfor (let j = 0; j < 8; j++) {\n\t\tif (t & 1) {\n\t\t\tt = (t >>> 1) ^ 0xEDB88320;\n\t\t} else {\n\t\t\tt = t >>> 1;\n\t\t}\n\t}\n\ttable[i] = t;\n}\n\nclass Crc32 {\n\n\tconstructor(crc) {\n\t\tthis.crc = crc || -1;\n\t}\n\n\tappend(data) {\n\t\tlet crc = this.crc | 0;\n\t\tfor (let offset = 0, length = data.length | 0; offset < length; offset++) {\n\t\t\tcrc = (crc >>> 8) ^ table[(crc ^ data[offset]) & 0xFF];\n\t\t}\n\t\tthis.crc = crc;\n\t}\n\n\tget() {\n\t\treturn ~this.crc;\n\t}\n}\n\nexport {\n\tCrc32\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n\nimport { Crc32 } from \"./codecs/crc32.js\";\n\nclass Crc32Stream extends TransformStream {\n\n\tconstructor() {\n\t\tconst crc32 = new Crc32();\n\t\tsuper({\n\t\t\ttransform(chunk) {\n\t\t\t\tcrc32.append(chunk);\n\t\t\t},\n\t\t\tflush(controller) {\n\t\t\t\tconst value = new Uint8Array(4);\n\t\t\t\tconst dataView = new DataView(value.buffer);\n\t\t\t\tdataView.setUint32(0, crc32.get());\n\t\t\t\tcontroller.enqueue(value);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tCrc32Stream\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextEncoder */\n\nexport {\n\tencodeText\n};\n\nfunction encodeText(value) {\n\tif (typeof TextEncoder == \"undefined\") {\n\t\tvalue = unescape(encodeURIComponent(value));\n\t\tconst result = new Uint8Array(value.length);\n\t\tfor (let i = 0; i < result.length; i++) {\n\t\t\tresult[i] = value.charCodeAt(i);\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextEncoder().encode(value);\n\t}\n}","// Derived from https://github.com/xqdoo00o/jszip/blob/master/lib/sjcl.js and https://github.com/bitwiseshiftleft/sjcl\n\n// deno-lint-ignore-file no-this-alias\n\n/*\n * SJCL is open. You can use, modify and redistribute it under a BSD\n * license or under the GNU GPL, version 2.0.\n */\n\n/** @fileOverview Javascript cryptography implementation.\n *\n * Crush to remove comments, shorten variable names and\n * generally reduce transmission size.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/*jslint indent: 2, bitwise: false, nomen: false, plusplus: false, white: false, regexp: false */\n\n/** @fileOverview Arrays of bits, encoded as arrays of Numbers.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bits, encoded as arrays of Numbers.\n * @namespace\n * @description\n * <p>\n * These objects are the currency accepted by SJCL's crypto functions.\n * </p>\n *\n * <p>\n * Most of our crypto primitives operate on arrays of 4-byte words internally,\n * but many of them can take arguments that are not a multiple of 4 bytes.\n * This library encodes arrays of bits (whose size need not be a multiple of 8\n * bits) as arrays of 32-bit words.  The bits are packed, big-endian, into an\n * array of words, 32 bits at a time.  Since the words are double-precision\n * floating point numbers, they fit some extra data.  We use this (in a private,\n * possibly-changing manner) to encode the number of bits actually  present\n * in the last word of the array.\n * </p>\n *\n * <p>\n * Because bitwise ops clear this out-of-band data, these arrays can be passed\n * to ciphers like AES which want arrays of words.\n * </p>\n */\nconst bitArray = {\n\t/**\n\t * Concatenate two bit arrays.\n\t * @param {bitArray} a1 The first array.\n\t * @param {bitArray} a2 The second array.\n\t * @return {bitArray} The concatenation of a1 and a2.\n\t */\n\tconcat(a1, a2) {\n\t\tif (a1.length === 0 || a2.length === 0) {\n\t\t\treturn a1.concat(a2);\n\t\t}\n\n\t\tconst last = a1[a1.length - 1], shift = bitArray.getPartial(last);\n\t\tif (shift === 32) {\n\t\t\treturn a1.concat(a2);\n\t\t} else {\n\t\t\treturn bitArray._shiftRight(a2, shift, last | 0, a1.slice(0, a1.length - 1));\n\t\t}\n\t},\n\n\t/**\n\t * Find the length of an array of bits.\n\t * @param {bitArray} a The array.\n\t * @return {Number} The length of a, in bits.\n\t */\n\tbitLength(a) {\n\t\tconst l = a.length;\n\t\tif (l === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst x = a[l - 1];\n\t\treturn (l - 1) * 32 + bitArray.getPartial(x);\n\t},\n\n\t/**\n\t * Truncate an array.\n\t * @param {bitArray} a The array.\n\t * @param {Number} len The length to truncate to, in bits.\n\t * @return {bitArray} A new array, truncated to len bits.\n\t */\n\tclamp(a, len) {\n\t\tif (a.length * 32 < len) {\n\t\t\treturn a;\n\t\t}\n\t\ta = a.slice(0, Math.ceil(len / 32));\n\t\tconst l = a.length;\n\t\tlen = len & 31;\n\t\tif (l > 0 && len) {\n\t\t\ta[l - 1] = bitArray.partial(len, a[l - 1] & 0x80000000 >> (len - 1), 1);\n\t\t}\n\t\treturn a;\n\t},\n\n\t/**\n\t * Make a partial word for a bit array.\n\t * @param {Number} len The number of bits in the word.\n\t * @param {Number} x The bits.\n\t * @param {Number} [_end=0] Pass 1 if x has already been shifted to the high side.\n\t * @return {Number} The partial word.\n\t */\n\tpartial(len, x, _end) {\n\t\tif (len === 32) {\n\t\t\treturn x;\n\t\t}\n\t\treturn (_end ? x | 0 : x << (32 - len)) + len * 0x10000000000;\n\t},\n\n\t/**\n\t * Get the number of bits used by a partial word.\n\t * @param {Number} x The partial word.\n\t * @return {Number} The number of bits used by the partial word.\n\t */\n\tgetPartial(x) {\n\t\treturn Math.round(x / 0x10000000000) || 32;\n\t},\n\n\t/** Shift an array right.\n\t * @param {bitArray} a The array to shift.\n\t * @param {Number} shift The number of bits to shift.\n\t * @param {Number} [carry=0] A byte to carry in\n\t * @param {bitArray} [out=[]] An array to prepend to the output.\n\t * @private\n\t */\n\t_shiftRight(a, shift, carry, out) {\n\t\tif (out === undefined) {\n\t\t\tout = [];\n\t\t}\n\n\t\tfor (; shift >= 32; shift -= 32) {\n\t\t\tout.push(carry);\n\t\t\tcarry = 0;\n\t\t}\n\t\tif (shift === 0) {\n\t\t\treturn out.concat(a);\n\t\t}\n\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tout.push(carry | a[i] >>> shift);\n\t\t\tcarry = a[i] << (32 - shift);\n\t\t}\n\t\tconst last2 = a.length ? a[a.length - 1] : 0;\n\t\tconst shift2 = bitArray.getPartial(last2);\n\t\tout.push(bitArray.partial(shift + shift2 & 31, (shift + shift2 > 32) ? carry : out.pop(), 1));\n\t\treturn out;\n\t}\n};\n\n/** @fileOverview Bit array codec implementations.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/**\n * Arrays of bytes\n * @namespace\n */\nconst codec = {\n\tbytes: {\n\t\t/** Convert from a bitArray to an array of bytes. */\n\t\tfromBits(arr) {\n\t\t\tconst bl = bitArray.bitLength(arr);\n\t\t\tconst byteLength = bl / 8;\n\t\t\tconst out = new Uint8Array(byteLength);\n\t\t\tlet tmp;\n\t\t\tfor (let i = 0; i < byteLength; i++) {\n\t\t\t\tif ((i & 3) === 0) {\n\t\t\t\t\ttmp = arr[i / 4];\n\t\t\t\t}\n\t\t\t\tout[i] = tmp >>> 24;\n\t\t\t\ttmp <<= 8;\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\t/** Convert from an array of bytes to a bitArray. */\n\t\ttoBits(bytes) {\n\t\t\tconst out = [];\n\t\t\tlet i;\n\t\t\tlet tmp = 0;\n\t\t\tfor (i = 0; i < bytes.length; i++) {\n\t\t\t\ttmp = tmp << 8 | bytes[i];\n\t\t\t\tif ((i & 3) === 3) {\n\t\t\t\t\tout.push(tmp);\n\t\t\t\t\ttmp = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (i & 3) {\n\t\t\t\tout.push(bitArray.partial(8 * (i & 3), tmp));\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t}\n};\n\nconst hash = {};\n\n/**\n * Context for a SHA-1 operation in progress.\n * @constructor\n */\nhash.sha1 = class {\n\tconstructor(hash) {\n\t\tconst sha1 = this;\n\t\t/**\n\t\t * The hash's block size, in bits.\n\t\t * @constant\n\t\t */\n\t\tsha1.blockSize = 512;\n\t\t/**\n\t\t * The SHA-1 initialization vector.\n\t\t * @private\n\t\t */\n\t\tsha1._init = [0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0];\n\t\t/**\n\t\t * The SHA-1 hash key.\n\t\t * @private\n\t\t */\n\t\tsha1._key = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\t\tif (hash) {\n\t\t\tsha1._h = hash._h.slice(0);\n\t\t\tsha1._buffer = hash._buffer.slice(0);\n\t\t\tsha1._length = hash._length;\n\t\t} else {\n\t\t\tsha1.reset();\n\t\t}\n\t}\n\n\t/**\n\t * Reset the hash state.\n\t * @return this\n\t */\n\treset() {\n\t\tconst sha1 = this;\n\t\tsha1._h = sha1._init.slice(0);\n\t\tsha1._buffer = [];\n\t\tsha1._length = 0;\n\t\treturn sha1;\n\t}\n\n\t/**\n\t * Input several words to the hash.\n\t * @param {bitArray|String} data the data to hash.\n\t * @return this\n\t */\n\tupdate(data) {\n\t\tconst sha1 = this;\n\t\tif (typeof data === \"string\") {\n\t\t\tdata = codec.utf8String.toBits(data);\n\t\t}\n\t\tconst b = sha1._buffer = bitArray.concat(sha1._buffer, data);\n\t\tconst ol = sha1._length;\n\t\tconst nl = sha1._length = ol + bitArray.bitLength(data);\n\t\tif (nl > 9007199254740991) {\n\t\t\tthrow new Error(\"Cannot hash more than 2^53 - 1 bits\");\n\t\t}\n\t\tconst c = new Uint32Array(b);\n\t\tlet j = 0;\n\t\tfor (let i = sha1.blockSize + ol - ((sha1.blockSize + ol) & (sha1.blockSize - 1)); i <= nl;\n\t\t\ti += sha1.blockSize) {\n\t\t\tsha1._block(c.subarray(16 * j, 16 * (j + 1)));\n\t\t\tj += 1;\n\t\t}\n\t\tb.splice(0, 16 * j);\n\t\treturn sha1;\n\t}\n\n\t/**\n\t * Complete hashing and output the hash value.\n\t * @return {bitArray} The hash value, an array of 5 big-endian words. TODO\n\t */\n\tfinalize() {\n\t\tconst sha1 = this;\n\t\tlet b = sha1._buffer;\n\t\tconst h = sha1._h;\n\n\t\t// Round out and push the buffer\n\t\tb = bitArray.concat(b, [bitArray.partial(1, 1)]);\n\t\t// Round out the buffer to a multiple of 16 words, less the 2 length words.\n\t\tfor (let i = b.length + 2; i & 15; i++) {\n\t\t\tb.push(0);\n\t\t}\n\n\t\t// append the length\n\t\tb.push(Math.floor(sha1._length / 0x100000000));\n\t\tb.push(sha1._length | 0);\n\n\t\twhile (b.length) {\n\t\t\tsha1._block(b.splice(0, 16));\n\t\t}\n\n\t\tsha1.reset();\n\t\treturn h;\n\t}\n\n\t/**\n\t * The SHA-1 logical functions f(0), f(1), ..., f(79).\n\t * @private\n\t */\n\t_f(t, b, c, d) {\n\t\tif (t <= 19) {\n\t\t\treturn (b & c) | (~b & d);\n\t\t} else if (t <= 39) {\n\t\t\treturn b ^ c ^ d;\n\t\t} else if (t <= 59) {\n\t\t\treturn (b & c) | (b & d) | (c & d);\n\t\t} else if (t <= 79) {\n\t\t\treturn b ^ c ^ d;\n\t\t}\n\t}\n\n\t/**\n\t * Circular left-shift operator.\n\t * @private\n\t */\n\t_S(n, x) {\n\t\treturn (x << n) | (x >>> 32 - n);\n\t}\n\n\t/**\n\t * Perform one cycle of SHA-1.\n\t * @param {Uint32Array|bitArray} words one block of words.\n\t * @private\n\t */\n\t_block(words) {\n\t\tconst sha1 = this;\n\t\tconst h = sha1._h;\n\t\t// When words is passed to _block, it has 16 elements. SHA1 _block\n\t\t// function extends words with new elements (at the end there are 80 elements). \n\t\t// The problem is that if we use Uint32Array instead of Array, \n\t\t// the length of Uint32Array cannot be changed. Thus, we replace words with a \n\t\t// normal Array here.\n\t\tconst w = Array(80); // do not use Uint32Array here as the instantiation is slower\n\t\tfor (let j = 0; j < 16; j++) {\n\t\t\tw[j] = words[j];\n\t\t}\n\n\t\tlet a = h[0];\n\t\tlet b = h[1];\n\t\tlet c = h[2];\n\t\tlet d = h[3];\n\t\tlet e = h[4];\n\n\t\tfor (let t = 0; t <= 79; t++) {\n\t\t\tif (t >= 16) {\n\t\t\t\tw[t] = sha1._S(1, w[t - 3] ^ w[t - 8] ^ w[t - 14] ^ w[t - 16]);\n\t\t\t}\n\t\t\tconst tmp = (sha1._S(5, a) + sha1._f(t, b, c, d) + e + w[t] +\n\t\t\t\tsha1._key[Math.floor(t / 20)]) | 0;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = sha1._S(30, b);\n\t\t\tb = a;\n\t\t\ta = tmp;\n\t\t}\n\n\t\th[0] = (h[0] + a) | 0;\n\t\th[1] = (h[1] + b) | 0;\n\t\th[2] = (h[2] + c) | 0;\n\t\th[3] = (h[3] + d) | 0;\n\t\th[4] = (h[4] + e) | 0;\n\t}\n};\n\n/** @fileOverview Low-level AES implementation.\n *\n * This file contains a low-level implementation of AES, optimized for\n * size and for efficiency on several browsers.  It is based on\n * OpenSSL's aes_core.c, a public-domain implementation by Vincent\n * Rijmen, Antoon Bosselaers and Paulo Barreto.\n *\n * An older version of this implementation is available in the public\n * domain, but this one is (c) Emily Stark, Mike Hamburg, Dan Boneh,\n * Stanford University 2008-2010 and BSD-licensed for liability\n * reasons.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\nconst cipher = {};\n\n/**\n * Schedule out an AES key for both encryption and decryption.  This\n * is a low-level class.  Use a cipher mode to do bulk encryption.\n *\n * @constructor\n * @param {Array} key The key as an array of 4, 6 or 8 words.\n */\ncipher.aes = class {\n\tconstructor(key) {\n\t\t/**\n\t\t * The expanded S-box and inverse S-box tables.  These will be computed\n\t\t * on the client so that we don't have to send them down the wire.\n\t\t *\n\t\t * There are two tables, _tables[0] is for encryption and\n\t\t * _tables[1] is for decryption.\n\t\t *\n\t\t * The first 4 sub-tables are the expanded S-box with MixColumns.  The\n\t\t * last (_tables[01][4]) is the S-box itself.\n\t\t *\n\t\t * @private\n\t\t */\n\t\tconst aes = this;\n\t\taes._tables = [[[], [], [], [], []], [[], [], [], [], []]];\n\n\t\tif (!aes._tables[0][0][0]) {\n\t\t\taes._precompute();\n\t\t}\n\n\t\tconst sbox = aes._tables[0][4];\n\t\tconst decTable = aes._tables[1];\n\t\tconst keyLen = key.length;\n\n\t\tlet i, encKey, decKey, rcon = 1;\n\n\t\tif (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n\t\t\tthrow new Error(\"invalid aes key size\");\n\t\t}\n\n\t\taes._key = [encKey = key.slice(0), decKey = []];\n\n\t\t// schedule encryption keys\n\t\tfor (i = keyLen; i < 4 * keyLen + 28; i++) {\n\t\t\tlet tmp = encKey[i - 1];\n\n\t\t\t// apply sbox\n\t\t\tif (i % keyLen === 0 || (keyLen === 8 && i % keyLen === 4)) {\n\t\t\t\ttmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n\t\t\t\t// shift rows and add rcon\n\t\t\t\tif (i % keyLen === 0) {\n\t\t\t\t\ttmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n\t\t\t\t\trcon = rcon << 1 ^ (rcon >> 7) * 283;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tencKey[i] = encKey[i - keyLen] ^ tmp;\n\t\t}\n\n\t\t// schedule decryption keys\n\t\tfor (let j = 0; i; j++, i--) {\n\t\t\tconst tmp = encKey[j & 3 ? i : i - 4];\n\t\t\tif (i <= 4 || j < 4) {\n\t\t\t\tdecKey[j] = tmp;\n\t\t\t} else {\n\t\t\t\tdecKey[j] = decTable[0][sbox[tmp >>> 24]] ^\n\t\t\t\t\tdecTable[1][sbox[tmp >> 16 & 255]] ^\n\t\t\t\t\tdecTable[2][sbox[tmp >> 8 & 255]] ^\n\t\t\t\t\tdecTable[3][sbox[tmp & 255]];\n\t\t\t}\n\t\t}\n\t}\n\t// public\n\t/* Something like this might appear here eventually\n\tname: \"AES\",\n\tblockSize: 4,\n\tkeySizes: [4,6,8],\n\t*/\n\n\t/**\n\t * Encrypt an array of 4 big-endian words.\n\t * @param {Array} data The plaintext.\n\t * @return {Array} The ciphertext.\n\t */\n\tencrypt(data) {\n\t\treturn this._crypt(data, 0);\n\t}\n\n\t/**\n\t * Decrypt an array of 4 big-endian words.\n\t * @param {Array} data The ciphertext.\n\t * @return {Array} The plaintext.\n\t */\n\tdecrypt(data) {\n\t\treturn this._crypt(data, 1);\n\t}\n\n\t/**\n\t * Expand the S-box tables.\n\t *\n\t * @private\n\t */\n\t_precompute() {\n\t\tconst encTable = this._tables[0];\n\t\tconst decTable = this._tables[1];\n\t\tconst sbox = encTable[4];\n\t\tconst sboxInv = decTable[4];\n\t\tconst d = [];\n\t\tconst th = [];\n\t\tlet xInv, x2, x4, x8;\n\n\t\t// Compute double and third tables\n\t\tfor (let i = 0; i < 256; i++) {\n\t\t\tth[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n\t\t}\n\n\t\tfor (let x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n\t\t\t// Compute sbox\n\t\t\tlet s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n\t\t\ts = s >> 8 ^ s & 255 ^ 99;\n\t\t\tsbox[x] = s;\n\t\t\tsboxInv[s] = x;\n\n\t\t\t// Compute MixColumns\n\t\t\tx8 = d[x4 = d[x2 = d[x]]];\n\t\t\tlet tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n\t\t\tlet tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tencTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n\t\t\t\tdecTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n\t\t\t}\n\t\t}\n\n\t\t// Compactify.  Considerable speedup on Firefox.\n\t\tfor (let i = 0; i < 5; i++) {\n\t\t\tencTable[i] = encTable[i].slice(0);\n\t\t\tdecTable[i] = decTable[i].slice(0);\n\t\t}\n\t}\n\n\t/**\n\t * Encryption and decryption core.\n\t * @param {Array} input Four words to be encrypted or decrypted.\n\t * @param dir The direction, 0 for encrypt and 1 for decrypt.\n\t * @return {Array} The four encrypted or decrypted words.\n\t * @private\n\t */\n\t_crypt(input, dir) {\n\t\tif (input.length !== 4) {\n\t\t\tthrow new Error(\"invalid aes block size\");\n\t\t}\n\n\t\tconst key = this._key[dir];\n\n\t\tconst nInnerRounds = key.length / 4 - 2;\n\t\tconst out = [0, 0, 0, 0];\n\t\tconst table = this._tables[dir];\n\n\t\t// load up the tables\n\t\tconst t0 = table[0];\n\t\tconst t1 = table[1];\n\t\tconst t2 = table[2];\n\t\tconst t3 = table[3];\n\t\tconst sbox = table[4];\n\n\t\t// state variables a,b,c,d are loaded with pre-whitened data\n\t\tlet a = input[0] ^ key[0];\n\t\tlet b = input[dir ? 3 : 1] ^ key[1];\n\t\tlet c = input[2] ^ key[2];\n\t\tlet d = input[dir ? 1 : 3] ^ key[3];\n\t\tlet kIndex = 4;\n\t\tlet a2, b2, c2;\n\n\t\t// Inner rounds.  Cribbed from OpenSSL.\n\t\tfor (let i = 0; i < nInnerRounds; i++) {\n\t\t\ta2 = t0[a >>> 24] ^ t1[b >> 16 & 255] ^ t2[c >> 8 & 255] ^ t3[d & 255] ^ key[kIndex];\n\t\t\tb2 = t0[b >>> 24] ^ t1[c >> 16 & 255] ^ t2[d >> 8 & 255] ^ t3[a & 255] ^ key[kIndex + 1];\n\t\t\tc2 = t0[c >>> 24] ^ t1[d >> 16 & 255] ^ t2[a >> 8 & 255] ^ t3[b & 255] ^ key[kIndex + 2];\n\t\t\td = t0[d >>> 24] ^ t1[a >> 16 & 255] ^ t2[b >> 8 & 255] ^ t3[c & 255] ^ key[kIndex + 3];\n\t\t\tkIndex += 4;\n\t\t\ta = a2; b = b2; c = c2;\n\t\t}\n\n\t\t// Last round.\n\t\tfor (let i = 0; i < 4; i++) {\n\t\t\tout[dir ? 3 & -i : i] =\n\t\t\t\tsbox[a >>> 24] << 24 ^\n\t\t\t\tsbox[b >> 16 & 255] << 16 ^\n\t\t\t\tsbox[c >> 8 & 255] << 8 ^\n\t\t\t\tsbox[d & 255] ^\n\t\t\t\tkey[kIndex++];\n\t\t\ta2 = a; a = b; b = c; c = d; d = a2;\n\t\t}\n\n\t\treturn out;\n\t}\n};\n\n/**\n * Random values\n * @namespace\n */\nconst random = {\n\t/** \n\t * Generate random words with pure js, cryptographically not as strong & safe as native implementation.\n\t * @param {TypedArray} typedArray The array to fill.\n\t * @return {TypedArray} The random values.\n\t */\n\tgetRandomValues(typedArray) {\n\t\tconst words = new Uint32Array(typedArray.buffer);\n\t\tconst r = (m_w) => {\n\t\t\tlet m_z = 0x3ade68b1;\n\t\t\tconst mask = 0xffffffff;\n\t\t\treturn function () {\n\t\t\t\tm_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t\t\t\tm_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t\t\t\tconst result = ((((m_z << 0x10) + m_w) & mask) / 0x100000000) + .5;\n\t\t\t\treturn result * (Math.random() > .5 ? 1 : -1);\n\t\t\t};\n\t\t};\n\t\tfor (let i = 0, rcache; i < typedArray.length; i += 4) {\n\t\t\tconst _r = r((rcache || Math.random()) * 0x100000000);\n\t\t\trcache = _r() * 0x3ade67b7;\n\t\t\twords[i / 4] = (_r() * 0x100000000) | 0;\n\t\t}\n\t\treturn typedArray;\n\t}\n};\n\n/** @fileOverview CTR mode implementation.\n *\n * Special thanks to Roy Nicholson for pointing out a bug in our\n * implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** Brian Gladman's CTR Mode.\n* @constructor\n* @param {Object} _prf The aes instance to generate key.\n* @param {bitArray} _iv The iv for ctr mode, it must be 128 bits.\n*/\n\nconst mode = {};\n\n/**\n * Brian Gladman's CTR Mode.\n * @namespace\n */\nmode.ctrGladman = class {\n\tconstructor(prf, iv) {\n\t\tthis._prf = prf;\n\t\tthis._initIv = iv;\n\t\tthis._iv = iv;\n\t}\n\n\treset() {\n\t\tthis._iv = this._initIv;\n\t}\n\n\t/** Input some data to calculate.\n\t * @param {bitArray} data the data to process, it must be intergral multiple of 128 bits unless it's the last.\n\t */\n\tupdate(data) {\n\t\treturn this.calculate(this._prf, data, this._iv);\n\t}\n\n\tincWord(word) {\n\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tlet b1 = (word >> 16) & 0xff;\n\t\t\tlet b2 = (word >> 8) & 0xff;\n\t\t\tlet b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) { // overflow b1   \n\t\t\t\tb1 = 0;\n\t\t\t\tif (b2 === 0xff) {\n\t\t\t\t\tb2 = 0;\n\t\t\t\t\tif (b3 === 0xff) {\n\t\t\t\t\t\tb3 = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++b3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t++b2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t} else {\n\t\t\tword += (0x01 << 24);\n\t\t}\n\t\treturn word;\n\t}\n\n\tincCounter(counter) {\n\t\tif ((counter[0] = this.incWord(counter[0])) === 0) {\n\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\tcounter[1] = this.incWord(counter[1]);\n\t\t}\n\t}\n\n\tcalculate(prf, data, iv) {\n\t\tlet l;\n\t\tif (!(l = data.length)) {\n\t\t\treturn [];\n\t\t}\n\t\tconst bl = bitArray.bitLength(data);\n\t\tfor (let i = 0; i < l; i += 4) {\n\t\t\tthis.incCounter(iv);\n\t\t\tconst e = prf.encrypt(iv);\n\t\t\tdata[i] ^= e[0];\n\t\t\tdata[i + 1] ^= e[1];\n\t\t\tdata[i + 2] ^= e[2];\n\t\t\tdata[i + 3] ^= e[3];\n\t\t}\n\t\treturn bitArray.clamp(data, bl);\n\t}\n};\n\nconst misc = {\n\timportKey(password) {\n\t\treturn new misc.hmacSha1(codec.bytes.toBits(password));\n\t},\n\tpbkdf2(prf, salt, count, length) {\n\t\tcount = count || 10000;\n\t\tif (length < 0 || count < 0) {\n\t\t\tthrow new Error(\"invalid params to pbkdf2\");\n\t\t}\n\t\tconst byteLength = ((length >> 5) + 1) << 2;\n\t\tlet u, ui, i, j, k;\n\t\tconst arrayBuffer = new ArrayBuffer(byteLength);\n\t\tconst out = new DataView(arrayBuffer);\n\t\tlet outLength = 0;\n\t\tconst b = bitArray;\n\t\tsalt = codec.bytes.toBits(salt);\n\t\tfor (k = 1; outLength < (byteLength || 1); k++) {\n\t\t\tu = ui = prf.encrypt(b.concat(salt, [k]));\n\t\t\tfor (i = 1; i < count; i++) {\n\t\t\t\tui = prf.encrypt(ui);\n\t\t\t\tfor (j = 0; j < ui.length; j++) {\n\t\t\t\t\tu[j] ^= ui[j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (i = 0; outLength < (byteLength || 1) && i < u.length; i++) {\n\t\t\t\tout.setInt32(outLength, u[i]);\n\t\t\t\toutLength += 4;\n\t\t\t}\n\t\t}\n\t\treturn arrayBuffer.slice(0, length / 8);\n\t}\n};\n\n/** @fileOverview HMAC implementation.\n *\n * @author Emily Stark\n * @author Mike Hamburg\n * @author Dan Boneh\n */\n\n/** HMAC with the specified hash function.\n * @constructor\n * @param {bitArray} key the key for HMAC.\n * @param {Object} [Hash=hash.sha1] The hash function to use.\n */\nmisc.hmacSha1 = class {\n\n\tconstructor(key) {\n\t\tconst hmac = this;\n\t\tconst Hash = hmac._hash = hash.sha1;\n\t\tconst exKey = [[], []];\n\t\thmac._baseHash = [new Hash(), new Hash()];\n\t\tconst bs = hmac._baseHash[0].blockSize / 32;\n\n\t\tif (key.length > bs) {\n\t\t\tkey = Hash.hash(key);\n\t\t}\n\n\t\tfor (let i = 0; i < bs; i++) {\n\t\t\texKey[0][i] = key[i] ^ 0x36363636;\n\t\t\texKey[1][i] = key[i] ^ 0x5C5C5C5C;\n\t\t}\n\n\t\thmac._baseHash[0].update(exKey[0]);\n\t\thmac._baseHash[1].update(exKey[1]);\n\t\thmac._resultHash = new Hash(hmac._baseHash[0]);\n\t}\n\treset() {\n\t\tconst hmac = this;\n\t\thmac._resultHash = new hmac._hash(hmac._baseHash[0]);\n\t\thmac._updated = false;\n\t}\n\n\tupdate(data) {\n\t\tconst hmac = this;\n\t\thmac._updated = true;\n\t\thmac._resultHash.update(data);\n\t}\n\n\tdigest() {\n\t\tconst hmac = this;\n\t\tconst w = hmac._resultHash.finalize();\n\t\tconst result = new (hmac._hash)(hmac._baseHash[1]).update(w).finalize();\n\n\t\thmac.reset();\n\n\t\treturn result;\n\t}\n\n\tencrypt(data) {\n\t\tif (!this._updated) {\n\t\t\tthis.update(data);\n\t\t\treturn this.digest(data);\n\t\t} else {\n\t\t\tthrow new Error(\"encrypt on already updated hmac called!\");\n\t\t}\n\t}\n};\n\nexport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode,\n\trandom\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto */\n\nconst GET_RANDOM_VALUES_SUPPORTED = typeof crypto != \"undefined\" && typeof crypto.getRandomValues == \"function\";\n\nimport {\n\trandom\n} from \"./codecs/sjcl.js\";\n\nconst ERR_INVALID_PASSWORD = \"Invalid password\";\nconst ERR_INVALID_SIGNATURE = \"Invalid signature\";\n\nexport {\n\tgetRandomValues,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE\n};\n\nfunction getRandomValues(array) {\n\tif (GET_RANDOM_VALUES_SUPPORTED) {\n\t\treturn crypto.getRandomValues(array);\n\t} else {\n\t\treturn random.getRandomValues(array);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global crypto, TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { encodeText } from \"./../util/encode-text.js\";\nimport {\n\tcipher,\n\tcodec,\n\tmisc,\n\tmode\n} from \"./codecs/sjcl.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tgetRandomValues\n} from \"./common-crypto.js\";\n\nconst BLOCK_LENGTH = 16;\nconst RAW_FORMAT = \"raw\";\nconst PBKDF2_ALGORITHM = { name: \"PBKDF2\" };\nconst HASH_ALGORITHM = { name: \"HMAC\" };\nconst HASH_FUNCTION = \"SHA-1\";\nconst BASE_KEY_ALGORITHM = Object.assign({ hash: HASH_ALGORITHM }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_ALGORITHM = Object.assign({ iterations: 1000, hash: { name: HASH_FUNCTION } }, PBKDF2_ALGORITHM);\nconst DERIVED_BITS_USAGE = [\"deriveBits\"];\nconst SALT_LENGTH = [8, 12, 16];\nconst KEY_LENGTH = [16, 24, 32];\nconst SIGNATURE_LENGTH = 10;\nconst COUNTER_DEFAULT_VALUE = [0, 0, 0, 0];\nconst UNDEFINED_TYPE = \"undefined\";\nconst FUNCTION_TYPE = \"function\";\n// deno-lint-ignore valid-typeof\nconst CRYPTO_API_SUPPORTED = typeof crypto != UNDEFINED_TYPE;\nconst subtle = CRYPTO_API_SUPPORTED && crypto.subtle;\nconst SUBTLE_API_SUPPORTED = CRYPTO_API_SUPPORTED && typeof subtle != UNDEFINED_TYPE;\nconst codecBytes = codec.bytes;\nconst Aes = cipher.aes;\nconst CtrGladman = mode.ctrGladman;\nconst HmacSha1 = misc.hmacSha1;\n\nlet IMPORT_KEY_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.importKey == FUNCTION_TYPE;\nlet DERIVE_BITS_SUPPORTED = CRYPTO_API_SUPPORTED && SUBTLE_API_SUPPORTED && typeof subtle.deriveBits == FUNCTION_TYPE;\n\nclass AESDecryptionStream extends TransformStream {\n\n\tconstructor({ password, signed, encryptionStrength }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\n\t\t\t\t\tpassword,\n\t\t\t\t\tsigned,\n\t\t\t\t\tstrength: encryptionStrength - 1,\n\t\t\t\t\tpending: new Uint8Array()\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tconst aesCrypto = this;\n\t\t\t\tconst {\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength,\n\t\t\t\t\tresolveReady,\n\t\t\t\t\tready\n\t\t\t\t} = aesCrypto;\n\t\t\t\tif (password) {\n\t\t\t\t\tawait createDecryptionKeys(aesCrypto, strength, password, subarray(chunk, 0, SALT_LENGTH[strength] + 2));\n\t\t\t\t\tchunk = subarray(chunk, SALT_LENGTH[strength] + 2);\n\t\t\t\t\tresolveReady();\n\t\t\t\t} else {\n\t\t\t\t\tawait ready;\n\t\t\t\t}\n\t\t\t\tconst output = new Uint8Array(chunk.length - SIGNATURE_LENGTH - ((chunk.length - SIGNATURE_LENGTH) % BLOCK_LENGTH));\n\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, 0, SIGNATURE_LENGTH, true));\n\t\t\t},\n\t\t\tasync flush(controller) {\n\t\t\t\tconst {\n\t\t\t\t\tsigned,\n\t\t\t\t\tctr,\n\t\t\t\t\thmac,\n\t\t\t\t\tpending,\n\t\t\t\t\tready\n\t\t\t\t} = this;\n\t\t\t\tawait ready;\n\t\t\t\tconst chunkToDecrypt = subarray(pending, 0, pending.length - SIGNATURE_LENGTH);\n\t\t\t\tconst originalSignature = subarray(pending, pending.length - SIGNATURE_LENGTH);\n\t\t\t\tlet decryptedChunkArray = new Uint8Array();\n\t\t\t\tif (chunkToDecrypt.length) {\n\t\t\t\t\tconst encryptedChunk = toBits(codecBytes, chunkToDecrypt);\n\t\t\t\t\thmac.update(encryptedChunk);\n\t\t\t\t\tconst decryptedChunk = ctr.update(encryptedChunk);\n\t\t\t\t\tdecryptedChunkArray = fromBits(codecBytes, decryptedChunk);\n\t\t\t\t}\n\t\t\t\tif (signed) {\n\t\t\t\t\tconst signature = subarray(fromBits(codecBytes, hmac.digest()), 0, SIGNATURE_LENGTH);\n\t\t\t\t\tfor (let indexSignature = 0; indexSignature < SIGNATURE_LENGTH; indexSignature++) {\n\t\t\t\t\t\tif (signature[indexSignature] != originalSignature[indexSignature]) {\n\t\t\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontroller.enqueue(decryptedChunkArray);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass AESEncryptionStream extends TransformStream {\n\n\tconstructor({ password, encryptionStrength }) {\n\t\t// deno-lint-ignore prefer-const\n\t\tlet stream;\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tready: new Promise(resolve => this.resolveReady = resolve),\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength: encryptionStrength - 1,\n\t\t\t\t\tpending: new Uint8Array()\n\t\t\t\t});\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tconst aesCrypto = this;\n\t\t\t\tconst {\n\t\t\t\t\tpassword,\n\t\t\t\t\tstrength,\n\t\t\t\t\tresolveReady,\n\t\t\t\t\tready\n\t\t\t\t} = aesCrypto;\n\t\t\t\tlet preamble = new Uint8Array();\n\t\t\t\tif (password) {\n\t\t\t\t\tpreamble = await createEncryptionKeys(aesCrypto, strength, password);\n\t\t\t\t\tresolveReady();\n\t\t\t\t} else {\n\t\t\t\t\tawait ready;\n\t\t\t\t}\n\t\t\t\tconst output = new Uint8Array(preamble.length + chunk.length - (chunk.length % BLOCK_LENGTH));\n\t\t\t\toutput.set(preamble, 0);\n\t\t\t\tcontroller.enqueue(append(aesCrypto, chunk, output, preamble.length, 0));\n\t\t\t},\n\t\t\tasync flush(controller) {\n\t\t\t\tconst {\n\t\t\t\t\tctr,\n\t\t\t\t\thmac,\n\t\t\t\t\tpending,\n\t\t\t\t\tready\n\t\t\t\t} = this;\n\t\t\t\tawait ready;\n\t\t\t\tlet encryptedChunkArray = new Uint8Array();\n\t\t\t\tif (pending.length) {\n\t\t\t\t\tconst encryptedChunk = ctr.update(toBits(codecBytes, pending));\n\t\t\t\t\thmac.update(encryptedChunk);\n\t\t\t\t\tencryptedChunkArray = fromBits(codecBytes, encryptedChunk);\n\t\t\t\t}\n\t\t\t\tstream.signature = fromBits(codecBytes, hmac.digest()).slice(0, SIGNATURE_LENGTH);\n\t\t\t\tcontroller.enqueue(concat(encryptedChunkArray, stream.signature));\n\t\t\t}\n\t\t});\n\t\tstream = this;\n\t}\n}\n\nexport {\n\tAESDecryptionStream,\n\tAESEncryptionStream,\n\tERR_INVALID_PASSWORD\n};\n\nfunction append(aesCrypto, input, output, paddingStart, paddingEnd, verifySignature) {\n\tconst {\n\t\tctr,\n\t\thmac,\n\t\tpending\n\t} = aesCrypto;\n\tconst inputLength = input.length - paddingEnd;\n\tif (pending.length) {\n\t\tinput = concat(pending, input);\n\t\toutput = expand(output, inputLength - (inputLength % BLOCK_LENGTH));\n\t}\n\tlet offset;\n\tfor (offset = 0; offset <= inputLength - BLOCK_LENGTH; offset += BLOCK_LENGTH) {\n\t\tconst inputChunk = toBits(codecBytes, subarray(input, offset, offset + BLOCK_LENGTH));\n\t\tif (verifySignature) {\n\t\t\thmac.update(inputChunk);\n\t\t}\n\t\tconst outputChunk = ctr.update(inputChunk);\n\t\tif (!verifySignature) {\n\t\t\thmac.update(outputChunk);\n\t\t}\n\t\toutput.set(fromBits(codecBytes, outputChunk), offset + paddingStart);\n\t}\n\taesCrypto.pending = subarray(input, offset);\n\treturn output;\n}\n\nasync function createDecryptionKeys(decrypt, strength, password, preamble) {\n\tconst passwordVerificationKey = await createKeys(decrypt, strength, password, subarray(preamble, 0, SALT_LENGTH[strength]));\n\tconst passwordVerification = subarray(preamble, SALT_LENGTH[strength]);\n\tif (passwordVerificationKey[0] != passwordVerification[0] || passwordVerificationKey[1] != passwordVerification[1]) {\n\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t}\n}\n\nasync function createEncryptionKeys(encrypt, strength, password) {\n\tconst salt = getRandomValues(new Uint8Array(SALT_LENGTH[strength]));\n\tconst passwordVerification = await createKeys(encrypt, strength, password, salt);\n\treturn concat(salt, passwordVerification);\n}\n\nasync function createKeys(aesCrypto, strength, password, salt) {\n\taesCrypto.password = null;\n\tconst encodedPassword = encodeText(password);\n\tconst baseKey = await importKey(RAW_FORMAT, encodedPassword, BASE_KEY_ALGORITHM, false, DERIVED_BITS_USAGE);\n\tconst derivedBits = await deriveBits(Object.assign({ salt }, DERIVED_BITS_ALGORITHM), baseKey, 8 * ((KEY_LENGTH[strength] * 2) + 2));\n\tconst compositeKey = new Uint8Array(derivedBits);\n\tconst key = toBits(codecBytes, subarray(compositeKey, 0, KEY_LENGTH[strength]));\n\tconst authentication = toBits(codecBytes, subarray(compositeKey, KEY_LENGTH[strength], KEY_LENGTH[strength] * 2));\n\tconst passwordVerification = subarray(compositeKey, KEY_LENGTH[strength] * 2);\n\tObject.assign(aesCrypto, {\n\t\tkeys: {\n\t\t\tkey,\n\t\t\tauthentication,\n\t\t\tpasswordVerification\n\t\t},\n\t\tctr: new CtrGladman(new Aes(key), Array.from(COUNTER_DEFAULT_VALUE)),\n\t\thmac: new HmacSha1(authentication)\n\t});\n\treturn passwordVerification;\n}\n\nasync function importKey(format, password, algorithm, extractable, keyUsages) {\n\tif (IMPORT_KEY_SUPPORTED) {\n\t\ttry {\n\t\t\treturn await subtle.importKey(format, password, algorithm, extractable, keyUsages);\n\t\t} catch (_error) {\n\t\t\tIMPORT_KEY_SUPPORTED = false;\n\t\t\treturn misc.importKey(password);\n\t\t}\n\t} else {\n\t\treturn misc.importKey(password);\n\t}\n}\n\nasync function deriveBits(algorithm, baseKey, length) {\n\tif (DERIVE_BITS_SUPPORTED) {\n\t\ttry {\n\t\t\treturn await subtle.deriveBits(algorithm, baseKey, length);\n\t\t} catch (_error) {\n\t\t\tDERIVE_BITS_SUPPORTED = false;\n\t\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t\t}\n\t} else {\n\t\treturn misc.pbkdf2(baseKey, algorithm.salt, DERIVED_BITS_ALGORITHM.iterations, length);\n\t}\n}\n\nfunction concat(leftArray, rightArray) {\n\tlet array = leftArray;\n\tif (leftArray.length + rightArray.length) {\n\t\tarray = new Uint8Array(leftArray.length + rightArray.length);\n\t\tarray.set(leftArray, 0);\n\t\tarray.set(rightArray, leftArray.length);\n\t}\n\treturn array;\n}\n\nfunction expand(inputArray, length) {\n\tif (length && length > inputArray.length) {\n\t\tconst array = inputArray;\n\t\tinputArray = new Uint8Array(length);\n\t\tinputArray.set(array, 0);\n\t}\n\treturn inputArray;\n}\n\nfunction subarray(array, begin, end) {\n\treturn array.subarray(begin, end);\n}\n\nfunction fromBits(codecBytes, chunk) {\n\treturn codecBytes.fromBits(chunk);\n}\nfunction toBits(codecBytes, chunk) {\n\treturn codecBytes.toBits(chunk);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { Crc32 } from \"./codecs/crc32.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tgetRandomValues\n} from \"./common-crypto.js\";\n\nconst HEADER_LENGTH = 12;\n\nclass ZipCryptoDecryptionStream extends TransformStream {\n\n\tconstructor({ password, passwordVerification }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tpassword,\n\t\t\t\t\tpasswordVerification\n\t\t\t\t});\n\t\t\t\tcreateKeys(this, password);\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tconst zipCrypto = this;\n\t\t\t\tif (zipCrypto.password) {\n\t\t\t\t\tconst decryptedHeader = decrypt(zipCrypto, chunk.subarray(0, HEADER_LENGTH));\n\t\t\t\t\tzipCrypto.password = null;\n\t\t\t\t\tif (decryptedHeader[HEADER_LENGTH - 1] != zipCrypto.passwordVerification) {\n\t\t\t\t\t\tthrow new Error(ERR_INVALID_PASSWORD);\n\t\t\t\t\t}\n\t\t\t\t\tchunk = chunk.subarray(HEADER_LENGTH);\n\t\t\t\t}\n\t\t\t\tcontroller.enqueue(decrypt(zipCrypto, chunk));\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass ZipCryptoEncryptionStream extends TransformStream {\n\n\tconstructor({ password, passwordVerification }) {\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tObject.assign(this, {\n\t\t\t\t\tpassword,\n\t\t\t\t\tpasswordVerification\n\t\t\t\t});\n\t\t\t\tcreateKeys(this, password);\n\t\t\t},\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tconst zipCrypto = this;\n\t\t\t\tlet output;\n\t\t\t\tlet offset;\n\t\t\t\tif (zipCrypto.password) {\n\t\t\t\t\tzipCrypto.password = null;\n\t\t\t\t\tconst header = getRandomValues(new Uint8Array(HEADER_LENGTH));\n\t\t\t\t\theader[HEADER_LENGTH - 1] = zipCrypto.passwordVerification;\n\t\t\t\t\toutput = new Uint8Array(chunk.length + header.length);\n\t\t\t\t\toutput.set(encrypt(zipCrypto, header), 0);\n\t\t\t\t\toffset = HEADER_LENGTH;\n\t\t\t\t} else {\n\t\t\t\t\toutput = new Uint8Array(chunk.length);\n\t\t\t\t\toffset = 0;\n\t\t\t\t}\n\t\t\t\toutput.set(encrypt(zipCrypto, chunk), offset);\n\t\t\t\tcontroller.enqueue(output);\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tZipCryptoDecryptionStream,\n\tZipCryptoEncryptionStream,\n\tERR_INVALID_PASSWORD\n};\n\nfunction decrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, output[index]);\n\t}\n\treturn output;\n}\n\nfunction encrypt(target, input) {\n\tconst output = new Uint8Array(input.length);\n\tfor (let index = 0; index < input.length; index++) {\n\t\toutput[index] = getByte(target) ^ input[index];\n\t\tupdateKeys(target, input[index]);\n\t}\n\treturn output;\n}\n\nfunction createKeys(target, password) {\n\tconst keys = [0x12345678, 0x23456789, 0x34567890];\n\tObject.assign(target, {\n\t\tkeys,\n\t\tcrcKey0: new Crc32(keys[0]),\n\t\tcrcKey2: new Crc32(keys[2]),\n\t});\n\tfor (let index = 0; index < password.length; index++) {\n\t\tupdateKeys(target, password.charCodeAt(index));\n\t}\n}\n\nfunction updateKeys(target, byte) {\n\tlet [key0, key1, key2] = target.keys;\n\ttarget.crcKey0.append([byte]);\n\tkey0 = ~target.crcKey0.get();\n\tkey1 = getInt32(Math.imul(getInt32(key1 + getInt8(key0)), 134775813) + 1);\n\ttarget.crcKey2.append([key1 >>> 24]);\n\tkey2 = ~target.crcKey2.get();\n\ttarget.keys = [key0, key1, key2];\n}\n\nfunction getByte(target) {\n\tconst temp = target.keys[2] | 2;\n\treturn getInt8(Math.imul(temp, (temp ^ 1)) >>> 8);\n}\n\nfunction getInt8(number) {\n\treturn number & 0xFF;\n}\n\nfunction getInt32(number) {\n\treturn number & 0xFFFFFFFF;\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport { Crc32Stream } from \"./crc32-stream.js\";\nimport {\n\tAESEncryptionStream,\n\tAESDecryptionStream\n} from \"./aes-crypto-stream.js\";\nimport {\n\tZipCryptoEncryptionStream,\n\tZipCryptoDecryptionStream\n} from \"./zip-crypto-stream.js\";\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE\n} from \"./common-crypto.js\";\n\nconst COMPRESSION_FORMAT = \"deflate-raw\";\n\nclass DeflateStream extends TransformStream {\n\n\tconstructor(options, { chunkSize, CompressionStream, CompressionStreamNative }) {\n\t\tsuper({});\n\t\tconst { compressed, encrypted, useCompressionStream, zipCrypto, signed, level } = options;\n\t\tconst stream = this;\n\t\tlet crc32Stream, encryptionStream;\n\t\tlet readable = filterEmptyChunks(super.readable);\n\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t[readable, crc32Stream] = readable.tee();\n\t\t\tcrc32Stream = pipeThrough(crc32Stream, new Crc32Stream());\n\t\t}\n\t\tif (compressed) {\n\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { level, chunkSize }, CompressionStreamNative, CompressionStream);\n\t\t}\n\t\tif (encrypted) {\n\t\t\tif (zipCrypto) {\n\t\t\t\treadable = pipeThrough(readable, new ZipCryptoEncryptionStream(options));\n\t\t\t} else {\n\t\t\t\tencryptionStream = new AESEncryptionStream(options);\n\t\t\t\treadable = pipeThrough(readable, encryptionStream);\n\t\t\t}\n\t\t}\n\t\tsetReadable(stream, readable, async () => {\n\t\t\tlet signature;\n\t\t\tif (encrypted && !zipCrypto) {\n\t\t\t\tsignature = encryptionStream.signature;\n\t\t\t}\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t\tsignature = await crc32Stream.getReader().read();\n\t\t\t\tsignature = new DataView(signature.value.buffer).getUint32(0);\n\t\t\t}\n\t\t\tstream.signature = signature;\n\t\t});\n\t}\n}\n\nclass InflateStream extends TransformStream {\n\n\tconstructor(options, { chunkSize, DecompressionStream, DecompressionStreamNative }) {\n\t\tsuper({});\n\t\tconst { zipCrypto, encrypted, signed, signature, compressed, useCompressionStream } = options;\n\t\tlet crc32Stream, decryptionStream;\n\t\tlet readable = filterEmptyChunks(super.readable);\n\t\tif (encrypted) {\n\t\t\tif (zipCrypto) {\n\t\t\t\treadable = pipeThrough(readable, new ZipCryptoDecryptionStream(options));\n\t\t\t} else {\n\t\t\t\tdecryptionStream = new AESDecryptionStream(options);\n\t\t\t\treadable = pipeThrough(readable, decryptionStream);\n\t\t\t}\n\t\t}\n\t\tif (compressed) {\n\t\t\treadable = pipeThroughCommpressionStream(readable, useCompressionStream, { chunkSize }, DecompressionStreamNative, DecompressionStream);\n\t\t}\n\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t[readable, crc32Stream] = readable.tee();\n\t\t\tcrc32Stream = pipeThrough(crc32Stream, new Crc32Stream());\n\t\t}\n\t\tsetReadable(this, readable, async () => {\n\t\t\tif ((!encrypted || zipCrypto) && signed) {\n\t\t\t\tconst streamSignature = await crc32Stream.getReader().read();\n\t\t\t\tconst dataViewSignature = new DataView(streamSignature.value.buffer);\n\t\t\t\tif (signature != dataViewSignature.getUint32(0, false)) {\n\t\t\t\t\tthrow new Error(ERR_INVALID_SIGNATURE);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport {\n\tDeflateStream,\n\tInflateStream,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE\n};\n\nfunction filterEmptyChunks(readable) {\n\treturn pipeThrough(readable, new TransformStream({\n\t\ttransform(chunk, controller) {\n\t\t\tif (chunk && chunk.length) {\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t}\n\t\t}\n\t}));\n}\n\nfunction setReadable(stream, readable, flush) {\n\treadable = pipeThrough(readable, new TransformStream({ flush }));\n\tObject.defineProperty(stream, \"readable\", {\n\t\tget() {\n\t\t\treturn readable;\n\t\t}\n\t});\n}\n\nfunction pipeThroughCommpressionStream(readable, useCompressionStream, options, CodecStreamNative, CodecStream) {\n\ttry {\n\t\tconst CompressionStream = useCompressionStream && CodecStreamNative ? CodecStreamNative : CodecStream;\n\t\treadable = pipeThrough(readable, new CompressionStream(COMPRESSION_FORMAT, options));\n\t} catch (error) {\n\t\tif (useCompressionStream) {\n\t\t\treadable = pipeThrough(readable, new CodecStream(COMPRESSION_FORMAT, options));\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n\treturn readable;\n}\n\nfunction pipeThrough(readable, transformStream) {\n\treturn readable.pipeThrough(transformStream);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/*\n * This program is based on JZlib 1.0.2 ymnk, JCraft,Inc.\n * JZlib is based on zlib-1.1.3, so all credit should go authors\n * Jean-loup Gailly(jloup@gzip.org) and Mark Adler(madler@alumni.caltech.edu)\n * and contributors of zlib.\n */\n\n/* global TransformStream */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tInflateStream,\n\tDeflateStream\n} from \"./zip-entry-stream.js\";\n\nconst MESSAGE_EVENT_TYPE = \"message\";\nconst MESSAGE_START = \"start\";\nconst MESSAGE_PULL = \"pull\";\nconst MESSAGE_DATA = \"data\";\nconst MESSAGE_ACK_DATA = \"ack\";\nconst MESSAGE_CLOSE = \"close\";\nconst CODEC_DEFLATE = \"deflate\";\nconst CODEC_INFLATE = \"inflate\";\n\nexport {\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tMESSAGE_EVENT_TYPE,\n\tMESSAGE_START,\n\tMESSAGE_PULL,\n\tMESSAGE_DATA,\n\tMESSAGE_ACK_DATA,\n\tMESSAGE_CLOSE,\n\tERR_INVALID_PASSWORD,\n\tERR_INVALID_SIGNATURE,\n\tCodecStream\n};\n\nclass CodecStream extends TransformStream {\n\n\tconstructor(options, config) {\n\t\tsuper({});\n\t\tconst codec = this;\n\t\tconst { codecType } = options;\n\t\tlet Stream;\n\t\tif (codecType.startsWith(CODEC_DEFLATE)) {\n\t\t\tStream = DeflateStream;\n\t\t} else if (codecType.startsWith(CODEC_INFLATE)) {\n\t\t\tStream = InflateStream;\n\t\t}\n\t\tlet size = 0;\n\t\tconst stream = new Stream(options, config);\n\t\tconst readable = super.readable;\n\t\tconst transformStream = new TransformStream({\n\t\t\ttransform(chunk, controller) {\n\t\t\t\tif (chunk && chunk.length) {\n\t\t\t\t\tsize += chunk.length;\n\t\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\tconst { signature } = stream;\n\t\t\t\tObject.assign(codec, {\n\t\t\t\t\tsignature,\n\t\t\t\t\tsize\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(codec, \"readable\", {\n\t\t\tget() {\n\t\t\t\treturn readable.pipeThrough(stream).pipeThrough(transformStream);\n\t\t\t}\n\t\t});\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Worker, URL, TransformStream, WritableStream */\n\nimport {\n\tUNDEFINED_TYPE,\n\tFUNCTION_TYPE\n} from \"./constants.js\";\nimport {\n\tCodecStream,\n\tMESSAGE_EVENT_TYPE,\n\tMESSAGE_START,\n\tMESSAGE_PULL,\n\tMESSAGE_DATA,\n\tMESSAGE_ACK_DATA,\n\tMESSAGE_CLOSE\n} from \"./streams/codec-stream.js\";\n\n// deno-lint-ignore valid-typeof\nconst WEB_WORKERS_SUPPORTED = typeof Worker != UNDEFINED_TYPE;\n\nexport {\n\tCodecWorker\n};\n\nclass CodecWorker {\n\n\tconstructor(workerData, { readable, writable }, { options, config, streamOptions, useWebWorkers, transferStreams, scripts }, onTaskFinished) {\n\t\tconst { signal } = streamOptions;\n\t\tObject.assign(workerData, {\n\t\t\tbusy: true,\n\t\t\treadable: readable.pipeThrough(new ProgressWatcherStream(readable, streamOptions, config), { signal }),\n\t\t\twritable,\n\t\t\toptions: Object.assign({}, options),\n\t\t\tscripts,\n\t\t\ttransferStreams,\n\t\t\tterminate() {\n\t\t\t\tconst { worker, busy } = workerData;\n\t\t\t\tif (worker && !busy) {\n\t\t\t\t\tworker.terminate();\n\t\t\t\t\tworkerData.interface = null;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonTaskFinished() {\n\t\t\t\tworkerData.busy = false;\n\t\t\t\tonTaskFinished(workerData);\n\t\t\t}\n\t\t});\n\t\treturn (useWebWorkers && WEB_WORKERS_SUPPORTED ? createWebWorkerInterface : createWorkerInterface)(workerData, config);\n\t}\n}\n\nclass ProgressWatcherStream extends TransformStream {\n\n\tconstructor(readableSource, { onstart, onprogress, size, onend }, { chunkSize }) {\n\t\tlet chunkOffset = 0;\n\t\tsuper({\n\t\t\tstart() {\n\t\t\t\tif (onstart) {\n\t\t\t\t\tcallHandler(onstart, size);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync transform(chunk, controller) {\n\t\t\t\tchunkOffset += chunk.length;\n\t\t\t\tif (onprogress) {\n\t\t\t\t\tawait callHandler(onprogress, chunkOffset, size);\n\t\t\t\t}\n\t\t\t\tcontroller.enqueue(chunk);\n\t\t\t},\n\t\t\tflush() {\n\t\t\t\treadableSource.size = chunkOffset;\n\t\t\t\tif (onend) {\n\t\t\t\t\tcallHandler(onend, chunkOffset);\n\t\t\t\t}\n\t\t\t}\n\t\t}, { highWaterMark: 1, size: () => chunkSize });\n\t}\n}\n\nasync function callHandler(handler, ...parameters) {\n\ttry {\n\t\tawait handler(...parameters);\n\t} catch (_error) {\n\t\t// ignored\n\t}\n}\n\nfunction createWorkerInterface(workerData, config) {\n\treturn {\n\t\trun: () => runWorker(workerData, config)\n\t};\n}\n\nfunction createWebWorkerInterface(workerData, { baseURL, chunkSize }) {\n\tif (!workerData.interface) {\n\t\tObject.assign(workerData, {\n\t\t\tworker: getWebWorker(workerData.scripts[0], baseURL, workerData),\n\t\t\tinterface: {\n\t\t\t\trun: () => runWebWorker(workerData, { chunkSize })\n\t\t\t}\n\t\t});\n\t}\n\treturn workerData.interface;\n}\n\nasync function runWorker({ options, readable, writable, onTaskFinished }, config) {\n\tconst codecStream = new CodecStream(options, config);\n\ttry {\n\t\tawait readable.pipeThrough(codecStream).pipeTo(writable, { preventClose: true, preventAbort: true });\n\t\tconst {\n\t\t\tsignature,\n\t\t\tsize\n\t\t} = codecStream;\n\t\treturn {\n\t\t\tsignature,\n\t\t\tsize\n\t\t};\n\t} finally {\n\t\tonTaskFinished();\n\t}\n}\n\nasync function runWebWorker(workerData, config) {\n\tlet resolveResult, rejectResult;\n\tconst result = new Promise((resolve, reject) => {\n\t\tresolveResult = resolve;\n\t\trejectResult = reject;\n\t});\n\tObject.assign(workerData, {\n\t\treader: null,\n\t\twriter: null,\n\t\tresolveResult,\n\t\trejectResult,\n\t\tresult\n\t});\n\tconst { readable, options, scripts } = workerData;\n\tconst { writable, closed } = watchClosedStream(workerData.writable);\n\tconst streamsTransferred = sendMessage({\n\t\ttype: MESSAGE_START,\n\t\tscripts: scripts.slice(1),\n\t\toptions,\n\t\tconfig,\n\t\treadable,\n\t\twritable\n\t}, workerData);\n\tif (!streamsTransferred) {\n\t\tObject.assign(workerData, {\n\t\t\treader: readable.getReader(),\n\t\t\twriter: writable.getWriter()\n\t\t});\n\t}\n\tconst resultValue = await result;\n\ttry {\n\t\tawait writable.close();\n\t} catch (_error) {\n\t\t// ignored\n\t}\n\tawait closed;\n\treturn resultValue;\n}\n\nfunction watchClosedStream(writableSource) {\n\tconst writer = writableSource.getWriter();\n\tlet resolveStreamClosed;\n\tconst closed = new Promise(resolve => resolveStreamClosed = resolve);\n\tconst writable = new WritableStream({\n\t\tasync write(chunk) {\n\t\t\tawait writer.ready;\n\t\t\tawait writer.write(chunk);\n\t\t},\n\t\tclose() {\n\t\t\twriter.releaseLock();\n\t\t\tresolveStreamClosed();\n\t\t},\n\t\tabort(reason) {\n\t\t\treturn writer.abort(reason);\n\t\t}\n\t});\n\treturn { writable, closed };\n}\n\nlet classicWorkersSupported = true;\nlet transferStreamsSupported = true;\n\nfunction getWebWorker(url, baseURL, workerData) {\n\tconst workerOptions = { type: \"module\" };\n\tlet scriptUrl, worker;\n\t// deno-lint-ignore valid-typeof\n\tif (typeof url == FUNCTION_TYPE) {\n\t\turl = url();\n\t}\n\ttry {\n\t\tscriptUrl = new URL(url, baseURL);\n\t} catch (_error) {\n\t\tscriptUrl = url;\n\t}\n\tif (classicWorkersSupported) {\n\t\ttry {\n\t\t\tworker = new Worker(scriptUrl);\n\t\t} catch (_error) {\n\t\t\tclassicWorkersSupported = false;\n\t\t\tworker = new Worker(scriptUrl, workerOptions);\n\t\t}\n\t} else {\n\t\tworker = new Worker(scriptUrl, workerOptions);\n\t}\n\tworker.addEventListener(MESSAGE_EVENT_TYPE, event => onMessage(event, workerData));\n\treturn worker;\n}\n\nfunction sendMessage(message, { worker, writer, onTaskFinished, transferStreams }) {\n\ttry {\n\t\tlet { value, readable, writable } = message;\n\t\tconst transferables = [];\n\t\tif (value) {\n\t\t\tconst { buffer, length } = value;\n\t\t\tif (length != buffer.byteLength) {\n\t\t\t\tvalue = new Uint8Array(value);\n\t\t\t}\n\t\t\tmessage.value = value.buffer;\n\t\t\ttransferables.push(message.value);\n\t\t}\n\t\tif (transferStreams && transferStreamsSupported) {\n\t\t\tif (readable) {\n\t\t\t\ttransferables.push(readable);\n\t\t\t}\n\t\t\tif (writable) {\n\t\t\t\ttransferables.push(writable);\n\t\t\t}\n\t\t} else {\n\t\t\tmessage.readable = message.writable = null;\n\t\t}\n\t\tif (transferables.length) {\n\t\t\ttry {\n\t\t\t\tworker.postMessage(message, transferables);\n\t\t\t\treturn true;\n\t\t\t} catch (_error) {\n\t\t\t\ttransferStreamsSupported = false;\n\t\t\t\tmessage.readable = message.writable = null;\n\t\t\t\tworker.postMessage(message);\n\t\t\t}\n\t\t} else {\n\t\t\tworker.postMessage(message);\n\t\t}\n\t} catch (error) {\n\t\tif (writer) {\n\t\t\twriter.releaseLock();\n\t\t}\n\t\tonTaskFinished();\n\t\tthrow error;\n\t}\n}\n\nasync function onMessage({ data }, workerData) {\n\tconst { type, value, messageId, result, error } = data;\n\tconst { reader, writer, resolveResult, rejectResult, onTaskFinished } = workerData;\n\ttry {\n\t\tif (error) {\n\t\t\tconst { message, stack, code, name } = error;\n\t\t\tconst responseError = new Error(message);\n\t\t\tObject.assign(responseError, { stack, code, name });\n\t\t\tclose(responseError);\n\t\t} else {\n\t\t\tif (type == MESSAGE_PULL) {\n\t\t\t\tconst { value, done } = await reader.read();\n\t\t\t\tsendMessage({ type: MESSAGE_DATA, value, done, messageId }, workerData);\n\t\t\t}\n\t\t\tif (type == MESSAGE_DATA) {\n\t\t\t\tawait writer.ready;\n\t\t\t\tawait writer.write(new Uint8Array(value));\n\t\t\t\tsendMessage({ type: MESSAGE_ACK_DATA, messageId }, workerData);\n\t\t\t}\n\t\t\tif (type == MESSAGE_CLOSE) {\n\t\t\t\tclose(null, result);\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\tclose(error);\n\t}\n\n\tfunction close(error, result) {\n\t\tif (error) {\n\t\t\trejectResult(error);\n\t\t} else {\n\t\t\tresolveResult(result);\n\t\t}\n\t\tif (writer) {\n\t\t\twriter.releaseLock();\n\t\t}\n\t\tonTaskFinished();\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global setTimeout, clearTimeout */\n\nimport { UNDEFINED_VALUE } from \"./constants.js\";\nimport {\n\tCODEC_INFLATE,\n\tCODEC_DEFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD\n} from \"./streams/codec-stream.js\";\nimport { CodecWorker } from \"./codec-worker.js\";\n\nlet pool = [];\nconst pendingRequests = [];\n\nexport {\n\trunWorker,\n\tterminateWorkers,\n\tCODEC_DEFLATE,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD\n};\n\nlet indexWorker = 0;\n\nasync function runWorker(stream, workerOptions) {\n\tconst { options, config } = workerOptions;\n\tconst { transferStreams, useWebWorkers, useCompressionStream, codecType, compressed, signed, encrypted } = options;\n\tconst { workerScripts, maxWorkers, terminateWorkerTimeout } = config;\n\tworkerOptions.transferStreams = transferStreams || transferStreams === UNDEFINED_VALUE;\n\tconst streamCopy = !compressed && !signed && !encrypted && !workerOptions.transferStreams;\n\tworkerOptions.useWebWorkers = !streamCopy && (useWebWorkers || (useWebWorkers === UNDEFINED_VALUE && config.useWebWorkers));\n\tworkerOptions.scripts = workerOptions.useWebWorkers && workerScripts ? workerScripts[codecType] : [];\n\toptions.useCompressionStream = useCompressionStream || (useCompressionStream === UNDEFINED_VALUE && config.useCompressionStream);\n\tlet worker;\n\tconst workerData = pool.find(workerData => !workerData.busy);\n\tif (workerData) {\n\t\tclearTerminateTimeout(workerData);\n\t\tworker = new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\n\t} else if (pool.length < maxWorkers) {\n\t\tconst workerData = { indexWorker };\n\t\tindexWorker++;\n\t\tpool.push(workerData);\n\t\tworker = new CodecWorker(workerData, stream, workerOptions, onTaskFinished);\n\t} else {\n\t\tworker = await new Promise(resolve => pendingRequests.push({ resolve, stream, workerOptions }));\n\t}\n\treturn worker.run();\n\n\tfunction onTaskFinished(workerData) {\n\t\tif (pendingRequests.length) {\n\t\t\tconst [{ resolve, stream, workerOptions }] = pendingRequests.splice(0, 1);\n\t\t\tresolve(new CodecWorker(workerData, stream, workerOptions, onTaskFinished));\n\t\t} else if (workerData.worker) {\n\t\t\tclearTerminateTimeout(workerData);\n\t\t\tif (Number.isFinite(terminateWorkerTimeout) && terminateWorkerTimeout >= 0) {\n\t\t\t\tworkerData.terminateTimeout = setTimeout(() => {\n\t\t\t\t\tpool = pool.filter(data => data != workerData);\n\t\t\t\t\tworkerData.terminate();\n\t\t\t\t}, terminateWorkerTimeout);\n\t\t\t}\n\t\t} else {\n\t\t\tpool = pool.filter(data => data != workerData);\n\t\t}\n\t}\n}\n\nfunction clearTerminateTimeout(workerData) {\n\tconst { terminateTimeout } = workerData;\n\tif (terminateTimeout) {\n\t\tclearTimeout(terminateTimeout);\n\t\tworkerData.terminateTimeout = null;\n\t}\n}\n\nfunction terminateWorkers() {\n\tpool.forEach(workerData => {\n\t\tclearTerminateTimeout(workerData);\n\t\tworkerData.terminate();\n\t});\n}","function e(e){const t=()=>URL.createObjectURL(new Blob(['const{Array:e,Object:t,Number:n,Math:r,Error:s,Uint8Array:i,Uint16Array:o,Uint32Array:c,Int32Array:f,Map:a,DataView:l,Promise:u,TextEncoder:w,crypto:h,postMessage:d,TransformStream:p,ReadableStream:y,WritableStream:m,CompressionStream:b,DecompressionStream:g}=self;class k{constructor(e){return class extends p{constructor(t,n){const r=new e(n);super({transform(e,t){t.enqueue(r.append(e))},flush(e){const t=r.flush();t&&e.enqueue(t)}})}}}}const v=[];for(let e=0;256>e;e++){let t=e;for(let e=0;8>e;e++)1&t?t=t>>>1^3988292384:t>>>=1;v[e]=t}class S{constructor(e){this.t=e||-1}append(e){let t=0|this.t;for(let n=0,r=0|e.length;r>n;n++)t=t>>>8^v[255&(t^e[n])];this.t=t}get(){return~this.t}}class z extends p{constructor(){const e=new S;super({transform(t){e.append(t)},flush(t){const n=new i(4);new l(n.buffer).setUint32(0,e.get()),t.enqueue(n)}})}}const C={concat(e,t){if(0===e.length||0===t.length)return e.concat(t);const n=e[e.length-1],r=C.i(n);return 32===r?e.concat(t):C.o(t,r,0|n,e.slice(0,e.length-1))},l(e){const t=e.length;if(0===t)return 0;const n=e[t-1];return 32*(t-1)+C.i(n)},u(e,t){if(32*e.length<t)return e;const n=(e=e.slice(0,r.ceil(t/32))).length;return t&=31,n>0&&t&&(e[n-1]=C.h(t,e[n-1]&2147483648>>t-1,1)),e},h:(e,t,n)=>32===e?t:(n?0|t:t<<32-e)+1099511627776*e,i:e=>r.round(e/1099511627776)||32,o(e,t,n,r){for(void 0===r&&(r=[]);t>=32;t-=32)r.push(n),n=0;if(0===t)return r.concat(e);for(let s=0;s<e.length;s++)r.push(n|e[s]>>>t),n=e[s]<<32-t;const s=e.length?e[e.length-1]:0,i=C.i(s);return r.push(C.h(t+i&31,t+i>32?n:r.pop(),1)),r}},I={p:{m(e){const t=C.l(e)/8,n=new i(t);let r;for(let s=0;t>s;s++)0==(3&s)&&(r=e[s/4]),n[s]=r>>>24,r<<=8;return n},g(e){const t=[];let n,r=0;for(n=0;n<e.length;n++)r=r<<8|e[n],3==(3&n)&&(t.push(r),r=0);return 3&n&&t.push(C.h(8*(3&n),r)),t}}},x={getRandomValues(e){const t=new c(e.buffer),n=e=>{let t=987654321;const n=4294967295;return()=>(t=36969*(65535&t)+(t>>16)&n,(((t<<16)+(e=18e3*(65535&e)+(e>>16)&n)&n)/4294967296+.5)*(r.random()>.5?1:-1))};for(let s,i=0;i<e.length;i+=4){const e=n(4294967296*(s||r.random()));s=987654071*e(),t[i/4]=4294967296*e()|0}return e}},_={importKey:e=>new _.k(I.p.g(e)),v(e,t,n,r){if(n=n||1e4,0>r||0>n)throw new s(\"invalid params to pbkdf2\");const i=1+(r>>5)<<2;let o,c,f,a,u;const w=new ArrayBuffer(i),h=new l(w);let d=0;const p=C;for(t=I.p.g(t),u=1;(i||1)>d;u++){for(o=c=e.encrypt(p.concat(t,[u])),f=1;n>f;f++)for(c=e.encrypt(c),a=0;a<c.length;a++)o[a]^=c[a];for(f=0;(i||1)>d&&f<o.length;f++)h.setInt32(d,o[f]),d+=4}return w.slice(0,r/8)},k:class{constructor(t){const n=this,i=n.S=class{constructor(e){const t=this;t.blockSize=512,t.C=[1732584193,4023233417,2562383102,271733878,3285377520],t.I=[1518500249,1859775393,2400959708,3395469782],e?(t._=e._.slice(0),t.A=e.A.slice(0),t.D=e.D):t.reset()}reset(){const e=this;return e._=e.C.slice(0),e.A=[],e.D=0,e}update(e){const t=this;\"string\"==typeof e&&(e=I.V.g(e));const n=t.A=C.concat(t.A,e),r=t.D,i=t.D=r+C.l(e);if(i>9007199254740991)throw new s(\"Cannot hash more than 2^53 - 1 bits\");const o=new c(n);let f=0;for(let e=t.blockSize+r-(t.blockSize+r&t.blockSize-1);i>=e;e+=t.blockSize)t.R(o.subarray(16*f,16*(f+1))),f+=1;return n.splice(0,16*f),t}B(){const e=this;let t=e.A;const n=e._;t=C.concat(t,[C.h(1,1)]);for(let e=t.length+2;15&e;e++)t.push(0);for(t.push(r.floor(e.D/4294967296)),t.push(0|e.D);t.length;)e.R(t.splice(0,16));return e.reset(),n}M(e,t,n,r){return e>19?e>39?e>59?e>79?void 0:t^n^r:t&n|t&r|n&r:t^n^r:t&n|~t&r}K(e,t){return t<<e|t>>>32-e}R(t){const n=this,s=n._,i=e(80);for(let e=0;16>e;e++)i[e]=t[e];let o=s[0],c=s[1],f=s[2],a=s[3],l=s[4];for(let e=0;79>=e;e++){16>e||(i[e]=n.K(1,i[e-3]^i[e-8]^i[e-14]^i[e-16]));const t=n.K(5,o)+n.M(e,c,f,a)+l+i[e]+n.I[r.floor(e/20)]|0;l=a,a=f,f=n.K(30,c),c=o,o=t}s[0]=s[0]+o|0,s[1]=s[1]+c|0,s[2]=s[2]+f|0,s[3]=s[3]+a|0,s[4]=s[4]+l|0}},o=[[],[]];n.P=[new i,new i];const f=n.P[0].blockSize/32;t.length>f&&(t=i.hash(t));for(let e=0;f>e;e++)o[0][e]=909522486^t[e],o[1][e]=1549556828^t[e];n.P[0].update(o[0]),n.P[1].update(o[1]),n.U=new i(n.P[0])}reset(){const e=this;e.U=new e.S(e.P[0]),e.N=!1}update(e){this.N=!0,this.U.update(e)}digest(){const e=this,t=e.U.B(),n=new e.S(e.P[1]).update(t).B();return e.reset(),n}encrypt(e){if(this.N)throw new s(\"encrypt on already updated hmac called!\");return this.update(e),this.digest(e)}}},A=void 0!==h&&\"function\"==typeof h.getRandomValues;function D(e){return A?h.getRandomValues(e):x.getRandomValues(e)}const V={name:\"PBKDF2\"},R=t.assign({hash:{name:\"HMAC\"}},V),B=t.assign({iterations:1e3,hash:{name:\"SHA-1\"}},V),E=[\"deriveBits\"],M=[8,12,16],K=[16,24,32],P=[0,0,0,0],U=void 0!==h,N=U&&h.subtle,T=U&&void 0!==N,W=I.p,H=class{constructor(e){const t=this;t.T=[[[],[],[],[],[]],[[],[],[],[],[]]],t.T[0][0][0]||t.W();const n=t.T[0][4],r=t.T[1],i=e.length;let o,c,f,a=1;if(4!==i&&6!==i&&8!==i)throw new s(\"invalid aes key size\");for(t.I=[c=e.slice(0),f=[]],o=i;4*i+28>o;o++){let e=c[o-1];(o%i==0||8===i&&o%i==4)&&(e=n[e>>>24]<<24^n[e>>16&255]<<16^n[e>>8&255]<<8^n[255&e],o%i==0&&(e=e<<8^e>>>24^a<<24,a=a<<1^283*(a>>7))),c[o]=c[o-i]^e}for(let e=0;o;e++,o--){const t=c[3&e?o:o-4];f[e]=4>=o||4>e?t:r[0][n[t>>>24]]^r[1][n[t>>16&255]]^r[2][n[t>>8&255]]^r[3][n[255&t]]}}encrypt(e){return this.H(e,0)}decrypt(e){return this.H(e,1)}W(){const e=this.T[0],t=this.T[1],n=e[4],r=t[4],s=[],i=[];let o,c,f,a;for(let e=0;256>e;e++)i[(s[e]=e<<1^283*(e>>7))^e]=e;for(let l=o=0;!n[l];l^=c||1,o=i[o]||1){let i=o^o<<1^o<<2^o<<3^o<<4;i=i>>8^255&i^99,n[l]=i,r[i]=l,a=s[f=s[c=s[l]]];let u=16843009*a^65537*f^257*c^16843008*l,w=257*s[i]^16843008*i;for(let n=0;4>n;n++)e[n][l]=w=w<<24^w>>>8,t[n][i]=u=u<<24^u>>>8}for(let n=0;5>n;n++)e[n]=e[n].slice(0),t[n]=t[n].slice(0)}H(e,t){if(4!==e.length)throw new s(\"invalid aes block size\");const n=this.I[t],r=n.length/4-2,i=[0,0,0,0],o=this.T[t],c=o[0],f=o[1],a=o[2],l=o[3],u=o[4];let w,h,d,p=e[0]^n[0],y=e[t?3:1]^n[1],m=e[2]^n[2],b=e[t?1:3]^n[3],g=4;for(let e=0;r>e;e++)w=c[p>>>24]^f[y>>16&255]^a[m>>8&255]^l[255&b]^n[g],h=c[y>>>24]^f[m>>16&255]^a[b>>8&255]^l[255&p]^n[g+1],d=c[m>>>24]^f[b>>16&255]^a[p>>8&255]^l[255&y]^n[g+2],b=c[b>>>24]^f[p>>16&255]^a[y>>8&255]^l[255&m]^n[g+3],g+=4,p=w,y=h,m=d;for(let e=0;4>e;e++)i[t?3&-e:e]=u[p>>>24]<<24^u[y>>16&255]<<16^u[m>>8&255]<<8^u[255&b]^n[g++],w=p,p=y,y=m,m=b,b=w;return i}},L=class{constructor(e,t){this.L=e,this.j=t,this.F=t}reset(){this.F=this.j}update(e){return this.O(this.L,e,this.F)}q(e){if(255==(e>>24&255)){let t=e>>16&255,n=e>>8&255,r=255&e;255===t?(t=0,255===n?(n=0,255===r?r=0:++r):++n):++t,e=0,e+=t<<16,e+=n<<8,e+=r}else e+=1<<24;return e}G(e){0===(e[0]=this.q(e[0]))&&(e[1]=this.q(e[1]))}O(e,t,n){let r;if(!(r=t.length))return[];const s=C.l(t);for(let s=0;r>s;s+=4){this.G(n);const r=e.encrypt(n);t[s]^=r[0],t[s+1]^=r[1],t[s+2]^=r[2],t[s+3]^=r[3]}return C.u(t,s)}},j=_.k;let F=U&&T&&\"function\"==typeof N.importKey,O=U&&T&&\"function\"==typeof N.deriveBits;class q extends p{constructor({password:e,signed:n,encryptionStrength:r}){super({start(){t.assign(this,{ready:new u((e=>this.J=e)),password:e,signed:n,X:r-1,pending:new i})},async transform(e,t){const n=this,{password:r,X:o,J:c,ready:f}=n;r?(await(async(e,t,n,r)=>{const i=await Q(e,t,n,Y(r,0,M[t])),o=Y(r,M[t]);if(i[0]!=o[0]||i[1]!=o[1])throw new s(\"Invalid password\")})(n,o,r,Y(e,0,M[o]+2)),e=Y(e,M[o]+2),c()):await f;const a=new i(e.length-10-(e.length-10)%16);t.enqueue(J(n,e,a,0,10,!0))},async flush(e){const{signed:t,Y:n,Z:r,pending:o,ready:c}=this;await c;const f=Y(o,0,o.length-10),a=Y(o,o.length-10);let l=new i;if(f.length){const e=$(W,f);r.update(e);const t=n.update(e);l=Z(W,t)}if(t){const e=Y(Z(W,r.digest()),0,10);for(let t=0;10>t;t++)if(e[t]!=a[t])throw new s(\"Invalid signature\")}e.enqueue(l)}})}}class G extends p{constructor({password:e,encryptionStrength:n}){let r;super({start(){t.assign(this,{ready:new u((e=>this.J=e)),password:e,X:n-1,pending:new i})},async transform(e,t){const n=this,{password:r,X:s,J:o,ready:c}=n;let f=new i;r?(f=await(async(e,t,n)=>{const r=D(new i(M[t]));return X(r,await Q(e,t,n,r))})(n,s,r),o()):await c;const a=new i(f.length+e.length-e.length%16);a.set(f,0),t.enqueue(J(n,e,a,f.length,0))},async flush(e){const{Y:t,Z:n,pending:s,ready:o}=this;await o;let c=new i;if(s.length){const e=t.update($(W,s));n.update(e),c=Z(W,e)}r.signature=Z(W,n.digest()).slice(0,10),e.enqueue(X(c,r.signature))}}),r=this}}function J(e,t,n,r,s,o){const{Y:c,Z:f,pending:a}=e,l=t.length-s;let u;for(a.length&&(t=X(a,t),n=((e,t)=>{if(t&&t>e.length){const n=e;(e=new i(t)).set(n,0)}return e})(n,l-l%16)),u=0;l-16>=u;u+=16){const e=$(W,Y(t,u,u+16));o&&f.update(e);const s=c.update(e);o||f.update(s),n.set(Z(W,s),u+r)}return e.pending=Y(t,u),n}async function Q(n,r,s,o){n.password=null;const c=(e=>{if(void 0===w){const t=new i((e=unescape(encodeURIComponent(e))).length);for(let n=0;n<t.length;n++)t[n]=e.charCodeAt(n);return t}return(new w).encode(e)})(s),f=await(async(e,t,n,r,s)=>{if(!F)return _.importKey(t);try{return await N.importKey(\"raw\",t,n,!1,s)}catch(e){return F=!1,_.importKey(t)}})(0,c,R,0,E),a=await(async(e,t,n)=>{if(!O)return _.v(t,e.salt,B.iterations,n);try{return await N.deriveBits(e,t,n)}catch(r){return O=!1,_.v(t,e.salt,B.iterations,n)}})(t.assign({salt:o},B),f,8*(2*K[r]+2)),l=new i(a),u=$(W,Y(l,0,K[r])),h=$(W,Y(l,K[r],2*K[r])),d=Y(l,2*K[r]);return t.assign(n,{keys:{key:u,$:h,passwordVerification:d},Y:new L(new H(u),e.from(P)),Z:new j(h)}),d}function X(e,t){let n=e;return e.length+t.length&&(n=new i(e.length+t.length),n.set(e,0),n.set(t,e.length)),n}function Y(e,t,n){return e.subarray(t,n)}function Z(e,t){return e.m(t)}function $(e,t){return e.g(t)}class ee extends p{constructor({password:e,passwordVerification:n}){super({start(){t.assign(this,{password:e,passwordVerification:n}),se(this,e)},transform(e,t){const n=this;if(n.password){const t=ne(n,e.subarray(0,12));if(n.password=null,t[11]!=n.passwordVerification)throw new s(\"Invalid password\");e=e.subarray(12)}t.enqueue(ne(n,e))}})}}class te extends p{constructor({password:e,passwordVerification:n}){super({start(){t.assign(this,{password:e,passwordVerification:n}),se(this,e)},transform(e,t){const n=this;let r,s;if(n.password){n.password=null;const t=D(new i(12));t[11]=n.passwordVerification,r=new i(e.length+t.length),r.set(re(n,t),0),s=12}else r=new i(e.length),s=0;r.set(re(n,e),s),t.enqueue(r)}})}}function ne(e,t){const n=new i(t.length);for(let r=0;r<t.length;r++)n[r]=oe(e)^t[r],ie(e,n[r]);return n}function re(e,t){const n=new i(t.length);for(let r=0;r<t.length;r++)n[r]=oe(e)^t[r],ie(e,t[r]);return n}function se(e,n){const r=[305419896,591751049,878082192];t.assign(e,{keys:r,ee:new S(r[0]),te:new S(r[2])});for(let t=0;t<n.length;t++)ie(e,n.charCodeAt(t))}function ie(e,t){let[n,s,i]=e.keys;e.ee.append([t]),n=~e.ee.get(),s=fe(r.imul(fe(s+ce(n)),134775813)+1),e.te.append([s>>>24]),i=~e.te.get(),e.keys=[n,s,i]}function oe(e){const t=2|e.keys[2];return ce(r.imul(t,1^t)>>>8)}function ce(e){return 255&e}function fe(e){return 4294967295&e}class ae extends p{constructor(e,{chunkSize:t,CompressionStream:n,CompressionStreamNative:r}){super({});const{compressed:s,encrypted:i,useCompressionStream:o,zipCrypto:c,signed:f,level:a}=e,u=this;let w,h,d=ue(super.readable);i&&!c||!f||([d,w]=d.tee(),w=de(w,new z)),s&&(d=he(d,o,{level:a,chunkSize:t},r,n)),i&&(c?d=de(d,new te(e)):(h=new G(e),d=de(d,h))),we(u,d,(async()=>{let e;i&&!c&&(e=h.signature),i&&!c||!f||(e=await w.getReader().read(),e=new l(e.value.buffer).getUint32(0)),u.signature=e}))}}class le extends p{constructor(e,{chunkSize:t,DecompressionStream:n,DecompressionStreamNative:r}){super({});const{zipCrypto:i,encrypted:o,signed:c,signature:f,compressed:a,useCompressionStream:u}=e;let w,h,d=ue(super.readable);o&&(i?d=de(d,new ee(e)):(h=new q(e),d=de(d,h))),a&&(d=he(d,u,{chunkSize:t},r,n)),o&&!i||!c||([d,w]=d.tee(),w=de(w,new z)),we(this,d,(async()=>{if((!o||i)&&c){const e=await w.getReader().read(),t=new l(e.value.buffer);if(f!=t.getUint32(0,!1))throw new s(\"Invalid signature\")}}))}}function ue(e){return de(e,new p({transform(e,t){e&&e.length&&t.enqueue(e)}}))}function we(e,n,r){n=de(n,new p({flush:r})),t.defineProperty(e,\"readable\",{get:()=>n})}function he(e,t,n,r,s){try{e=de(e,new(t&&r?r:s)(\"deflate-raw\",n))}catch(r){if(!t)throw r;e=de(e,new s(\"deflate-raw\",n))}return e}function de(e,t){return e.pipeThrough(t)}class pe extends p{constructor(e,n){super({});const r=this,{codecType:s}=e;let i;s.startsWith(\"deflate\")?i=ae:s.startsWith(\"inflate\")&&(i=le);let o=0;const c=new i(e,n),f=super.readable,a=new p({transform(e,t){e&&e.length&&(o+=e.length,t.enqueue(e))},flush(){const{signature:e}=c;t.assign(r,{signature:e,size:o})}});t.defineProperty(r,\"readable\",{get:()=>f.pipeThrough(c).pipeThrough(a)})}}const ye=new a,me=new a;let be=0;async function ge(e){try{const{options:t,scripts:r,config:s}=e;r&&r.length&&importScripts.apply(void 0,r),self.initCodec&&self.initCodec(),s.CompressionStreamNative=self.CompressionStream,s.DecompressionStreamNative=self.DecompressionStream,self.Deflate&&(s.CompressionStream=new k(self.Deflate)),self.Inflate&&(s.DecompressionStream=new k(self.Inflate));const i={highWaterMark:1,size:()=>s.chunkSize},o=e.readable||new y({async pull(e){const t=new u((e=>ye.set(be,e)));ke({type:\"pull\",messageId:be}),be=(be+1)%n.MAX_SAFE_INTEGER;const{value:r,done:s}=await t;e.enqueue(r),s&&e.close()}},i),c=e.writable||new m({async write(e){let t;const r=new u((e=>t=e));me.set(be,t),ke({type:\"data\",value:e,messageId:be}),be=(be+1)%n.MAX_SAFE_INTEGER,await r}},i),f=new pe(t,s);await o.pipeThrough(f).pipeTo(c,{preventAbort:!0});try{await c.close()}catch(e){}const{signature:a,size:l}=f;ke({type:\"close\",result:{signature:a,size:l}})}catch(e){ve(e)}}function ke(e){let{value:t}=e;if(t)if(t.length)try{t=new i(t),e.value=t.buffer,d(e,[e.value])}catch(t){d(e)}else d(e);else d(e)}function ve(e){const{message:t,stack:n,code:r,name:s}=e;d({error:{message:t,stack:n,code:r,name:s}})}function Se(t){return ze(t.map((([t,n])=>new e(t).fill(n,0,t))))}function ze(t){return t.reduce(((t,n)=>t.concat(e.isArray(n)?ze(n):n)),[])}addEventListener(\"message\",(({data:e})=>{const{type:t,messageId:n,value:r,done:s}=e;try{if(\"start\"==t&&ge(e),\"data\"==t){const e=ye.get(n);ye.delete(n),e({value:new i(r),done:s})}if(\"ack\"==t){const e=me.get(n);me.delete(n),e()}}catch(e){ve(e)}}));const Ce=[0,1,2,3].concat(...Se([[2,4],[2,5],[4,6],[4,7],[8,8],[8,9],[16,10],[16,11],[32,12],[32,13],[64,14],[64,15],[2,0],[1,16],[1,17],[2,18],[2,19],[4,20],[4,21],[8,22],[8,23],[16,24],[16,25],[32,26],[32,27],[64,28],[64,29]]));function Ie(){const e=this;function t(e,t){let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1}e.ne=n=>{const s=e.re,i=e.ie.se,o=e.ie.oe;let c,f,a,l=-1;for(n.ce=0,n.fe=573,c=0;o>c;c++)0!==s[2*c]?(n.ae[++n.ce]=l=c,n.le[c]=0):s[2*c+1]=0;for(;2>n.ce;)a=n.ae[++n.ce]=2>l?++l:0,s[2*a]=1,n.le[a]=0,n.ue--,i&&(n.we-=i[2*a+1]);for(e.he=l,c=r.floor(n.ce/2);c>=1;c--)n.de(s,c);a=o;do{c=n.ae[1],n.ae[1]=n.ae[n.ce--],n.de(s,1),f=n.ae[1],n.ae[--n.fe]=c,n.ae[--n.fe]=f,s[2*a]=s[2*c]+s[2*f],n.le[a]=r.max(n.le[c],n.le[f])+1,s[2*c+1]=s[2*f+1]=a,n.ae[1]=a++,n.de(s,1)}while(n.ce>=2);n.ae[--n.fe]=n.ae[1],(t=>{const n=e.re,r=e.ie.se,s=e.ie.pe,i=e.ie.ye,o=e.ie.me;let c,f,a,l,u,w,h=0;for(l=0;15>=l;l++)t.be[l]=0;for(n[2*t.ae[t.fe]+1]=0,c=t.fe+1;573>c;c++)f=t.ae[c],l=n[2*n[2*f+1]+1]+1,l>o&&(l=o,h++),n[2*f+1]=l,f>e.he||(t.be[l]++,u=0,i>f||(u=s[f-i]),w=n[2*f],t.ue+=w*(l+u),r&&(t.we+=w*(r[2*f+1]+u)));if(0!==h){do{for(l=o-1;0===t.be[l];)l--;t.be[l]--,t.be[l+1]+=2,t.be[o]--,h-=2}while(h>0);for(l=o;0!==l;l--)for(f=t.be[l];0!==f;)a=t.ae[--c],a>e.he||(n[2*a+1]!=l&&(t.ue+=(l-n[2*a+1])*n[2*a],n[2*a+1]=l),f--)}})(n),((e,n,r)=>{const s=[];let i,o,c,f=0;for(i=1;15>=i;i++)s[i]=f=f+r[i-1]<<1;for(o=0;n>=o;o++)c=e[2*o+1],0!==c&&(e[2*o]=t(s[c]++,c))})(s,e.he,n.be)}}function xe(e,t,n,r,s){const i=this;i.se=e,i.pe=t,i.ye=n,i.oe=r,i.me=s}Ie.ge=[0,1,2,3,4,5,6,7].concat(...Se([[2,8],[2,9],[2,10],[2,11],[4,12],[4,13],[4,14],[4,15],[8,16],[8,17],[8,18],[8,19],[16,20],[16,21],[16,22],[16,23],[32,24],[32,25],[32,26],[31,27],[1,28]])),Ie.ke=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],Ie.ve=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],Ie.Se=e=>256>e?Ce[e]:Ce[256+(e>>>7)],Ie.ze=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],Ie.Ce=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],Ie.Ie=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],Ie.xe=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];const _e=Se([[144,8],[112,9],[24,7],[8,8]]);xe._e=ze([12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,19,275,147,403,83,339,211,467,51,307,179,435,115,371,243,499,11,267,139,395,75,331,203,459,43,299,171,427,107,363,235,491,27,283,155,411,91,347,219,475,59,315,187,443,123,379,251,507,7,263,135,391,71,327,199,455,39,295,167,423,103,359,231,487,23,279,151,407,87,343,215,471,55,311,183,439,119,375,247,503,15,271,143,399,79,335,207,463,47,303,175,431,111,367,239,495,31,287,159,415,95,351,223,479,63,319,191,447,127,383,255,511,0,64,32,96,16,80,48,112,8,72,40,104,24,88,56,120,4,68,36,100,20,84,52,116,3,131,67,195,35,163,99,227].map(((e,t)=>[e,_e[t]])));const Ae=Se([[30,5]]);function De(e,t,n,r,s){const i=this;i.Ae=e,i.De=t,i.Ve=n,i.Re=r,i.Be=s}xe.Ee=ze([0,16,8,24,4,20,12,28,2,18,10,26,6,22,14,30,1,17,9,25,5,21,13,29,3,19,11,27,7,23].map(((e,t)=>[e,Ae[t]]))),xe.Me=new xe(xe._e,Ie.ze,257,286,15),xe.Ke=new xe(xe.Ee,Ie.Ce,0,30,15),xe.Pe=new xe(null,Ie.Ie,0,19,7);const Ve=[new De(0,0,0,0,0),new De(4,4,8,4,1),new De(4,5,16,8,1),new De(4,6,32,32,1),new De(4,4,16,16,2),new De(8,16,32,32,2),new De(8,16,128,128,2),new De(8,32,128,256,2),new De(32,128,258,1024,2),new De(32,258,258,4096,2)],Re=[\"need dictionary\",\"stream end\",\"\",\"\",\"stream error\",\"data error\",\"\",\"buffer error\",\"\",\"\"];function Be(e,t,n,r){const s=e[2*t],i=e[2*n];return i>s||s==i&&r[t]<=r[n]}function Ee(){const e=this;let t,n,s,c,f,a,l,u,w,h,d,p,y,m,b,g,k,v,S,z,C,I,x,_,A,D,V,R,B,E,M,K,P;const U=new Ie,N=new Ie,T=new Ie;let W,H,L,j,F,O;function q(){let t;for(t=0;286>t;t++)M[2*t]=0;for(t=0;30>t;t++)K[2*t]=0;for(t=0;19>t;t++)P[2*t]=0;M[512]=1,e.ue=e.we=0,H=L=0}function G(e,t){let n,r=-1,s=e[1],i=0,o=7,c=4;0===s&&(o=138,c=3),e[2*(t+1)+1]=65535;for(let f=0;t>=f;f++)n=s,s=e[2*(f+1)+1],++i<o&&n==s||(c>i?P[2*n]+=i:0!==n?(n!=r&&P[2*n]++,P[32]++):i>10?P[36]++:P[34]++,i=0,r=n,0===s?(o=138,c=3):n==s?(o=6,c=3):(o=7,c=4))}function J(t){e.Ue[e.pending++]=t}function Q(e){J(255&e),J(e>>>8&255)}function X(e,t){let n;const r=t;O>16-r?(n=e,F|=n<<O&65535,Q(F),F=n>>>16-O,O+=r-16):(F|=e<<O&65535,O+=r)}function Y(e,t){const n=2*e;X(65535&t[n],65535&t[n+1])}function Z(e,t){let n,r,s=-1,i=e[1],o=0,c=7,f=4;for(0===i&&(c=138,f=3),n=0;t>=n;n++)if(r=i,i=e[2*(n+1)+1],++o>=c||r!=i){if(f>o)do{Y(r,P)}while(0!=--o);else 0!==r?(r!=s&&(Y(r,P),o--),Y(16,P),X(o-3,2)):o>10?(Y(18,P),X(o-11,7)):(Y(17,P),X(o-3,3));o=0,s=r,0===i?(c=138,f=3):r==i?(c=6,f=3):(c=7,f=4)}}function $(){16==O?(Q(F),F=0,O=0):8>O||(J(255&F),F>>>=8,O-=8)}function ee(t,n){let s,i,o;if(e.Ne[H]=t,e.Te[H]=255&n,H++,0===t?M[2*n]++:(L++,t--,M[2*(Ie.ge[n]+256+1)]++,K[2*Ie.Se(t)]++),0==(8191&H)&&V>2){for(s=8*H,i=C-k,o=0;30>o;o++)s+=K[2*o]*(5+Ie.Ce[o]);if(s>>>=3,L<r.floor(H/2)&&s<r.floor(i/2))return!0}return H==W-1}function te(t,n){let r,s,i,o,c=0;if(0!==H)do{r=e.Ne[c],s=e.Te[c],c++,0===r?Y(s,t):(i=Ie.ge[s],Y(i+256+1,t),o=Ie.ze[i],0!==o&&(s-=Ie.ke[i],X(s,o)),r--,i=Ie.Se(r),Y(i,n),o=Ie.Ce[i],0!==o&&(r-=Ie.ve[i],X(r,o)))}while(H>c);Y(256,t),j=t[513]}function ne(){O>8?Q(F):O>0&&J(255&F),F=0,O=0}function re(t,n,r){X(0+(r?1:0),3),((t,n)=>{ne(),j=8,Q(n),Q(~n),e.Ue.set(u.subarray(t,t+n),e.pending),e.pending+=n})(t,n)}function se(n){((t,n,r)=>{let s,i,o=0;V>0?(U.ne(e),N.ne(e),o=(()=>{let t;for(G(M,U.he),G(K,N.he),T.ne(e),t=18;t>=3&&0===P[2*Ie.xe[t]+1];t--);return e.ue+=14+3*(t+1),t})(),s=e.ue+3+7>>>3,i=e.we+3+7>>>3,i>s||(s=i)):s=i=n+5,n+4>s||-1==t?i==s?(X(2+(r?1:0),3),te(xe._e,xe.Ee)):(X(4+(r?1:0),3),((e,t,n)=>{let r;for(X(e-257,5),X(t-1,5),X(n-4,4),r=0;n>r;r++)X(P[2*Ie.xe[r]+1],3);Z(M,e-1),Z(K,t-1)})(U.he+1,N.he+1,o+1),te(M,K)):re(t,n,r),q(),r&&ne()})(0>k?-1:k,C-k,n),k=C,t.We()}function ie(){let e,n,r,s;do{if(s=w-x-C,0===s&&0===C&&0===x)s=f;else if(-1==s)s--;else if(C>=f+f-262){u.set(u.subarray(f,f+f),0),I-=f,C-=f,k-=f,e=y,r=e;do{n=65535&d[--r],d[r]=f>n?0:n-f}while(0!=--e);e=f,r=e;do{n=65535&h[--r],h[r]=f>n?0:n-f}while(0!=--e);s+=f}if(0===t.He)return;e=t.Le(u,C+x,s),x+=e,3>x||(p=255&u[C],p=(p<<g^255&u[C+1])&b)}while(262>x&&0!==t.He)}function oe(e){let t,n,r=A,s=C,i=_;const o=C>f-262?C-(f-262):0;let c=E;const a=l,w=C+258;let d=u[s+i-1],p=u[s+i];B>_||(r>>=2),c>x&&(c=x);do{if(t=e,u[t+i]==p&&u[t+i-1]==d&&u[t]==u[s]&&u[++t]==u[s+1]){s+=2,t++;do{}while(u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&u[++s]==u[++t]&&w>s);if(n=258-(w-s),s=w-258,n>i){if(I=e,i=n,n>=c)break;d=u[s+i-1],p=u[s+i]}}}while((e=65535&h[e&a])>o&&0!=--r);return i>x?x:i}e.le=[],e.be=[],e.ae=[],M=[],K=[],P=[],e.de=(t,n)=>{const r=e.ae,s=r[n];let i=n<<1;for(;i<=e.ce&&(i<e.ce&&Be(t,r[i+1],r[i],e.le)&&i++,!Be(t,s,r[i],e.le));)r[n]=r[i],n=i,i<<=1;r[n]=s},e.je=(t,S,I,H,L,G)=>(H||(H=8),L||(L=8),G||(G=0),t.Fe=null,-1==S&&(S=6),1>L||L>9||8!=H||9>I||I>15||0>S||S>9||0>G||G>2?-2:(t.Oe=e,a=I,f=1<<a,l=f-1,m=L+7,y=1<<m,b=y-1,g=r.floor((m+3-1)/3),u=new i(2*f),h=[],d=[],W=1<<L+6,e.Ue=new i(4*W),s=4*W,e.Ne=new o(W),e.Te=new i(W),V=S,R=G,(t=>(t.qe=t.Ge=0,t.Fe=null,e.pending=0,e.Je=0,n=113,c=0,U.re=M,U.ie=xe.Me,N.re=K,N.ie=xe.Ke,T.re=P,T.ie=xe.Pe,F=0,O=0,j=8,q(),(()=>{w=2*f,d[y-1]=0;for(let e=0;y-1>e;e++)d[e]=0;D=Ve[V].De,B=Ve[V].Ae,E=Ve[V].Ve,A=Ve[V].Re,C=0,k=0,x=0,v=_=2,z=0,p=0})(),0))(t))),e.Qe=()=>42!=n&&113!=n&&666!=n?-2:(e.Te=null,e.Ne=null,e.Ue=null,d=null,h=null,u=null,e.Oe=null,113==n?-3:0),e.Xe=(e,t,n)=>{let r=0;return-1==t&&(t=6),0>t||t>9||0>n||n>2?-2:(Ve[V].Be!=Ve[t].Be&&0!==e.qe&&(r=e.Ye(1)),V!=t&&(V=t,D=Ve[V].De,B=Ve[V].Ae,E=Ve[V].Ve,A=Ve[V].Re),R=n,r)},e.Ze=(e,t,r)=>{let s,i=r,o=0;if(!t||42!=n)return-2;if(3>i)return 0;for(i>f-262&&(i=f-262,o=r-i),u.set(t.subarray(o,o+i),0),C=i,k=i,p=255&u[0],p=(p<<g^255&u[1])&b,s=0;i-3>=s;s++)p=(p<<g^255&u[s+2])&b,h[s&l]=d[p],d[p]=s;return 0},e.Ye=(r,i)=>{let o,w,m,A,B;if(i>4||0>i)return-2;if(!r.$e||!r.et&&0!==r.He||666==n&&4!=i)return r.Fe=Re[4],-2;if(0===r.tt)return r.Fe=Re[7],-5;var E;if(t=r,A=c,c=i,42==n&&(w=8+(a-8<<4)<<8,m=(V-1&255)>>1,m>3&&(m=3),w|=m<<6,0!==C&&(w|=32),w+=31-w%31,n=113,J((E=w)>>8&255),J(255&E)),0!==e.pending){if(t.We(),0===t.tt)return c=-1,0}else if(0===t.He&&A>=i&&4!=i)return t.Fe=Re[7],-5;if(666==n&&0!==t.He)return r.Fe=Re[7],-5;if(0!==t.He||0!==x||0!=i&&666!=n){switch(B=-1,Ve[V].Be){case 0:B=(e=>{let n,r=65535;for(r>s-5&&(r=s-5);;){if(1>=x){if(ie(),0===x&&0==e)return 0;if(0===x)break}if(C+=x,x=0,n=k+r,(0===C||C>=n)&&(x=C-n,C=n,se(!1),0===t.tt))return 0;if(C-k>=f-262&&(se(!1),0===t.tt))return 0}return se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i);break;case 1:B=(e=>{let n,r=0;for(;;){if(262>x){if(ie(),262>x&&0==e)return 0;if(0===x)break}if(3>x||(p=(p<<g^255&u[C+2])&b,r=65535&d[p],h[C&l]=d[p],d[p]=C),0===r||(C-r&65535)>f-262||2!=R&&(v=oe(r)),3>v)n=ee(0,255&u[C]),x--,C++;else if(n=ee(C-I,v-3),x-=v,v>D||3>x)C+=v,v=0,p=255&u[C],p=(p<<g^255&u[C+1])&b;else{v--;do{C++,p=(p<<g^255&u[C+2])&b,r=65535&d[p],h[C&l]=d[p],d[p]=C}while(0!=--v);C++}if(n&&(se(!1),0===t.tt))return 0}return se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i);break;case 2:B=(e=>{let n,r,s=0;for(;;){if(262>x){if(ie(),262>x&&0==e)return 0;if(0===x)break}if(3>x||(p=(p<<g^255&u[C+2])&b,s=65535&d[p],h[C&l]=d[p],d[p]=C),_=v,S=I,v=2,0!==s&&D>_&&f-262>=(C-s&65535)&&(2!=R&&(v=oe(s)),5>=v&&(1==R||3==v&&C-I>4096)&&(v=2)),3>_||v>_)if(0!==z){if(n=ee(0,255&u[C-1]),n&&se(!1),C++,x--,0===t.tt)return 0}else z=1,C++,x--;else{r=C+x-3,n=ee(C-1-S,_-3),x-=_-1,_-=2;do{++C>r||(p=(p<<g^255&u[C+2])&b,s=65535&d[p],h[C&l]=d[p],d[p]=C)}while(0!=--_);if(z=0,v=2,C++,n&&(se(!1),0===t.tt))return 0}}return 0!==z&&(n=ee(0,255&u[C-1]),z=0),se(4==e),0===t.tt?4==e?2:0:4==e?3:1})(i)}if(2!=B&&3!=B||(n=666),0==B||2==B)return 0===t.tt&&(c=-1),0;if(1==B){if(1==i)X(2,3),Y(256,xe._e),$(),9>1+j+10-O&&(X(2,3),Y(256,xe._e),$()),j=7;else if(re(0,0,!1),3==i)for(o=0;y>o;o++)d[o]=0;if(t.We(),0===t.tt)return c=-1,0}}return 4!=i?0:1}}function Me(){const e=this;e.nt=0,e.rt=0,e.He=0,e.qe=0,e.tt=0,e.Ge=0}function Ke(e){const t=new Me,n=(o=e&&e.chunkSize?e.chunkSize:65536)+5*(r.floor(o/16383)+1);var o;const c=new i(n);let f=e?e.level:-1;void 0===f&&(f=-1),t.je(f),t.$e=c,this.append=(e,r)=>{let o,f,a=0,l=0,u=0;const w=[];if(e.length){t.nt=0,t.et=e,t.He=e.length;do{if(t.rt=0,t.tt=n,o=t.Ye(0),0!=o)throw new s(\"deflating: \"+t.Fe);t.rt&&(t.rt==n?w.push(new i(c)):w.push(c.slice(0,t.rt))),u+=t.rt,r&&t.nt>0&&t.nt!=a&&(r(t.nt),a=t.nt)}while(t.He>0||0===t.tt);return w.length>1?(f=new i(u),w.forEach((e=>{f.set(e,l),l+=e.length}))):f=w[0]||new i,f}},this.flush=()=>{let e,r,o=0,f=0;const a=[];do{if(t.rt=0,t.tt=n,e=t.Ye(4),1!=e&&0!=e)throw new s(\"deflating: \"+t.Fe);n-t.tt>0&&a.push(c.slice(0,t.rt)),f+=t.rt}while(t.He>0||0===t.tt);return t.Qe(),r=new i(f),a.forEach((e=>{r.set(e,o),o+=e.length})),r}}Me.prototype={je(e,t){const n=this;return n.Oe=new Ee,t||(t=15),n.Oe.je(n,e,t)},Ye(e){const t=this;return t.Oe?t.Oe.Ye(t,e):-2},Qe(){const e=this;if(!e.Oe)return-2;const t=e.Oe.Qe();return e.Oe=null,t},Xe(e,t){const n=this;return n.Oe?n.Oe.Xe(n,e,t):-2},Ze(e,t){const n=this;return n.Oe?n.Oe.Ze(n,e,t):-2},Le(e,t,n){const r=this;let s=r.He;return s>n&&(s=n),0===s?0:(r.He-=s,e.set(r.et.subarray(r.nt,r.nt+s),t),r.nt+=s,r.qe+=s,s)},We(){const e=this;let t=e.Oe.pending;t>e.tt&&(t=e.tt),0!==t&&(e.$e.set(e.Oe.Ue.subarray(e.Oe.Je,e.Oe.Je+t),e.rt),e.rt+=t,e.Oe.Je+=t,e.Ge+=t,e.tt-=t,e.Oe.pending-=t,0===e.Oe.pending&&(e.Oe.Je=0))}};const Pe=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],Ue=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],Ne=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],Te=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],We=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],He=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],Le=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];function je(){let e,t,n,r,s,i;function o(e,t,o,c,f,a,l,u,w,h,d){let p,y,m,b,g,k,v,S,z,C,I,x,_,A,D;C=0,g=o;do{n[e[t+C]]++,C++,g--}while(0!==g);if(n[0]==o)return l[0]=-1,u[0]=0,0;for(S=u[0],k=1;15>=k&&0===n[k];k++);for(v=k,k>S&&(S=k),g=15;0!==g&&0===n[g];g--);for(m=g,S>g&&(S=g),u[0]=S,A=1<<k;g>k;k++,A<<=1)if(0>(A-=n[k]))return-3;if(0>(A-=n[g]))return-3;for(n[g]+=A,i[1]=k=0,C=1,_=2;0!=--g;)i[_]=k+=n[C],_++,C++;g=0,C=0;do{0!==(k=e[t+C])&&(d[i[k]++]=g),C++}while(++g<o);for(o=i[m],i[0]=g=0,C=0,b=-1,x=-S,s[0]=0,I=0,D=0;m>=v;v++)for(p=n[v];0!=p--;){for(;v>x+S;){if(b++,x+=S,D=m-x,D=D>S?S:D,(y=1<<(k=v-x))>p+1&&(y-=p+1,_=v,D>k))for(;++k<D&&(y<<=1)>n[++_];)y-=n[_];if(D=1<<k,h[0]+D>1440)return-3;s[b]=I=h[0],h[0]+=D,0!==b?(i[b]=g,r[0]=k,r[1]=S,k=g>>>x-S,r[2]=I-s[b-1]-k,w.set(r,3*(s[b-1]+k))):l[0]=I}for(r[1]=v-x,o>C?d[C]<c?(r[0]=256>d[C]?0:96,r[2]=d[C++]):(r[0]=a[d[C]-c]+16+64,r[2]=f[d[C++]-c]):r[0]=192,y=1<<v-x,k=g>>>x;D>k;k+=y)w.set(r,3*(I+k));for(k=1<<v-1;0!=(g&k);k>>>=1)g^=k;for(g^=k,z=(1<<x)-1;(g&z)!=i[b];)b--,x-=S,z=(1<<x)-1}return 0!==A&&1!=m?-5:0}function c(o){let c;for(e||(e=[],t=[],n=new f(16),r=[],s=new f(15),i=new f(16)),t.length<o&&(t=[]),c=0;o>c;c++)t[c]=0;for(c=0;16>c;c++)n[c]=0;for(c=0;3>c;c++)r[c]=0;s.set(n.subarray(0,15),0),i.set(n.subarray(0,16),0)}this.st=(n,r,s,i,f)=>{let a;return c(19),e[0]=0,a=o(n,0,19,19,null,null,s,r,i,e,t),-3==a?f.Fe=\"oversubscribed dynamic bit lengths tree\":-5!=a&&0!==r[0]||(f.Fe=\"incomplete dynamic bit lengths tree\",a=-3),a},this.it=(n,r,s,i,f,a,l,u,w)=>{let h;return c(288),e[0]=0,h=o(s,0,n,257,Te,We,a,i,u,e,t),0!=h||0===i[0]?(-3==h?w.Fe=\"oversubscribed literal/length tree\":-4!=h&&(w.Fe=\"incomplete literal/length tree\",h=-3),h):(c(288),h=o(s,n,r,0,He,Le,l,f,u,e,t),0!=h||0===f[0]&&n>257?(-3==h?w.Fe=\"oversubscribed distance tree\":-5==h?(w.Fe=\"incomplete distance tree\",h=-3):-4!=h&&(w.Fe=\"empty distance tree with lengths\",h=-3),h):0)}}function Fe(){const e=this;let t,n,r,s,i=0,o=0,c=0,f=0,a=0,l=0,u=0,w=0,h=0,d=0;function p(e,t,n,r,s,i,o,c){let f,a,l,u,w,h,d,p,y,m,b,g,k,v,S,z;d=c.nt,p=c.He,w=o.ot,h=o.ct,y=o.write,m=y<o.read?o.read-y-1:o.end-y,b=Pe[e],g=Pe[t];do{for(;20>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;if(f=w&b,a=n,l=r,z=3*(l+f),0!==(u=a[z]))for(;;){if(w>>=a[z+1],h-=a[z+1],0!=(16&u)){for(u&=15,k=a[z+2]+(w&Pe[u]),w>>=u,h-=u;15>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;for(f=w&g,a=s,l=i,z=3*(l+f),u=a[z];;){if(w>>=a[z+1],h-=a[z+1],0!=(16&u)){for(u&=15;u>h;)p--,w|=(255&c.ft(d++))<<h,h+=8;if(v=a[z+2]+(w&Pe[u]),w>>=u,h-=u,m-=k,v>y){S=y-v;do{S+=o.end}while(0>S);if(u=o.end-S,k>u){if(k-=u,y-S>0&&u>y-S)do{o.lt[y++]=o.lt[S++]}while(0!=--u);else o.lt.set(o.lt.subarray(S,S+u),y),y+=u,S+=u,u=0;S=0}}else S=y-v,y-S>0&&2>y-S?(o.lt[y++]=o.lt[S++],o.lt[y++]=o.lt[S++],k-=2):(o.lt.set(o.lt.subarray(S,S+2),y),y+=2,S+=2,k-=2);if(y-S>0&&k>y-S)do{o.lt[y++]=o.lt[S++]}while(0!=--k);else o.lt.set(o.lt.subarray(S,S+k),y),y+=k,S+=k,k=0;break}if(0!=(64&u))return c.Fe=\"invalid distance code\",k=c.He-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.He=p,c.qe+=d-c.nt,c.nt=d,o.write=y,-3;f+=a[z+2],f+=w&Pe[u],z=3*(l+f),u=a[z]}break}if(0!=(64&u))return 0!=(32&u)?(k=c.He-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.He=p,c.qe+=d-c.nt,c.nt=d,o.write=y,1):(c.Fe=\"invalid literal/length code\",k=c.He-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.He=p,c.qe+=d-c.nt,c.nt=d,o.write=y,-3);if(f+=a[z+2],f+=w&Pe[u],z=3*(l+f),0===(u=a[z])){w>>=a[z+1],h-=a[z+1],o.lt[y++]=a[z+2],m--;break}}else w>>=a[z+1],h-=a[z+1],o.lt[y++]=a[z+2],m--}while(m>=258&&p>=10);return k=c.He-p,k=k>h>>3?h>>3:k,p+=k,d-=k,h-=k<<3,o.ot=w,o.ct=h,c.He=p,c.qe+=d-c.nt,c.nt=d,o.write=y,0}e.init=(e,i,o,c,f,a)=>{t=0,u=e,w=i,r=o,h=c,s=f,d=a,n=null},e.ut=(e,y,m)=>{let b,g,k,v,S,z,C,I=0,x=0,_=0;for(_=y.nt,v=y.He,I=e.ot,x=e.ct,S=e.write,z=S<e.read?e.read-S-1:e.end-S;;)switch(t){case 0:if(z>=258&&v>=10&&(e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,m=p(u,w,r,h,s,d,e,y),_=y.nt,v=y.He,I=e.ot,x=e.ct,S=e.write,z=S<e.read?e.read-S-1:e.end-S,0!=m)){t=1==m?7:9;break}c=u,n=r,o=h,t=1;case 1:for(b=c;b>x;){if(0===v)return e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);m=0,v--,I|=(255&y.ft(_++))<<x,x+=8}if(g=3*(o+(I&Pe[b])),I>>>=n[g+1],x-=n[g+1],k=n[g],0===k){f=n[g+2],t=6;break}if(0!=(16&k)){a=15&k,i=n[g+2],t=2;break}if(0==(64&k)){c=k,o=g/3+n[g+2];break}if(0!=(32&k)){t=7;break}return t=9,y.Fe=\"invalid literal/length code\",m=-3,e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);case 2:for(b=a;b>x;){if(0===v)return e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);m=0,v--,I|=(255&y.ft(_++))<<x,x+=8}i+=I&Pe[b],I>>=b,x-=b,c=w,n=s,o=d,t=3;case 3:for(b=c;b>x;){if(0===v)return e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);m=0,v--,I|=(255&y.ft(_++))<<x,x+=8}if(g=3*(o+(I&Pe[b])),I>>=n[g+1],x-=n[g+1],k=n[g],0!=(16&k)){a=15&k,l=n[g+2],t=4;break}if(0==(64&k)){c=k,o=g/3+n[g+2];break}return t=9,y.Fe=\"invalid distance code\",m=-3,e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);case 4:for(b=a;b>x;){if(0===v)return e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);m=0,v--,I|=(255&y.ft(_++))<<x,x+=8}l+=I&Pe[b],I>>=b,x-=b,t=5;case 5:for(C=S-l;0>C;)C+=e.end;for(;0!==i;){if(0===z&&(S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z&&(e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z)))return e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);e.lt[S++]=e.lt[C++],z--,C==e.end&&(C=0),i--}t=0;break;case 6:if(0===z&&(S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z&&(e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,S==e.end&&0!==e.read&&(S=0,z=S<e.read?e.read-S-1:e.end-S),0===z)))return e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);m=0,e.lt[S++]=f,z--,t=0;break;case 7:if(x>7&&(x-=8,v++,_--),e.write=S,m=e.wt(y,m),S=e.write,z=S<e.read?e.read-S-1:e.end-S,e.read!=e.write)return e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);t=8;case 8:return m=1,e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);case 9:return m=-3,e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m);default:return m=-2,e.ot=I,e.ct=x,y.He=v,y.qe+=_-y.nt,y.nt=_,e.write=S,e.wt(y,m)}},e.ht=()=>{}}je.dt=(e,t,n,r)=>(e[0]=9,t[0]=5,n[0]=Ue,r[0]=Ne,0);const Oe=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function qe(e,t){const n=this;let r,s=0,o=0,c=0,a=0;const l=[0],u=[0],w=new Fe;let h=0,d=new f(4320);const p=new je;n.ct=0,n.ot=0,n.lt=new i(t),n.end=t,n.read=0,n.write=0,n.reset=(e,t)=>{t&&(t[0]=0),6==s&&w.ht(e),s=0,n.ct=0,n.ot=0,n.read=n.write=0},n.reset(e,null),n.wt=(e,t)=>{let r,s,i;return s=e.rt,i=n.read,r=(i>n.write?n.end:n.write)-i,r>e.tt&&(r=e.tt),0!==r&&-5==t&&(t=0),e.tt-=r,e.Ge+=r,e.$e.set(n.lt.subarray(i,i+r),s),s+=r,i+=r,i==n.end&&(i=0,n.write==n.end&&(n.write=0),r=n.write-i,r>e.tt&&(r=e.tt),0!==r&&-5==t&&(t=0),e.tt-=r,e.Ge+=r,e.$e.set(n.lt.subarray(i,i+r),s),s+=r,i+=r),e.rt=s,n.read=i,t},n.ut=(e,t)=>{let i,f,y,m,b,g,k,v;for(m=e.nt,b=e.He,f=n.ot,y=n.ct,g=n.write,k=g<n.read?n.read-g-1:n.end-g;;){let S,z,C,I,x,_,A,D;switch(s){case 0:for(;3>y;){if(0===b)return n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}switch(i=7&f,h=1&i,i>>>1){case 0:f>>>=3,y-=3,i=7&y,f>>>=i,y-=i,s=1;break;case 1:S=[],z=[],C=[[]],I=[[]],je.dt(S,z,C,I),w.init(S[0],z[0],C[0],0,I[0],0),f>>>=3,y-=3,s=6;break;case 2:f>>>=3,y-=3,s=3;break;case 3:return f>>>=3,y-=3,s=9,e.Fe=\"invalid block type\",t=-3,n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t)}break;case 1:for(;32>y;){if(0===b)return n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if((~f>>>16&65535)!=(65535&f))return s=9,e.Fe=\"invalid stored block lengths\",t=-3,n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);o=65535&f,f=y=0,s=0!==o?2:0!==h?7:0;break;case 2:if(0===b)return n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(0===k&&(g==n.end&&0!==n.read&&(g=0,k=g<n.read?n.read-g-1:n.end-g),0===k&&(n.write=g,t=n.wt(e,t),g=n.write,k=g<n.read?n.read-g-1:n.end-g,g==n.end&&0!==n.read&&(g=0,k=g<n.read?n.read-g-1:n.end-g),0===k)))return n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(t=0,i=o,i>b&&(i=b),i>k&&(i=k),n.lt.set(e.Le(m,i),g),m+=i,b-=i,g+=i,k-=i,0!=(o-=i))break;s=0!==h?7:0;break;case 3:for(;14>y;){if(0===b)return n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(c=i=16383&f,(31&i)>29||(i>>5&31)>29)return s=9,e.Fe=\"too many length or distance symbols\",t=-3,n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);if(i=258+(31&i)+(i>>5&31),!r||r.length<i)r=[];else for(v=0;i>v;v++)r[v]=0;f>>>=14,y-=14,a=0,s=4;case 4:for(;4+(c>>>10)>a;){for(;3>y;){if(0===b)return n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}r[Oe[a++]]=7&f,f>>>=3,y-=3}for(;19>a;)r[Oe[a++]]=0;if(l[0]=7,i=p.st(r,l,u,d,e),0!=i)return-3==(t=i)&&(r=null,s=9),n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);a=0,s=5;case 5:for(;i=c,258+(31&i)+(i>>5&31)>a;){let o,w;for(i=l[0];i>y;){if(0===b)return n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(i=d[3*(u[0]+(f&Pe[i]))+1],w=d[3*(u[0]+(f&Pe[i]))+2],16>w)f>>>=i,y-=i,r[a++]=w;else{for(v=18==w?7:w-14,o=18==w?11:3;i+v>y;){if(0===b)return n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);t=0,b--,f|=(255&e.ft(m++))<<y,y+=8}if(f>>>=i,y-=i,o+=f&Pe[v],f>>>=v,y-=v,v=a,i=c,v+o>258+(31&i)+(i>>5&31)||16==w&&1>v)return r=null,s=9,e.Fe=\"invalid bit length repeat\",t=-3,n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);w=16==w?r[v-1]:0;do{r[v++]=w}while(0!=--o);a=v}}if(u[0]=-1,x=[],_=[],A=[],D=[],x[0]=9,_[0]=6,i=c,i=p.it(257+(31&i),1+(i>>5&31),r,x,_,A,D,d,e),0!=i)return-3==i&&(r=null,s=9),t=i,n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);w.init(x[0],_[0],d,A[0],d,D[0]),s=6;case 6:if(n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,1!=(t=w.ut(n,e,t)))return n.wt(e,t);if(t=0,w.ht(e),m=e.nt,b=e.He,f=n.ot,y=n.ct,g=n.write,k=g<n.read?n.read-g-1:n.end-g,0===h){s=0;break}s=7;case 7:if(n.write=g,t=n.wt(e,t),g=n.write,k=g<n.read?n.read-g-1:n.end-g,n.read!=n.write)return n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);s=8;case 8:return t=1,n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);case 9:return t=-3,n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t);default:return t=-2,n.ot=f,n.ct=y,e.He=b,e.qe+=m-e.nt,e.nt=m,n.write=g,n.wt(e,t)}}},n.ht=e=>{n.reset(e,null),n.lt=null,d=null},n.yt=(e,t,r)=>{n.lt.set(e.subarray(t,t+r),0),n.read=n.write=r},n.bt=()=>1==s?1:0}const Ge=[0,0,255,255];function Je(){const e=this;function t(e){return e&&e.gt?(e.qe=e.Ge=0,e.Fe=null,e.gt.mode=7,e.gt.kt.reset(e,null),0):-2}e.mode=0,e.method=0,e.vt=[0],e.St=0,e.marker=0,e.zt=0,e.Ct=t=>(e.kt&&e.kt.ht(t),e.kt=null,0),e.It=(n,r)=>(n.Fe=null,e.kt=null,8>r||r>15?(e.Ct(n),-2):(e.zt=r,n.gt.kt=new qe(n,1<<r),t(n),0)),e.xt=(e,t)=>{let n,r;if(!e||!e.gt||!e.et)return-2;const s=e.gt;for(t=4==t?-5:0,n=-5;;)switch(s.mode){case 0:if(0===e.He)return n;if(n=t,e.He--,e.qe++,8!=(15&(s.method=e.ft(e.nt++)))){s.mode=13,e.Fe=\"unknown compression method\",s.marker=5;break}if(8+(s.method>>4)>s.zt){s.mode=13,e.Fe=\"invalid win size\",s.marker=5;break}s.mode=1;case 1:if(0===e.He)return n;if(n=t,e.He--,e.qe++,r=255&e.ft(e.nt++),((s.method<<8)+r)%31!=0){s.mode=13,e.Fe=\"incorrect header check\",s.marker=5;break}if(0==(32&r)){s.mode=7;break}s.mode=2;case 2:if(0===e.He)return n;n=t,e.He--,e.qe++,s.St=(255&e.ft(e.nt++))<<24&4278190080,s.mode=3;case 3:if(0===e.He)return n;n=t,e.He--,e.qe++,s.St+=(255&e.ft(e.nt++))<<16&16711680,s.mode=4;case 4:if(0===e.He)return n;n=t,e.He--,e.qe++,s.St+=(255&e.ft(e.nt++))<<8&65280,s.mode=5;case 5:return 0===e.He?n:(n=t,e.He--,e.qe++,s.St+=255&e.ft(e.nt++),s.mode=6,2);case 6:return s.mode=13,e.Fe=\"need dictionary\",s.marker=0,-2;case 7:if(n=s.kt.ut(e,n),-3==n){s.mode=13,s.marker=0;break}if(0==n&&(n=t),1!=n)return n;n=t,s.kt.reset(e,s.vt),s.mode=12;case 12:return e.He=0,1;case 13:return-3;default:return-2}},e._t=(e,t,n)=>{let r=0,s=n;if(!e||!e.gt||6!=e.gt.mode)return-2;const i=e.gt;return s<1<<i.zt||(s=(1<<i.zt)-1,r=n-s),i.kt.yt(t,r,s),i.mode=7,0},e.At=e=>{let n,r,s,i,o;if(!e||!e.gt)return-2;const c=e.gt;if(13!=c.mode&&(c.mode=13,c.marker=0),0===(n=e.He))return-5;for(r=e.nt,s=c.marker;0!==n&&4>s;)e.ft(r)==Ge[s]?s++:s=0!==e.ft(r)?0:4-s,r++,n--;return e.qe+=r-e.nt,e.nt=r,e.He=n,c.marker=s,4!=s?-3:(i=e.qe,o=e.Ge,t(e),e.qe=i,e.Ge=o,c.mode=7,0)},e.Dt=e=>e&&e.gt&&e.gt.kt?e.gt.kt.bt():-2}function Qe(){}function Xe(e){const t=new Qe,n=e&&e.chunkSize?r.floor(2*e.chunkSize):131072,o=new i(n);let c=!1;t.It(),t.$e=o,this.append=(e,r)=>{const f=[];let a,l,u=0,w=0,h=0;if(0!==e.length){t.nt=0,t.et=e,t.He=e.length;do{if(t.rt=0,t.tt=n,0!==t.He||c||(t.nt=0,c=!0),a=t.xt(0),c&&-5===a){if(0!==t.He)throw new s(\"inflating: bad input\")}else if(0!==a&&1!==a)throw new s(\"inflating: \"+t.Fe);if((c||1===a)&&t.He===e.length)throw new s(\"inflating: bad input\");t.rt&&(t.rt===n?f.push(new i(o)):f.push(o.slice(0,t.rt))),h+=t.rt,r&&t.nt>0&&t.nt!=u&&(r(t.nt),u=t.nt)}while(t.He>0||0===t.tt);return f.length>1?(l=new i(h),f.forEach((e=>{l.set(e,w),w+=e.length}))):l=f[0]||new i,l}},this.flush=()=>{t.Ct()}}Qe.prototype={It(e){const t=this;return t.gt=new Je,e||(e=15),t.gt.It(t,e)},xt(e){const t=this;return t.gt?t.gt.xt(t,e):-2},Ct(){const e=this;if(!e.gt)return-2;const t=e.gt.Ct(e);return e.gt=null,t},At(){const e=this;return e.gt?e.gt.At(e):-2},_t(e,t){const n=this;return n.gt?n.gt._t(n,e,t):-2},ft(e){return this.et[e]},Le(e,t){return this.et.subarray(e,e+t)}},self.initCodec=()=>{self.Deflate=Ke,self.Inflate=Xe};\\n'],{type:\"text/javascript\"}));e({workerScripts:{inflate:[t],deflate:[t]}})}export{e as configureWebWorker};\n","\n/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// deno-lint-ignore-file no-this-alias\n\nexport {\n\tinitShimAsyncCodec\n};\n\nfunction initShimAsyncCodec(library, options = {}, registerDataHandler) {\n\treturn {\n\t\tDeflate: createCodecClass(library.Deflate, options.deflate, registerDataHandler),\n\t\tInflate: createCodecClass(library.Inflate, options.inflate, registerDataHandler)\n\t};\n}\n\nfunction createCodecClass(constructor, constructorOptions, registerDataHandler) {\n\treturn class {\n\n\t\tconstructor(options) {\n\t\t\tconst codecAdapter = this;\n\t\t\tconst onData = data => {\n\t\t\t\tif (codecAdapter.pendingData) {\n\t\t\t\t\tconst previousPendingData = codecAdapter.pendingData;\n\t\t\t\t\tcodecAdapter.pendingData = new Uint8Array(previousPendingData.length + data.length);\n\t\t\t\t\tconst { pendingData } = codecAdapter;\n\t\t\t\t\tpendingData.set(previousPendingData, 0);\n\t\t\t\t\tpendingData.set(data, previousPendingData.length);\n\t\t\t\t} else {\n\t\t\t\t\tcodecAdapter.pendingData = new Uint8Array(data);\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (Object.hasOwn(options, \"level\") && options.level === undefined) {\n\t\t\t\tdelete options.level;\n\t\t\t}\n\t\t\tcodecAdapter.codec = new constructor(Object.assign({}, constructorOptions, options));\n\t\t\tregisterDataHandler(codecAdapter.codec, onData);\n\t\t}\n\t\tappend(data) {\n\t\t\tthis.codec.push(data);\n\t\t\treturn getResponse(this);\n\t\t}\n\t\tflush() {\n\t\t\tthis.codec.push(new Uint8Array(), true);\n\t\t\treturn getResponse(this);\n\t\t}\n\t};\n\n\tfunction getResponse(codec) {\n\t\tif (codec.pendingData) {\n\t\t\tconst output = codec.pendingData;\n\t\t\tcodec.pendingData = null;\n\t\t\treturn output;\n\t\t} else {\n\t\t\treturn new Uint8Array();\n\t\t}\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global Blob, atob, btoa, XMLHttpRequest, URL, fetch, ReadableStream, WritableStream, FileReader, TransformStream, Response */\n// deno-lint-ignore-file no-this-alias\n\nconst ERR_HTTP_STATUS = \"HTTP error \";\nconst ERR_HTTP_RANGE = \"HTTP Range not supported\";\nconst ERR_ITERATOR_COMPLETED_TOO_SOON = \"Writer iterator completed too soon\";\n\nconst CONTENT_TYPE_TEXT_PLAIN = \"text/plain\";\nconst HTTP_HEADER_CONTENT_LENGTH = \"Content-Length\";\nconst HTTP_HEADER_CONTENT_RANGE = \"Content-Range\";\nconst HTTP_HEADER_ACCEPT_RANGES = \"Accept-Ranges\";\nconst HTTP_HEADER_RANGE = \"Range\";\nconst HTTP_HEADER_CONTENT_TYPE = \"Content-Type\";\nconst HTTP_METHOD_HEAD = \"HEAD\";\nconst HTTP_METHOD_GET = \"GET\";\nconst HTTP_RANGE_UNIT = \"bytes\";\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst PROPERTY_NAME_WRITABLE = \"writable\";\n\nimport {\n\tUNDEFINED_VALUE,\n\tFUNCTION_TYPE\n} from \"./constants.js\";\nimport { getConfiguration } from \"./configuration.js\";\n\nclass Stream {\n\n\tconstructor() {\n\t\tthis.size = 0;\n\t}\n\n\tinit() {\n\t\tthis.initialized = true;\n\t}\n}\n\nclass Reader extends Stream {\n\n\tget readable() {\n\t\tconst reader = this;\n\t\tconst { chunkSize = DEFAULT_CHUNK_SIZE } = reader;\n\t\tconst readable = new ReadableStream({\n\t\t\tstart() {\n\t\t\t\tthis.chunkOffset = 0;\n\t\t\t},\n\t\t\tasync pull(controller) {\n\t\t\t\tconst { offset = 0, size, diskNumberStart } = readable;\n\t\t\t\tconst { chunkOffset } = this;\n\t\t\t\tcontroller.enqueue(await readUint8Array(reader, offset + chunkOffset, Math.min(chunkSize, size - chunkOffset), diskNumberStart));\n\t\t\t\tif (chunkOffset + chunkSize > size) {\n\t\t\t\t\tcontroller.close();\n\t\t\t\t} else {\n\t\t\t\t\tthis.chunkOffset += chunkSize;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn readable;\n\t}\n}\n\nclass Writer extends Stream {\n\n\tconstructor() {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tconst writable = new WritableStream({\n\t\t\twrite(chunk) {\n\t\t\t\treturn writer.writeUint8Array(chunk);\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn writable;\n\t\t\t}\n\t\t});\n\t}\n\n\twriteUint8Array() {\n\t\t// abstract\n\t}\n}\n\nclass Data64URIReader extends Reader {\n\n\tconstructor(dataURI) {\n\t\tsuper();\n\t\tlet dataEnd = dataURI.length;\n\t\twhile (dataURI.charAt(dataEnd - 1) == \"=\") {\n\t\t\tdataEnd--;\n\t\t}\n\t\tconst dataStart = dataURI.indexOf(\",\") + 1;\n\t\tObject.assign(this, {\n\t\t\tdataURI,\n\t\t\tdataStart,\n\t\t\tsize: Math.floor((dataEnd - dataStart) * 0.75)\n\t\t});\n\t}\n\n\treadUint8Array(offset, length) {\n\t\tconst {\n\t\t\tdataStart,\n\t\t\tdataURI\n\t\t} = this;\n\t\tconst dataArray = new Uint8Array(length);\n\t\tconst start = Math.floor(offset / 3) * 4;\n\t\tconst bytes = atob(dataURI.substring(start + dataStart, Math.ceil((offset + length) / 3) * 4 + dataStart));\n\t\tconst delta = offset - Math.floor(start / 4) * 3;\n\t\tfor (let indexByte = delta; indexByte < delta + length; indexByte++) {\n\t\t\tdataArray[indexByte - delta] = bytes.charCodeAt(indexByte);\n\t\t}\n\t\treturn dataArray;\n\t}\n}\n\nclass Data64URIWriter extends Writer {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tdata: \"data:\" + (contentType || \"\") + \";base64,\",\n\t\t\tpending: []\n\t\t});\n\t}\n\n\twriteUint8Array(array) {\n\t\tconst writer = this;\n\t\tlet indexArray = 0;\n\t\tlet dataString = writer.pending;\n\t\tconst delta = writer.pending.length;\n\t\twriter.pending = \"\";\n\t\tfor (indexArray = 0; indexArray < (Math.floor((delta + array.length) / 3) * 3) - delta; indexArray++) {\n\t\t\tdataString += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tfor (; indexArray < array.length; indexArray++) {\n\t\t\twriter.pending += String.fromCharCode(array[indexArray]);\n\t\t}\n\t\tif (dataString.length > 2) {\n\t\t\twriter.data += btoa(dataString);\n\t\t} else {\n\t\t\twriter.pending = dataString;\n\t\t}\n\t}\n\n\tgetData() {\n\t\treturn this.data + btoa(this.pending);\n\t}\n}\n\nclass BlobReader extends Reader {\n\n\tconstructor(blob) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tblob,\n\t\t\tsize: blob.size\n\t\t});\n\t}\n\n\tasync readUint8Array(offset, length) {\n\t\tconst reader = this;\n\t\tconst offsetEnd = offset + length;\n\t\tconst blob = offset || offsetEnd < reader.size ? reader.blob.slice(offset, offsetEnd) : reader.blob;\n\t\treturn new Uint8Array(await blob.arrayBuffer());\n\t}\n}\n\nclass BlobWriter extends Stream {\n\n\tconstructor(contentType) {\n\t\tsuper();\n\t\tconst writer = this;\n\t\tconst transformStream = new TransformStream();\n\t\tconst headers = [];\n\t\tif (contentType) {\n\t\t\theaders.push([HTTP_HEADER_CONTENT_TYPE, contentType]);\n\t\t}\n\t\tObject.defineProperty(writer, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn transformStream.writable;\n\t\t\t}\n\t\t});\n\t\twriter.blob = new Response(transformStream.readable, { headers }).blob();\n\t}\n\n\tgetData() {\n\t\treturn this.blob;\n\t}\n}\n\nclass TextReader extends BlobReader {\n\n\tconstructor(text) {\n\t\tsuper(new Blob([text], { type: CONTENT_TYPE_TEXT_PLAIN }));\n\t}\n}\n\nclass TextWriter extends BlobWriter {\n\n\tconstructor(encoding) {\n\t\tsuper(encoding);\n\t\tObject.assign(this, {\n\t\t\tencoding,\n\t\t\tutf8: !encoding || encoding.toLowerCase() == \"utf-8\"\n\t\t});\n\t}\n\n\tasync getData() {\n\t\tconst {\n\t\t\tencoding,\n\t\t\tutf8\n\t\t} = this;\n\t\tconst blob = await super.getData();\n\t\tif (blob.text && utf8) {\n\t\t\treturn blob.text();\n\t\t} else {\n\t\t\tconst reader = new FileReader();\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tObject.assign(reader, {\n\t\t\t\t\tonload: ({ target }) => resolve(target.result),\n\t\t\t\t\tonerror: () => reject(reader.error)\n\t\t\t\t});\n\t\t\t\treader.readAsText(blob, encoding);\n\t\t\t});\n\t\t}\n\t}\n}\n\nclass FetchReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tcreateHtpReader(this, url, options);\n\t}\n\n\tasync init() {\n\t\tsuper.init();\n\t\tawait initHttpReader(this, sendFetchRequest, getFetchRequestData);\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendFetchRequest, getFetchRequestData);\n\t}\n}\n\nclass XHRReader extends Reader {\n\n\tconstructor(url, options) {\n\t\tsuper();\n\t\tcreateHtpReader(this, url, options);\n\t}\n\n\tasync init() {\n\t\tsuper.init();\n\t\tawait initHttpReader(this, sendXMLHttpRequest, getXMLHttpRequestData);\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn readUint8ArrayHttpReader(this, index, length, sendXMLHttpRequest, getXMLHttpRequestData);\n\t}\n}\n\nfunction createHtpReader(httpReader, url, options) {\n\tconst {\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests\n\t} = options;\n\toptions = Object.assign({}, options);\n\tdelete options.preventHeadRequest;\n\tdelete options.useRangeHeader;\n\tdelete options.forceRangeRequests;\n\tdelete options.useXHR;\n\tObject.assign(httpReader, {\n\t\turl,\n\t\toptions,\n\t\tpreventHeadRequest,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests\n\t});\n}\n\nasync function initHttpReader(httpReader, sendRequest, getRequestData) {\n\tconst {\n\t\turl,\n\t\tuseRangeHeader,\n\t\tforceRangeRequests\n\t} = httpReader;\n\tif (isHttpFamily(url) && (useRangeHeader || forceRangeRequests)) {\n\t\tconst { headers } = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader));\n\t\tif (!forceRangeRequests && headers.get(HTTP_HEADER_ACCEPT_RANGES) != HTTP_RANGE_UNIT) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t} else {\n\t\t\tlet contentSize;\n\t\t\tconst contentRangeHeader = headers.get(HTTP_HEADER_CONTENT_RANGE);\n\t\t\tif (contentRangeHeader) {\n\t\t\t\tconst splitHeader = contentRangeHeader.trim().split(/\\s*\\/\\s*/);\n\t\t\t\tif (splitHeader.length) {\n\t\t\t\t\tconst headerValue = splitHeader[1];\n\t\t\t\t\tif (headerValue && headerValue != \"*\") {\n\t\t\t\t\t\tcontentSize = Number(headerValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (contentSize === UNDEFINED_VALUE) {\n\t\t\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t\t\t} else {\n\t\t\t\thttpReader.size = contentSize;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tawait getContentLength(httpReader, sendRequest, getRequestData);\n\t}\n}\n\nasync function readUint8ArrayHttpReader(httpReader, index, length, sendRequest, getRequestData) {\n\tconst {\n\t\tuseRangeHeader,\n\t\tforceRangeRequests,\n\t\toptions\n\t} = httpReader;\n\tif (useRangeHeader || forceRangeRequests) {\n\t\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getRangeHeaders(httpReader, index, length));\n\t\tif (response.status != 206) {\n\t\t\tthrow new Error(ERR_HTTP_RANGE);\n\t\t}\n\t\treturn new Uint8Array(await response.arrayBuffer());\n\t} else {\n\t\tconst { data } = httpReader;\n\t\tif (!data) {\n\t\t\tawait getRequestData(httpReader, options);\n\t\t}\n\t\treturn new Uint8Array(httpReader.data.subarray(index, index + length));\n\t}\n}\n\nfunction getRangeHeaders(httpReader, index = 0, length = 1) {\n\treturn Object.assign({}, getHeaders(httpReader), { [HTTP_HEADER_RANGE]: HTTP_RANGE_UNIT + \"=\" + index + \"-\" + (index + length - 1) });\n}\n\nfunction getHeaders({ options }) {\n\tconst { headers } = options;\n\tif (headers) {\n\t\tif (Symbol.iterator in headers) {\n\t\t\treturn Object.fromEntries(headers);\n\t\t} else {\n\t\t\treturn headers;\n\t\t}\n\t}\n}\n\nasync function getFetchRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendFetchRequest);\n}\n\nasync function getXMLHttpRequestData(httpReader) {\n\tawait getRequestData(httpReader, sendXMLHttpRequest);\n}\n\nasync function getRequestData(httpReader, sendRequest) {\n\tconst response = await sendRequest(HTTP_METHOD_GET, httpReader, getHeaders(httpReader));\n\thttpReader.data = new Uint8Array(await response.arrayBuffer());\n\tif (!httpReader.size) {\n\t\thttpReader.size = httpReader.data.length;\n\t}\n}\n\nasync function getContentLength(httpReader, sendRequest, getRequestData) {\n\tif (httpReader.preventHeadRequest) {\n\t\tawait getRequestData(httpReader, httpReader.options);\n\t} else {\n\t\tconst response = await sendRequest(HTTP_METHOD_HEAD, httpReader, getHeaders(httpReader));\n\t\tconst contentLength = response.headers.get(HTTP_HEADER_CONTENT_LENGTH);\n\t\tif (contentLength) {\n\t\t\thttpReader.size = Number(contentLength);\n\t\t} else {\n\t\t\tawait getRequestData(httpReader, httpReader.options);\n\t\t}\n\t}\n}\n\nasync function sendFetchRequest(method, { options, url }, headers) {\n\tconst response = await fetch(url, Object.assign({}, options, { method, headers }));\n\tif (response.status < 400) {\n\t\treturn response;\n\t} else {\n\t\tthrow response.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (response.statusText || response.status));\n\t}\n}\n\nfunction sendXMLHttpRequest(method, { url }, headers) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\trequest.addEventListener(\"load\", () => {\n\t\t\tif (request.status < 400) {\n\t\t\t\tconst headers = [];\n\t\t\t\trequest.getAllResponseHeaders().trim().split(/[\\r\\n]+/).forEach(header => {\n\t\t\t\t\tconst splitHeader = header.trim().split(/\\s*:\\s*/);\n\t\t\t\t\tsplitHeader[0] = splitHeader[0].trim().replace(/^[a-z]|-[a-z]/g, value => value.toUpperCase());\n\t\t\t\t\theaders.push(splitHeader);\n\t\t\t\t});\n\t\t\t\tresolve({\n\t\t\t\t\tstatus: request.status,\n\t\t\t\t\tarrayBuffer: () => request.response,\n\t\t\t\t\theaders: new Map(headers)\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treject(request.status == 416 ? new Error(ERR_HTTP_RANGE) : new Error(ERR_HTTP_STATUS + (request.statusText || request.status)));\n\t\t\t}\n\t\t}, false);\n\t\trequest.addEventListener(\"error\", event => reject(event.detail.error), false);\n\t\trequest.open(method, url);\n\t\tif (headers) {\n\t\t\tfor (const entry of Object.entries(headers)) {\n\t\t\t\trequest.setRequestHeader(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t\trequest.responseType = \"arraybuffer\";\n\t\trequest.send();\n\t});\n}\n\nclass HttpReader extends Reader {\n\n\tconstructor(url, options = {}) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\turl,\n\t\t\treader: options.useXHR ? new XHRReader(url, options) : new FetchReader(url, options)\n\t\t});\n\t}\n\n\tset size(value) {\n\t\t// ignored\n\t}\n\n\tget size() {\n\t\treturn this.reader.size;\n\t}\n\n\tasync init() {\n\t\tsuper.init();\n\t\tawait this.reader.init();\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn this.reader.readUint8Array(index, length);\n\t}\n}\n\nclass HttpRangeReader extends HttpReader {\n\n\tconstructor(url, options = {}) {\n\t\toptions.useRangeHeader = true;\n\t\tsuper(url, options);\n\t}\n}\n\n\nclass Uint8ArrayReader extends Reader {\n\n\tconstructor(array) {\n\t\tsuper();\n\t\tObject.assign(this, {\n\t\t\tarray,\n\t\t\tsize: array.length\n\t\t});\n\t}\n\n\treadUint8Array(index, length) {\n\t\treturn this.array.slice(index, index + length);\n\t}\n}\n\nclass Uint8ArrayWriter extends Writer {\n\n\tinit(initSize = 0) {\n\t\tsuper.init();\n\t\tObject.assign(this, {\n\t\t\toffset: 0,\n\t\t\tarray: new Uint8Array(initSize)\n\t\t});\n\t}\n\n\twriteUint8Array(array) {\n\t\tconst writer = this;\n\t\tif (writer.offset + array.length > writer.array.length) {\n\t\t\tconst previousArray = writer.array;\n\t\t\twriter.array = new Uint8Array(previousArray.length + array.length);\n\t\t\twriter.array.set(previousArray);\n\t\t}\n\t\twriter.array.set(array, writer.offset);\n\t\twriter.offset += array.length;\n\t}\n\n\tgetData() {\n\t\treturn this.array;\n\t}\n}\n\nclass SplitDataReader extends Reader {\n\n\tconstructor(readers) {\n\t\tsuper();\n\t\tthis.readers = readers;\n\t}\n\n\tasync init() {\n\t\tsuper.init();\n\t\tconst reader = this;\n\t\tconst { readers } = reader;\n\t\treader.lastDiskNumber = 0;\n\t\tawait Promise.all(readers.map(async diskReader => {\n\t\t\tawait diskReader.init();\n\t\t\treader.size += diskReader.size;\n\t\t}));\n\t}\n\n\tasync readUint8Array(offset, length, diskNumber = 0) {\n\t\tconst reader = this;\n\t\tconst { readers } = this;\n\t\tlet result;\n\t\tlet currentDiskNumber = diskNumber;\n\t\tif (currentDiskNumber == -1) {\n\t\t\tcurrentDiskNumber = readers.length - 1;\n\t\t}\n\t\tlet currentReaderOffset = offset;\n\t\twhile (currentReaderOffset >= readers[currentDiskNumber].size) {\n\t\t\tcurrentReaderOffset -= readers[currentDiskNumber].size;\n\t\t\tcurrentDiskNumber++;\n\t\t}\n\t\tconst currentReader = readers[currentDiskNumber];\n\t\tconst currentReaderSize = currentReader.size;\n\t\tif (currentReaderOffset + length <= currentReaderSize) {\n\t\t\tresult = await readUint8Array(currentReader, currentReaderOffset, length);\n\t\t} else {\n\t\t\tconst chunkLength = currentReaderSize - currentReaderOffset;\n\t\t\tresult = new Uint8Array(length);\n\t\t\tresult.set(await readUint8Array(currentReader, currentReaderOffset, chunkLength));\n\t\t\tresult.set(await reader.readUint8Array(offset + chunkLength, length - chunkLength, diskNumber), chunkLength);\n\t\t}\n\t\treader.lastDiskNumber = Math.max(currentDiskNumber, reader.lastDiskNumber);\n\t\treturn result;\n\t}\n}\n\nclass SplitDataWriter extends Stream {\n\n\tconstructor(writerGenerator, maxSize = 4294967295) {\n\t\tsuper();\n\t\tconst zipWriter = this;\n\t\tObject.assign(zipWriter, {\n\t\t\tdiskNumber: 0,\n\t\t\tdiskOffset: 0,\n\t\t\tsize: 0,\n\t\t\tmaxSize,\n\t\t\tavailableSize: maxSize\n\t\t});\n\t\tlet diskSourceWriter, diskWritable, diskWriter;\n\t\tconst writable = new WritableStream({\n\t\t\tasync write(chunk) {\n\t\t\t\tconst { availableSize } = zipWriter;\n\t\t\t\tif (!diskWriter) {\n\t\t\t\t\tconst { value, done } = await writerGenerator.next();\n\t\t\t\t\tif (done && !value) {\n\t\t\t\t\t\tthrow new Error(ERR_ITERATOR_COMPLETED_TOO_SOON);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdiskSourceWriter = value;\n\t\t\t\t\t\tdiskSourceWriter.size = 0;\n\t\t\t\t\t\tif (diskSourceWriter.maxSize) {\n\t\t\t\t\t\t\tzipWriter.maxSize = diskSourceWriter.maxSize;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tzipWriter.availableSize = zipWriter.maxSize;\n\t\t\t\t\t\tawait initStream(diskSourceWriter);\n\t\t\t\t\t\tdiskWritable = value.writable;\n\t\t\t\t\t\tdiskWriter = diskWritable.getWriter();\n\t\t\t\t\t}\n\t\t\t\t\tawait this.write(chunk);\n\t\t\t\t} else if (chunk.length >= availableSize) {\n\t\t\t\t\tawait writeChunk(chunk.slice(0, availableSize));\n\t\t\t\t\tawait closeDisk();\n\t\t\t\t\tzipWriter.diskOffset += diskSourceWriter.size;\n\t\t\t\t\tzipWriter.diskNumber++;\n\t\t\t\t\tdiskWriter = null;\n\t\t\t\t\tawait this.write(chunk.slice(availableSize));\n\t\t\t\t} else {\n\t\t\t\t\tawait writeChunk(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tasync close() {\n\t\t\t\tawait diskWriter.ready;\n\t\t\t\tawait closeDisk();\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(zipWriter, PROPERTY_NAME_WRITABLE, {\n\t\t\tget() {\n\t\t\t\treturn writable;\n\t\t\t}\n\t\t});\n\n\t\tasync function writeChunk(chunk) {\n\t\t\tconst chunkLength = chunk.length;\n\t\t\tif (chunkLength) {\n\t\t\t\tawait diskWriter.ready;\n\t\t\t\tawait diskWriter.write(chunk);\n\t\t\t\tdiskSourceWriter.size += chunkLength;\n\t\t\t\tzipWriter.size += chunkLength;\n\t\t\t\tzipWriter.availableSize -= chunkLength;\n\t\t\t}\n\t\t}\n\n\t\tasync function closeDisk() {\n\t\t\tdiskWritable.size = diskSourceWriter.size;\n\t\t\tawait diskWriter.close();\n\t\t}\n\t}\n}\n\nfunction isHttpFamily(url) {\n\tconst { baseURL } = getConfiguration();\n\tconst { protocol } = new URL(url, baseURL);\n\treturn protocol == \"http:\" || protocol == \"https:\";\n}\n\nasync function initStream(stream, initSize) {\n\tif (stream.init && !stream.initialized) {\n\t\tawait stream.init(initSize);\n\t}\n}\n\nfunction initReader(reader) {\n\tif (Array.isArray(reader)) {\n\t\treader = new SplitDataReader(reader);\n\t}\n\tif (reader instanceof ReadableStream) {\n\t\treader = {\n\t\t\treadable: reader\n\t\t};\n\t}\n\treturn reader;\n}\n\nfunction initWriter(writer) {\n\tif (writer.writable === UNDEFINED_VALUE && typeof writer.next == FUNCTION_TYPE) {\n\t\twriter = new SplitDataWriter(writer);\n\t}\n\tif (writer instanceof WritableStream) {\n\t\twriter = {\n\t\t\twritable: writer\n\t\t};\n\t}\n\tconst { writable } = writer;\n\tif (writable.size === UNDEFINED_VALUE) {\n\t\twritable.size = 0;\n\t}\n\tconst splitZipFile = writer instanceof SplitDataWriter;\n\tif (!splitZipFile) {\n\t\tObject.assign(writer, {\n\t\t\tdiskNumber: 0,\n\t\t\tdiskOffset: 0,\n\t\t\tavailableSize: Infinity,\n\t\t\tmaxSize: Infinity\n\t\t});\n\t}\n\treturn writer;\n}\n\nfunction readUint8Array(reader, offset, size, diskNumber) {\n\treturn reader.readUint8Array(offset, size, diskNumber);\n}\n\nconst SplitZipReader = SplitDataReader;\nconst SplitZipWriter = SplitDataWriter;\n\nexport {\n\tinitStream,\n\tinitReader,\n\tinitWriter,\n\treadUint8Array,\n\tReader,\n\tWriter,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tBlobReader,\n\tBlobWriter,\n\tUint8ArrayReader,\n\tUint8ArrayWriter,\n\tHttpReader,\n\tHttpRangeReader,\n\tSplitZipReader,\n\tSplitZipWriter,\n\tSplitDataReader,\n\tSplitDataWriter,\n\tERR_HTTP_RANGE,\n\tERR_ITERATOR_COMPLETED_TOO_SOON\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextDecoder */\n\nconst CP437 = \"\\0☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \".split(\"\");\nconst VALID_CP437 = CP437.length == 256;\n\nexport {\n\tdecodeCP437\n};\n\nfunction decodeCP437(stringValue) {\n\tif (VALID_CP437) {\n\t\tlet result = \"\";\n\t\tfor (let indexCharacter = 0; indexCharacter < stringValue.length; indexCharacter++) {\n\t\t\tresult += CP437[stringValue[indexCharacter]];\n\t\t}\n\t\treturn result;\n\t} else {\n\t\treturn new TextDecoder().decode(stringValue);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global TextDecoder */\n\nimport { decodeCP437 } from \"./cp437-decode.js\";\n\nexport {\n\tdecodeText\n};\n\nfunction decodeText(value, encoding) {\n\tif (encoding && encoding.trim().toLowerCase() == \"cp437\") {\n\t\treturn decodeCP437(value);\n\t} else {\n\t\treturn new TextDecoder(encoding).decode(value);\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nconst PROPERTY_NAME_FILENAME = \"filename\";\nconst PROPERTY_NAME_RAW_FILENAME = \"rawFilename\";\nconst PROPERTY_NAME_COMMENT = \"comment\";\nconst PROPERTY_NAME_RAW_COMMENT = \"rawComment\";\nconst PROPERTY_NAME_UNCOMPPRESSED_SIZE = \"uncompressedSize\";\nconst PROPERTY_NAME_COMPPRESSED_SIZE = \"compressedSize\";\nconst PROPERTY_NAME_OFFSET = \"offset\";\nconst PROPERTY_NAME_DISK_NUMBER_START = \"diskNumberStart\";\nconst PROPERTY_NAME_LAST_MODIFICATION_DATE = \"lastModDate\";\nconst PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE = \"rawLastModDate\";\nconst PROPERTY_NAME_LAST_ACCESS_DATE = \"lastAccessDate\";\nconst PROPERTY_NAME_RAW_LAST_ACCESS_DATE = \"rawLastAccessDate\";\nconst PROPERTY_NAME_CREATION_DATE = \"creationDate\";\nconst PROPERTY_NAME_RAW_CREATION_DATE = \"rawCreationDate\";\nconst PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE = \"internalFileAttribute\";\nconst PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE = \"externalFileAttribute\";\nconst PROPERTY_NAME_MS_DOS_COMPATIBLE = \"msDosCompatible\";\nconst PROPERTY_NAME_ZIP64 = \"zip64\";\n\nconst PROPERTY_NAMES = [\n\tPROPERTY_NAME_FILENAME, PROPERTY_NAME_RAW_FILENAME, PROPERTY_NAME_COMPPRESSED_SIZE, PROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE, PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE, PROPERTY_NAME_COMMENT, PROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_LAST_ACCESS_DATE, PROPERTY_NAME_CREATION_DATE, PROPERTY_NAME_OFFSET, PROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_DISK_NUMBER_START, PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE, PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE, PROPERTY_NAME_ZIP64,\n\t\"directory\", \"bitFlag\", \"encrypted\", \"signature\", \"filenameUTF8\", \"commentUTF8\", \"compressionMethod\", \"version\", \"versionMadeBy\",\n\t\"extraField\", \"rawExtraField\", \"extraFieldZip64\", \"extraFieldUnicodePath\", \"extraFieldUnicodeComment\", \"extraFieldAES\", \"extraFieldNTFS\",\n\t\"extraFieldExtendedTimestamp\"];\n\nclass Entry {\n\n\tconstructor(data) {\n\t\tPROPERTY_NAMES.forEach(name => this[name] = data[name]);\n\t}\n\n}\n\nexport {\n\tPROPERTY_NAME_FILENAME,\n\tPROPERTY_NAME_RAW_FILENAME,\n\tPROPERTY_NAME_COMMENT,\n\tPROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_COMPPRESSED_SIZE,\n\tPROPERTY_NAME_OFFSET,\n\tPROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_RAW_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_RAW_CREATION_DATE,\n\tPROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE,\n\tPROPERTY_NAME_ZIP64,\n\tEntry\n};","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global BigInt, Response */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_UNICODE_PATH,\n\tEXTRAFIELD_TYPE_UNICODE_COMMENT,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_LEVEL,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tDIRECTORY_SIGNATURE,\n\tUNDEFINED_VALUE\n} from \"./constants.js\";\nimport {\n\tgetConfiguration,\n\tgetChunkSize\n} from \"./configuration.js\";\nimport {\n\trunWorker,\n\tCODEC_INFLATE,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD\n} from \"./codec-pool.js\";\nimport {\n\tinitStream,\n\tinitReader,\n\tinitWriter,\n\treadUint8Array,\n\tBlobReader\n} from \"./io.js\";\nimport { decodeText } from \"./util/decode-text.js\";\nimport { Crc32 } from \"./streams/codecs/crc32.js\";\nimport {\n\tPROPERTY_NAME_RAW_FILENAME,\n\tPROPERTY_NAME_FILENAME,\n\tPROPERTY_NAME_RAW_COMMENT,\n\tPROPERTY_NAME_COMMENT,\n\tPROPERTY_NAME_UNCOMPPRESSED_SIZE,\n\tPROPERTY_NAME_COMPPRESSED_SIZE,\n\tPROPERTY_NAME_OFFSET,\n\tPROPERTY_NAME_DISK_NUMBER_START,\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_RAW_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_RAW_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_RAW_CREATION_DATE,\n\tEntry\n} from \"./zip-entry.js\";\n\nconst ERR_BAD_FORMAT = \"File format is not recognized\";\nconst ERR_EOCDR_NOT_FOUND = \"End of central directory not found\";\nconst ERR_EOCDR_ZIP64_NOT_FOUND = \"End of Zip64 central directory not found\";\nconst ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND = \"End of Zip64 central directory locator not found\";\nconst ERR_CENTRAL_DIRECTORY_NOT_FOUND = \"Central directory header not found\";\nconst ERR_LOCAL_FILE_HEADER_NOT_FOUND = \"Local file header not found\";\nconst ERR_EXTRAFIELD_ZIP64_NOT_FOUND = \"Zip64 extra field not found\";\nconst ERR_ENCRYPTED = \"File contains encrypted entry\";\nconst ERR_UNSUPPORTED_ENCRYPTION = \"Encryption method not supported\";\nconst ERR_UNSUPPORTED_COMPRESSION = \"Compression method not supported\";\nconst ERR_SPLIT_ZIP_FILE = \"Split zip file\";\nconst CHARSET_UTF8 = \"utf-8\";\nconst CHARSET_CP437 = \"cp437\";\nconst ZIP64_PROPERTIES = [\n\t[PROPERTY_NAME_UNCOMPPRESSED_SIZE, MAX_32_BITS],\n\t[PROPERTY_NAME_COMPPRESSED_SIZE, MAX_32_BITS],\n\t[PROPERTY_NAME_OFFSET, MAX_32_BITS],\n\t[PROPERTY_NAME_DISK_NUMBER_START, MAX_16_BITS]\n];\nconst ZIP64_EXTRACTION = {\n\t[MAX_16_BITS]: {\n\t\tgetValue: getUint32,\n\t\tbytes: 4\n\t},\n\t[MAX_32_BITS]: {\n\t\tgetValue: getBigUint64,\n\t\tbytes: 8\n\t}\n};\n\nclass ZipReader {\n\n\tconstructor(reader, options = {}) {\n\t\tObject.assign(this, {\n\t\t\treader: initReader(reader),\n\t\t\toptions,\n\t\t\tconfig: getConfiguration()\n\t\t});\n\t}\n\n\tasync* getEntriesGenerator(options = {}) {\n\t\tconst zipReader = this;\n\t\tlet { reader } = zipReader;\n\t\tconst { config } = zipReader;\n\t\tawait initStream(reader);\n\t\tif (reader.size === UNDEFINED_VALUE || !reader.readUint8Array) {\n\t\t\treader = new BlobReader(await new Response(reader.readable).blob());\n\t\t\tawait initStream(reader);\n\t\t}\n\t\tif (reader.size < END_OF_CENTRAL_DIR_LENGTH) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\treader.chunkSize = getChunkSize(config);\n\t\tconst endOfDirectoryInfo = await seekSignature(reader, END_OF_CENTRAL_DIR_SIGNATURE, reader.size, END_OF_CENTRAL_DIR_LENGTH, MAX_16_BITS * 16);\n\t\tif (!endOfDirectoryInfo) {\n\t\t\tconst signatureArray = await readUint8Array(reader, 0, 4);\n\t\t\tconst signatureView = getDataView(signatureArray);\n\t\t\tif (getUint32(signatureView) == SPLIT_ZIP_FILE_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_SPLIT_ZIP_FILE);\n\t\t\t} else {\n\t\t\t\tthrow new Error(ERR_EOCDR_NOT_FOUND);\n\t\t\t}\n\t\t}\n\t\tconst endOfDirectoryView = getDataView(endOfDirectoryInfo);\n\t\tlet directoryDataLength = getUint32(endOfDirectoryView, 12);\n\t\tlet directoryDataOffset = getUint32(endOfDirectoryView, 16);\n\t\tconst commentOffset = endOfDirectoryInfo.offset;\n\t\tconst commentLength = getUint16(endOfDirectoryView, 20);\n\t\tconst appendedDataOffset = commentOffset + END_OF_CENTRAL_DIR_LENGTH + commentLength;\n\t\tlet lastDiskNumber = getUint16(endOfDirectoryView, 4);\n\t\tconst expectedLastDiskNumber = reader.lastDiskNumber || 0;\n\t\tlet diskNumber = getUint16(endOfDirectoryView, 6);\n\t\tlet filesLength = getUint16(endOfDirectoryView, 8);\n\t\tlet prependedDataLength = 0;\n\t\tlet startOffset = 0;\n\t\tif (directoryDataOffset == MAX_32_BITS || directoryDataLength == MAX_32_BITS || filesLength == MAX_16_BITS || diskNumber == MAX_16_BITS) {\n\t\t\tconst endOfDirectoryLocatorArray = await readUint8Array(reader, endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH);\n\t\t\tconst endOfDirectoryLocatorView = getDataView(endOfDirectoryLocatorArray);\n\t\t\tif (getUint32(endOfDirectoryLocatorView, 0) != ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_EOCDR_ZIP64_NOT_FOUND);\n\t\t\t}\n\t\t\tdirectoryDataOffset = getBigUint64(endOfDirectoryLocatorView, 8);\n\t\t\tlet endOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH, -1);\n\t\t\tlet endOfDirectoryView = getDataView(endOfDirectoryArray);\n\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH - ZIP64_END_OF_CENTRAL_DIR_LENGTH;\n\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\n\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\n\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\n\t\t\t\tprependedDataLength = directoryDataOffset - originalDirectoryDataOffset;\n\t\t\t\tendOfDirectoryArray = await readUint8Array(reader, directoryDataOffset, ZIP64_END_OF_CENTRAL_DIR_LENGTH, -1);\n\t\t\t\tendOfDirectoryView = getDataView(endOfDirectoryArray);\n\t\t\t}\n\t\t\tif (getUint32(endOfDirectoryView, 0) != ZIP64_END_OF_CENTRAL_DIR_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND);\n\t\t\t}\n\t\t\tif (lastDiskNumber == MAX_16_BITS) {\n\t\t\t\tlastDiskNumber = getUint32(endOfDirectoryView, 16);\n\t\t\t}\n\t\t\tif (diskNumber == MAX_16_BITS) {\n\t\t\t\tdiskNumber = getUint32(endOfDirectoryView, 20);\n\t\t\t}\n\t\t\tif (filesLength == MAX_16_BITS) {\n\t\t\t\tfilesLength = getBigUint64(endOfDirectoryView, 32);\n\t\t\t}\n\t\t\tif (directoryDataLength == MAX_32_BITS) {\n\t\t\t\tdirectoryDataLength = getBigUint64(endOfDirectoryView, 40);\n\t\t\t}\n\t\t\tdirectoryDataOffset -= directoryDataLength;\n\t\t}\n\t\tif (expectedLastDiskNumber != lastDiskNumber) {\n\t\t\tthrow new Error(ERR_SPLIT_ZIP_FILE);\n\t\t}\n\t\tif (directoryDataOffset < 0 || directoryDataOffset >= reader.size) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tlet offset = 0;\n\t\tlet directoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\tlet directoryView = getDataView(directoryArray);\n\t\tif (directoryDataLength) {\n\t\t\tconst expectedDirectoryDataOffset = endOfDirectoryInfo.offset - directoryDataLength;\n\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE && directoryDataOffset != expectedDirectoryDataOffset) {\n\t\t\t\tconst originalDirectoryDataOffset = directoryDataOffset;\n\t\t\t\tdirectoryDataOffset = expectedDirectoryDataOffset;\n\t\t\t\tprependedDataLength = directoryDataOffset - originalDirectoryDataOffset;\n\t\t\t\tdirectoryArray = await readUint8Array(reader, directoryDataOffset, directoryDataLength, diskNumber);\n\t\t\t\tdirectoryView = getDataView(directoryArray);\n\t\t\t}\n\t\t}\n\t\tif (directoryDataOffset < 0 || directoryDataOffset >= reader.size) {\n\t\t\tthrow new Error(ERR_BAD_FORMAT);\n\t\t}\n\t\tconst filenameEncoding = getOptionValue(zipReader, options, \"filenameEncoding\");\n\t\tconst commentEncoding = getOptionValue(zipReader, options, \"commentEncoding\");\n\t\tfor (let indexFile = 0; indexFile < filesLength; indexFile++) {\n\t\t\tconst fileEntry = new ZipEntry(reader, config, zipReader.options);\n\t\t\tif (getUint32(directoryView, offset) != CENTRAL_FILE_HEADER_SIGNATURE) {\n\t\t\t\tthrow new Error(ERR_CENTRAL_DIRECTORY_NOT_FOUND);\n\t\t\t}\n\t\t\treadCommonHeader(fileEntry, directoryView, offset + 6);\n\t\t\tconst languageEncodingFlag = Boolean(fileEntry.bitFlag.languageEncodingFlag);\n\t\t\tconst filenameOffset = offset + 46;\n\t\t\tconst extraFieldOffset = filenameOffset + fileEntry.filenameLength;\n\t\t\tconst commentOffset = extraFieldOffset + fileEntry.extraFieldLength;\n\t\t\tconst versionMadeBy = getUint16(directoryView, offset + 4);\n\t\t\tconst msDosCompatible = (versionMadeBy & 0) == 0;\n\t\t\tconst rawFilename = directoryArray.subarray(filenameOffset, extraFieldOffset);\n\t\t\tconst commentLength = getUint16(directoryView, offset + 32);\n\t\t\tconst endOffset = commentOffset + commentLength;\n\t\t\tconst rawComment = directoryArray.subarray(commentOffset, endOffset);\n\t\t\tconst filenameUTF8 = languageEncodingFlag;\n\t\t\tconst commentUTF8 = languageEncodingFlag;\n\t\t\tconst directory = msDosCompatible && ((getUint8(directoryView, offset + 38) & FILE_ATTR_MSDOS_DIR_MASK) == FILE_ATTR_MSDOS_DIR_MASK);\n\t\t\tconst offsetFileEntry = getUint32(directoryView, offset + 42) + prependedDataLength;\n\t\t\tObject.assign(fileEntry, {\n\t\t\t\tversionMadeBy,\n\t\t\t\tmsDosCompatible,\n\t\t\t\tcompressedSize: 0,\n\t\t\t\tuncompressedSize: 0,\n\t\t\t\tcommentLength,\n\t\t\t\tdirectory,\n\t\t\t\toffset: offsetFileEntry,\n\t\t\t\tdiskNumberStart: getUint16(directoryView, offset + 34),\n\t\t\t\tinternalFileAttribute: getUint16(directoryView, offset + 36),\n\t\t\t\texternalFileAttribute: getUint32(directoryView, offset + 38),\n\t\t\t\trawFilename,\n\t\t\t\tfilenameUTF8,\n\t\t\t\tcommentUTF8,\n\t\t\t\trawExtraField: directoryArray.subarray(extraFieldOffset, commentOffset)\n\t\t\t});\n\t\t\tconst [filename, comment] = await Promise.all([\n\t\t\t\tdecodeText(rawFilename, filenameUTF8 ? CHARSET_UTF8 : filenameEncoding || CHARSET_CP437),\n\t\t\t\tdecodeText(rawComment, commentUTF8 ? CHARSET_UTF8 : commentEncoding || CHARSET_CP437)\n\t\t\t]);\n\t\t\tObject.assign(fileEntry, {\n\t\t\t\trawComment,\n\t\t\t\tfilename,\n\t\t\t\tcomment,\n\t\t\t\tdirectory: directory || filename.endsWith(DIRECTORY_SIGNATURE)\n\t\t\t});\n\t\t\tstartOffset = Math.max(offsetFileEntry, startOffset);\n\t\t\tawait readCommonFooter(fileEntry, fileEntry, directoryView, offset + 6);\n\t\t\tconst entry = new Entry(fileEntry);\n\t\t\tentry.getData = (writer, options) => fileEntry.getData(writer, entry, options);\n\t\t\toffset = endOffset;\n\t\t\tconst { onprogress } = options;\n\t\t\tif (onprogress) {\n\t\t\t\ttry {\n\t\t\t\t\tawait onprogress(indexFile + 1, filesLength, new Entry(fileEntry));\n\t\t\t\t} catch (_error) {\n\t\t\t\t\t// ignored\n\t\t\t\t}\n\t\t\t}\n\t\t\tyield entry;\n\t\t}\n\t\tconst extractPrependedData = getOptionValue(zipReader, options, \"extractPrependedData\");\n\t\tconst extractAppendedData = getOptionValue(zipReader, options, \"extractAppendedData\");\n\t\tif (extractPrependedData) {\n\t\t\tzipReader.prependedData = startOffset > 0 ? await readUint8Array(reader, 0, startOffset) : new Uint8Array();\n\t\t}\n\t\tzipReader.comment = commentLength ? await readUint8Array(reader, commentOffset + END_OF_CENTRAL_DIR_LENGTH, commentLength) : new Uint8Array();\n\t\tif (extractAppendedData) {\n\t\t\tzipReader.appendedData = appendedDataOffset < reader.size ? await readUint8Array(reader, appendedDataOffset, reader.size - appendedDataOffset) : new Uint8Array();\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync getEntries(options = {}) {\n\t\tconst entries = [];\n\t\tfor await (const entry of this.getEntriesGenerator(options)) {\n\t\t\tentries.push(entry);\n\t\t}\n\t\treturn entries;\n\t}\n\n\tasync close() {\n\t}\n}\n\nexport {\n\tZipReader,\n\tERR_BAD_FORMAT,\n\tERR_EOCDR_NOT_FOUND,\n\tERR_EOCDR_ZIP64_NOT_FOUND,\n\tERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND,\n\tERR_CENTRAL_DIRECTORY_NOT_FOUND,\n\tERR_LOCAL_FILE_HEADER_NOT_FOUND,\n\tERR_EXTRAFIELD_ZIP64_NOT_FOUND,\n\tERR_ENCRYPTED,\n\tERR_UNSUPPORTED_ENCRYPTION,\n\tERR_UNSUPPORTED_COMPRESSION,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_SPLIT_ZIP_FILE\n};\n\nclass ZipEntry {\n\n\tconstructor(reader, config, options) {\n\t\tObject.assign(this, {\n\t\t\treader,\n\t\t\tconfig,\n\t\t\toptions\n\t\t});\n\t}\n\n\tasync getData(writer, fileEntry, options = {}) {\n\t\tconst zipEntry = this;\n\t\tconst {\n\t\t\treader,\n\t\t\toffset,\n\t\t\tdiskNumberStart,\n\t\t\textraFieldAES,\n\t\t\tcompressionMethod,\n\t\t\tconfig,\n\t\t\tbitFlag,\n\t\t\tsignature,\n\t\t\trawLastModDate,\n\t\t\tuncompressedSize,\n\t\t\tcompressedSize\n\t\t} = zipEntry;\n\t\tconst localDirectory = zipEntry.localDirectory = {};\n\t\tconst dataArray = await readUint8Array(reader, offset, 30, diskNumberStart);\n\t\tconst dataView = getDataView(dataArray);\n\t\tlet password = getOptionValue(zipEntry, options, \"password\");\n\t\tpassword = password && password.length && password;\n\t\tif (extraFieldAES) {\n\t\t\tif (extraFieldAES.originalCompressionMethod != COMPRESSION_METHOD_AES) {\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\n\t\t\t}\n\t\t}\n\t\tif (compressionMethod != COMPRESSION_METHOD_STORE && compressionMethod != COMPRESSION_METHOD_DEFLATE) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_COMPRESSION);\n\t\t}\n\t\tif (getUint32(dataView, 0) != LOCAL_FILE_HEADER_SIGNATURE) {\n\t\t\tthrow new Error(ERR_LOCAL_FILE_HEADER_NOT_FOUND);\n\t\t}\n\t\treadCommonHeader(localDirectory, dataView, 4);\n\t\tlocalDirectory.rawExtraField = localDirectory.extraFieldLength ?\n\t\t\tawait readUint8Array(reader, offset + 30 + localDirectory.filenameLength, localDirectory.extraFieldLength, diskNumberStart) :\n\t\t\tnew Uint8Array();\n\t\tawait readCommonFooter(zipEntry, localDirectory, dataView, 4);\n\t\tObject.assign(fileEntry, {\n\t\t\tlastAccessDate: localDirectory.lastAccessDate,\n\t\t\tcreationDate: localDirectory.creationDate\n\t\t});\n\t\tconst encrypted = zipEntry.encrypted && localDirectory.encrypted;\n\t\tconst zipCrypto = encrypted && !extraFieldAES;\n\t\tif (encrypted) {\n\t\t\tif (!zipCrypto && extraFieldAES.strength === UNDEFINED_VALUE) {\n\t\t\t\tthrow new Error(ERR_UNSUPPORTED_ENCRYPTION);\n\t\t\t} else if (!password) {\n\t\t\t\tthrow new Error(ERR_ENCRYPTED);\n\t\t\t}\n\t\t}\n\t\tconst dataOffset = offset + 30 + localDirectory.filenameLength + localDirectory.extraFieldLength;\n\t\tconst readable = reader.readable;\n\t\treadable.diskNumberStart = diskNumberStart;\n\t\treadable.offset = dataOffset;\n\t\tconst size = readable.size = compressedSize;\n\t\tconst signal = getOptionValue(zipEntry, options, \"signal\");\n\t\twriter = initWriter(writer);\n\t\tawait initStream(writer, uncompressedSize);\n\t\tconst { writable } = writer;\n\t\tconst { onstart, onprogress, onend } = options;\n\t\tconst workerOptions = {\n\t\t\toptions: {\n\t\t\t\tcodecType: CODEC_INFLATE,\n\t\t\t\tpassword,\n\t\t\t\tzipCrypto,\n\t\t\t\tencryptionStrength: extraFieldAES && extraFieldAES.strength,\n\t\t\t\tsigned: getOptionValue(zipEntry, options, \"checkSignature\"),\n\t\t\t\tpasswordVerification: zipCrypto && (bitFlag.dataDescriptor ? ((rawLastModDate >>> 8) & 0xFF) : ((signature >>> 24) & 0xFF)),\n\t\t\t\tsignature,\n\t\t\t\tcompressed: compressionMethod != 0,\n\t\t\t\tencrypted,\n\t\t\t\tuseWebWorkers: getOptionValue(zipEntry, options, \"useWebWorkers\"),\n\t\t\t\tuseCompressionStream: getOptionValue(zipEntry, options, \"useCompressionStream\"),\n\t\t\t\ttransferStreams: getOptionValue(zipEntry, options, \"transferStreams\")\n\t\t\t},\n\t\t\tconfig,\n\t\t\tstreamOptions: { signal, size, onstart, onprogress, onend }\n\t\t};\n\t\twritable.size += (await runWorker({ readable, writable }, workerOptions)).size;\n\t\tconst preventClose = getOptionValue(zipEntry, options, \"preventClose\");\n\t\tif (!preventClose) {\n\t\t\tawait writable.close();\n\t\t}\n\t\treturn writer.getData ? writer.getData() : writable;\n\t}\n}\n\nfunction readCommonHeader(directory, dataView, offset) {\n\tconst rawBitFlag = directory.rawBitFlag = getUint16(dataView, offset + 2);\n\tconst encrypted = (rawBitFlag & BITFLAG_ENCRYPTED) == BITFLAG_ENCRYPTED;\n\tconst rawLastModDate = getUint32(dataView, offset + 6);\n\tObject.assign(directory, {\n\t\tencrypted,\n\t\tversion: getUint16(dataView, offset),\n\t\tbitFlag: {\n\t\t\tlevel: (rawBitFlag & BITFLAG_LEVEL) >> 1,\n\t\t\tdataDescriptor: (rawBitFlag & BITFLAG_DATA_DESCRIPTOR) == BITFLAG_DATA_DESCRIPTOR,\n\t\t\tlanguageEncodingFlag: (rawBitFlag & BITFLAG_LANG_ENCODING_FLAG) == BITFLAG_LANG_ENCODING_FLAG\n\t\t},\n\t\trawLastModDate,\n\t\tlastModDate: getDate(rawLastModDate),\n\t\tfilenameLength: getUint16(dataView, offset + 22),\n\t\textraFieldLength: getUint16(dataView, offset + 24)\n\t});\n}\n\nasync function readCommonFooter(fileEntry, directory, dataView, offset) {\n\tconst { rawExtraField } = directory;\n\tconst extraField = directory.extraField = new Map();\n\tconst rawExtraFieldView = getDataView(new Uint8Array(rawExtraField));\n\tlet offsetExtraField = 0;\n\ttry {\n\t\twhile (offsetExtraField < rawExtraField.length) {\n\t\t\tconst type = getUint16(rawExtraFieldView, offsetExtraField);\n\t\t\tconst size = getUint16(rawExtraFieldView, offsetExtraField + 2);\n\t\t\textraField.set(type, {\n\t\t\t\ttype,\n\t\t\t\tdata: rawExtraField.slice(offsetExtraField + 4, offsetExtraField + 4 + size)\n\t\t\t});\n\t\t\toffsetExtraField += 4 + size;\n\t\t}\n\t} catch (_error) {\n\t\t// ignored\n\t}\n\tconst compressionMethod = getUint16(dataView, offset + 4);\n\tObject.assign(directory, {\n\t\tsignature: getUint32(dataView, offset + 10),\n\t\tuncompressedSize: getUint32(dataView, offset + 18),\n\t\tcompressedSize: getUint32(dataView, offset + 14)\n\t});\n\tconst extraFieldZip64 = extraField.get(EXTRAFIELD_TYPE_ZIP64);\n\tif (extraFieldZip64) {\n\t\treadExtraFieldZip64(extraFieldZip64, directory);\n\t\tdirectory.extraFieldZip64 = extraFieldZip64;\n\t}\n\tconst extraFieldUnicodePath = extraField.get(EXTRAFIELD_TYPE_UNICODE_PATH);\n\tif (extraFieldUnicodePath) {\n\t\tawait readExtraFieldUnicode(extraFieldUnicodePath, PROPERTY_NAME_FILENAME, PROPERTY_NAME_RAW_FILENAME, directory, fileEntry);\n\t\tdirectory.extraFieldUnicodePath = extraFieldUnicodePath;\n\t}\n\tconst extraFieldUnicodeComment = extraField.get(EXTRAFIELD_TYPE_UNICODE_COMMENT);\n\tif (extraFieldUnicodeComment) {\n\t\tawait readExtraFieldUnicode(extraFieldUnicodeComment, PROPERTY_NAME_COMMENT, PROPERTY_NAME_RAW_COMMENT, directory, fileEntry);\n\t\tdirectory.extraFieldUnicodeComment = extraFieldUnicodeComment;\n\t}\n\tconst extraFieldAES = extraField.get(EXTRAFIELD_TYPE_AES);\n\tif (extraFieldAES) {\n\t\treadExtraFieldAES(extraFieldAES, directory, compressionMethod);\n\t\tdirectory.extraFieldAES = extraFieldAES;\n\t} else {\n\t\tdirectory.compressionMethod = compressionMethod;\n\t}\n\tconst extraFieldNTFS = extraField.get(EXTRAFIELD_TYPE_NTFS);\n\tif (extraFieldNTFS) {\n\t\treadExtraFieldNTFS(extraFieldNTFS, directory);\n\t\tdirectory.extraFieldNTFS = extraFieldNTFS;\n\t}\n\tconst extraFieldExtendedTimestamp = extraField.get(EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\tif (extraFieldExtendedTimestamp) {\n\t\treadExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory);\n\t\tdirectory.extraFieldExtendedTimestamp = extraFieldExtendedTimestamp;\n\t}\n}\n\nfunction readExtraFieldZip64(extraFieldZip64, directory) {\n\tdirectory.zip64 = true;\n\tconst extraFieldView = getDataView(extraFieldZip64.data);\n\tconst missingProperties = ZIP64_PROPERTIES.filter(([propertyName, max]) => directory[propertyName] == max);\n\tfor (let indexMissingProperty = 0, offset = 0; indexMissingProperty < missingProperties.length; indexMissingProperty++) {\n\t\tconst [propertyName, max] = missingProperties[indexMissingProperty];\n\t\tif (directory[propertyName] == max) {\n\t\t\tconst extraction = ZIP64_EXTRACTION[max];\n\t\t\tdirectory[propertyName] = extraFieldZip64[propertyName] = extraction.getValue(extraFieldView, offset);\n\t\t\toffset += extraction.bytes;\n\t\t} else if (extraFieldZip64[propertyName]) {\n\t\t\tthrow new Error(ERR_EXTRAFIELD_ZIP64_NOT_FOUND);\n\t\t}\n\t}\n}\n\nasync function readExtraFieldUnicode(extraFieldUnicode, propertyName, rawPropertyName, directory, fileEntry) {\n\tconst extraFieldView = getDataView(extraFieldUnicode.data);\n\tconst crc32 = new Crc32();\n\tcrc32.append(fileEntry[rawPropertyName]);\n\tconst dataViewSignature = getDataView(new Uint8Array(4));\n\tdataViewSignature.setUint32(0, crc32.get(), true);\n\tObject.assign(extraFieldUnicode, {\n\t\tversion: getUint8(extraFieldView, 0),\n\t\tsignature: getUint32(extraFieldView, 1),\n\t\t[propertyName]: await decodeText(extraFieldUnicode.data.subarray(5)),\n\t\tvalid: !fileEntry.bitFlag.languageEncodingFlag && extraFieldUnicode.signature == getUint32(dataViewSignature, 0)\n\t});\n\tif (extraFieldUnicode.valid) {\n\t\tdirectory[propertyName] = extraFieldUnicode[propertyName];\n\t\tdirectory[propertyName + \"UTF8\"] = true;\n\t}\n}\n\nfunction readExtraFieldAES(extraFieldAES, directory, compressionMethod) {\n\tconst extraFieldView = getDataView(extraFieldAES.data);\n\tconst strength = getUint8(extraFieldView, 4);\n\tObject.assign(extraFieldAES, {\n\t\tvendorVersion: getUint8(extraFieldView, 0),\n\t\tvendorId: getUint8(extraFieldView, 2),\n\t\tstrength,\n\t\toriginalCompressionMethod: compressionMethod,\n\t\tcompressionMethod: getUint16(extraFieldView, 5)\n\t});\n\tdirectory.compressionMethod = extraFieldAES.compressionMethod;\n}\n\nfunction readExtraFieldNTFS(extraFieldNTFS, directory) {\n\tconst extraFieldView = getDataView(extraFieldNTFS.data);\n\tlet offsetExtraField = 4;\n\tlet tag1Data;\n\ttry {\n\t\twhile (offsetExtraField < extraFieldNTFS.data.length && !tag1Data) {\n\t\t\tconst tagValue = getUint16(extraFieldView, offsetExtraField);\n\t\t\tconst attributeSize = getUint16(extraFieldView, offsetExtraField + 2);\n\t\t\tif (tagValue == EXTRAFIELD_TYPE_NTFS_TAG1) {\n\t\t\t\ttag1Data = extraFieldNTFS.data.slice(offsetExtraField + 4, offsetExtraField + 4 + attributeSize);\n\t\t\t}\n\t\t\toffsetExtraField += 4 + attributeSize;\n\t\t}\n\t} catch (_error) {\n\t\t// ignored\n\t}\n\ttry {\n\t\tif (tag1Data && tag1Data.length == 24) {\n\t\t\tconst tag1View = getDataView(tag1Data);\n\t\t\tconst rawLastModDate = tag1View.getBigUint64(0, true);\n\t\t\tconst rawLastAccessDate = tag1View.getBigUint64(8, true);\n\t\t\tconst rawCreationDate = tag1View.getBigUint64(16, true);\n\t\t\tObject.assign(extraFieldNTFS, {\n\t\t\t\trawLastModDate,\n\t\t\t\trawLastAccessDate,\n\t\t\t\trawCreationDate\n\t\t\t});\n\t\t\tconst lastModDate = getDateNTFS(rawLastModDate);\n\t\t\tconst lastAccessDate = getDateNTFS(rawLastAccessDate);\n\t\t\tconst creationDate = getDateNTFS(rawCreationDate);\n\t\t\tconst extraFieldData = { lastModDate, lastAccessDate, creationDate };\n\t\t\tObject.assign(extraFieldNTFS, extraFieldData);\n\t\t\tObject.assign(directory, extraFieldData);\n\t\t}\n\t} catch (_error) {\n\t\t// ignored\n\t}\n}\n\nfunction readExtraFieldExtendedTimestamp(extraFieldExtendedTimestamp, directory) {\n\tconst extraFieldView = getDataView(extraFieldExtendedTimestamp.data);\n\tconst flags = getUint8(extraFieldView, 0);\n\tconst timeProperties = [];\n\tconst timeRawProperties = [];\n\tif ((flags & 0x1) == 0x1) {\n\t\ttimeProperties.push(PROPERTY_NAME_LAST_MODIFICATION_DATE);\n\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_MODIFICATION_DATE);\n\t}\n\tif ((flags & 0x2) == 0x2) {\n\t\ttimeProperties.push(PROPERTY_NAME_LAST_ACCESS_DATE);\n\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_LAST_ACCESS_DATE);\n\t}\n\tif ((flags & 0x4) == 0x4) {\n\t\ttimeProperties.push(PROPERTY_NAME_CREATION_DATE);\n\t\ttimeRawProperties.push(PROPERTY_NAME_RAW_CREATION_DATE);\n\t}\n\tlet offset = 1;\n\ttimeProperties.forEach((propertyName, indexProperty) => {\n\t\tif (extraFieldExtendedTimestamp.data.length >= offset + 4) {\n\t\t\tconst time = getUint32(extraFieldView, offset);\n\t\t\tdirectory[propertyName] = extraFieldExtendedTimestamp[propertyName] = new Date(time * 1000);\n\t\t\tconst rawPropertyName = timeRawProperties[indexProperty];\n\t\t\textraFieldExtendedTimestamp[rawPropertyName] = time;\n\t\t}\n\t\toffset += 4;\n\t});\n}\n\nasync function seekSignature(reader, signature, startOffset, minimumBytes, maximumLength) {\n\tconst signatureArray = new Uint8Array(4);\n\tconst signatureView = getDataView(signatureArray);\n\tsetUint32(signatureView, 0, signature);\n\tconst maximumBytes = minimumBytes + maximumLength;\n\treturn (await seek(minimumBytes)) || await seek(Math.min(maximumBytes, startOffset));\n\n\tasync function seek(length) {\n\t\tconst offset = startOffset - length;\n\t\tconst bytes = await readUint8Array(reader, offset, length);\n\t\tfor (let indexByte = bytes.length - minimumBytes; indexByte >= 0; indexByte--) {\n\t\t\tif (bytes[indexByte] == signatureArray[0] && bytes[indexByte + 1] == signatureArray[1] &&\n\t\t\t\tbytes[indexByte + 2] == signatureArray[2] && bytes[indexByte + 3] == signatureArray[3]) {\n\t\t\t\treturn {\n\t\t\t\t\toffset: offset + indexByte,\n\t\t\t\t\tbuffer: bytes.slice(indexByte, indexByte + minimumBytes).buffer\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction getOptionValue(zipReader, options, name) {\n\treturn options[name] === UNDEFINED_VALUE ? zipReader.options[name] : options[name];\n}\n\nfunction getDate(timeRaw) {\n\tconst date = (timeRaw & 0xffff0000) >> 16, time = timeRaw & 0x0000ffff;\n\ttry {\n\t\treturn new Date(1980 + ((date & 0xFE00) >> 9), ((date & 0x01E0) >> 5) - 1, date & 0x001F, (time & 0xF800) >> 11, (time & 0x07E0) >> 5, (time & 0x001F) * 2, 0);\n\t} catch (_error) {\n\t\t// ignored\n\t}\n}\n\nfunction getDateNTFS(timeRaw) {\n\treturn new Date((Number((timeRaw / BigInt(10000)) - BigInt(11644473600000))));\n}\n\nfunction getUint8(view, offset) {\n\treturn view.getUint8(offset);\n}\n\nfunction getUint16(view, offset) {\n\treturn view.getUint16(offset, true);\n}\n\nfunction getUint32(view, offset) {\n\treturn view.getUint32(offset, true);\n}\n\nfunction getBigUint64(view, offset) {\n\treturn Number(view.getBigUint64(offset, true));\n}\n\nfunction setUint32(view, offset, value) {\n\tview.setUint32(offset, value, true);\n}\n\nfunction getDataView(array) {\n\treturn new DataView(array.buffer);\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global BigInt */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tMAX_32_BITS,\n\tMAX_16_BITS,\n\tCOMPRESSION_METHOD_DEFLATE,\n\tCOMPRESSION_METHOD_STORE,\n\tCOMPRESSION_METHOD_AES,\n\tSPLIT_ZIP_FILE_SIGNATURE,\n\tLOCAL_FILE_HEADER_SIGNATURE,\n\tDATA_DESCRIPTOR_RECORD_SIGNATURE,\n\tCENTRAL_FILE_HEADER_SIGNATURE,\n\tEND_OF_CENTRAL_DIR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE,\n\tZIP64_END_OF_CENTRAL_DIR_SIGNATURE,\n\tEXTRAFIELD_TYPE_AES,\n\tEXTRAFIELD_TYPE_ZIP64,\n\tEXTRAFIELD_TYPE_EXTENDED_TIMESTAMP,\n\tEXTRAFIELD_TYPE_NTFS,\n\tEXTRAFIELD_TYPE_NTFS_TAG1,\n\tEND_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH,\n\tZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH,\n\tBITFLAG_ENCRYPTED,\n\tBITFLAG_DATA_DESCRIPTOR,\n\tBITFLAG_LANG_ENCODING_FLAG,\n\tFILE_ATTR_MSDOS_DIR_MASK,\n\tVERSION_DEFLATE,\n\tVERSION_ZIP64,\n\tVERSION_AES,\n\tDIRECTORY_SIGNATURE,\n\tMIN_DATE,\n\tMAX_DATE,\n\tUNDEFINED_VALUE\n} from \"./constants.js\";\nimport {\n\tgetConfiguration,\n\tgetChunkSize\n} from \"./configuration.js\";\nimport {\n\tCODEC_DEFLATE,\n\trunWorker\n} from \"./codec-pool.js\";\nimport {\n\tinitStream,\n\tinitReader,\n\tinitWriter,\n\tBlobWriter,\n\tSplitDataWriter\n} from \"./io.js\";\nimport { encodeText } from \"./util/encode-text.js\";\nimport {\n\tPROPERTY_NAME_LAST_MODIFICATION_DATE,\n\tPROPERTY_NAME_LAST_ACCESS_DATE,\n\tPROPERTY_NAME_CREATION_DATE,\n\tPROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE,\n\tPROPERTY_NAME_MS_DOS_COMPATIBLE,\n\tPROPERTY_NAME_ZIP64,\n\tEntry\n} from \"./zip-entry.js\";\n\nconst ERR_DUPLICATED_NAME = \"File already exists\";\nconst ERR_INVALID_COMMENT = \"Zip file comment exceeds 64KB\";\nconst ERR_INVALID_ENTRY_COMMENT = \"File entry comment exceeds 64KB\";\nconst ERR_INVALID_ENTRY_NAME = \"File entry name exceeds 64KB\";\nconst ERR_INVALID_VERSION = \"Version exceeds 65535\";\nconst ERR_INVALID_ENCRYPTION_STRENGTH = \"The strength must equal 1, 2, or 3\";\nconst ERR_INVALID_EXTRAFIELD_TYPE = \"Extra field type exceeds 65535\";\nconst ERR_INVALID_EXTRAFIELD_DATA = \"Extra field data exceeds 64KB\";\nconst ERR_UNSUPPORTED_FORMAT = \"Zip64 is not supported (make sure 'keepOrder' is set to 'true')\";\n\nconst EXTRAFIELD_DATA_AES = new Uint8Array([0x07, 0x00, 0x02, 0x00, 0x41, 0x45, 0x03, 0x00, 0x00]);\n\nlet workers = 0;\nconst pendingEntries = [];\n\nclass ZipWriter {\n\n\tconstructor(writer, options = {}) {\n\t\twriter = initWriter(writer);\n\t\tObject.assign(this, {\n\t\t\twriter,\n\t\t\taddSplitZipSignature: writer instanceof SplitDataWriter,\n\t\t\toptions,\n\t\t\tconfig: getConfiguration(),\n\t\t\tfiles: new Map(),\n\t\t\tfilenames: new Set(),\n\t\t\toffset: writer.writable.size,\n\t\t\tpendingEntriesSize: 0,\n\t\t\tpendingAddFileCalls: new Set(),\n\t\t\tbufferedWrites: 0\n\t\t});\n\t}\n\n\tasync add(name = \"\", reader, options = {}) {\n\t\tconst zipWriter = this;\n\t\tconst {\n\t\t\tpendingAddFileCalls,\n\t\t\tconfig\n\t\t} = zipWriter;\n\t\tif (workers < config.maxWorkers) {\n\t\t\tworkers++;\n\t\t} else {\n\t\t\tawait new Promise(resolve => pendingEntries.push(resolve));\n\t\t}\n\t\tlet promiseAddFile;\n\t\ttry {\n\t\t\tname = name.trim();\n\t\t\tif (zipWriter.filenames.has(name)) {\n\t\t\t\tthrow new Error(ERR_DUPLICATED_NAME);\n\t\t\t}\n\t\t\tzipWriter.filenames.add(name);\n\t\t\tpromiseAddFile = addFile(zipWriter, name, reader, options);\n\t\t\tpendingAddFileCalls.add(promiseAddFile);\n\t\t\treturn await promiseAddFile;\n\t\t} catch (error) {\n\t\t\tzipWriter.filenames.delete(name);\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\tpendingAddFileCalls.delete(promiseAddFile);\n\t\t\tconst pendingEntry = pendingEntries.shift();\n\t\t\tif (pendingEntry) {\n\t\t\t\tpendingEntry();\n\t\t\t} else {\n\t\t\t\tworkers--;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync close(comment = new Uint8Array(), options = {}) {\n\t\tconst zipWriter = this;\n\t\tconst { pendingAddFileCalls, writer } = this;\n\t\tconst { writable } = writer;\n\t\twhile (pendingAddFileCalls.size) {\n\t\t\tawait Promise.all(Array.from(pendingAddFileCalls));\n\t\t}\n\t\tawait closeFile(this, comment, options);\n\t\tconst preventClose = getOptionValue(zipWriter, options, \"preventClose\");\n\t\tif (!preventClose) {\n\t\t\tawait writable.close();\n\t\t}\n\t\treturn writer.getData ? writer.getData() : writable;\n\t}\n}\n\nexport {\n\tZipWriter,\n\tERR_DUPLICATED_NAME,\n\tERR_INVALID_COMMENT,\n\tERR_INVALID_ENTRY_NAME,\n\tERR_INVALID_ENTRY_COMMENT,\n\tERR_INVALID_VERSION,\n\tERR_INVALID_EXTRAFIELD_TYPE,\n\tERR_INVALID_EXTRAFIELD_DATA,\n\tERR_INVALID_ENCRYPTION_STRENGTH,\n\tERR_UNSUPPORTED_FORMAT\n};\n\nasync function addFile(zipWriter, name, reader, options) {\n\tname = name.trim();\n\tif (options.directory && (!name.endsWith(DIRECTORY_SIGNATURE))) {\n\t\tname += DIRECTORY_SIGNATURE;\n\t} else {\n\t\toptions.directory = name.endsWith(DIRECTORY_SIGNATURE);\n\t}\n\tconst rawFilename = encodeText(name);\n\tif (getLength(rawFilename) > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_ENTRY_NAME);\n\t}\n\tconst comment = options.comment || \"\";\n\tconst rawComment = encodeText(comment);\n\tif (getLength(rawComment) > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_ENTRY_COMMENT);\n\t}\n\tconst version = getOptionValue(zipWriter, options, \"version\", VERSION_DEFLATE);\n\tif (version > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_VERSION);\n\t}\n\tconst versionMadeBy = getOptionValue(zipWriter, options, \"versionMadeBy\", 20);\n\tif (versionMadeBy > MAX_16_BITS) {\n\t\tthrow new Error(ERR_INVALID_VERSION);\n\t}\n\tconst lastModDate = getOptionValue(zipWriter, options, PROPERTY_NAME_LAST_MODIFICATION_DATE, new Date());\n\tconst lastAccessDate = getOptionValue(zipWriter, options, PROPERTY_NAME_LAST_ACCESS_DATE);\n\tconst creationDate = getOptionValue(zipWriter, options, PROPERTY_NAME_CREATION_DATE);\n\tconst msDosCompatible = getOptionValue(zipWriter, options, PROPERTY_NAME_MS_DOS_COMPATIBLE, true);\n\tconst internalFileAttribute = getOptionValue(zipWriter, options, PROPERTY_NAME_INTERNAL_FILE_ATTRIBUTE, 0);\n\tconst externalFileAttribute = getOptionValue(zipWriter, options, PROPERTY_NAME_EXTERNAL_FILE_ATTRIBUTE, 0);\n\tconst password = getOptionValue(zipWriter, options, \"password\");\n\tconst encryptionStrength = getOptionValue(zipWriter, options, \"encryptionStrength\", 3);\n\tconst zipCrypto = getOptionValue(zipWriter, options, \"zipCrypto\");\n\tconst extendedTimestamp = getOptionValue(zipWriter, options, \"extendedTimestamp\", true);\n\tconst keepOrder = getOptionValue(zipWriter, options, \"keepOrder\", true);\n\tconst level = getOptionValue(zipWriter, options, \"level\");\n\tconst useWebWorkers = getOptionValue(zipWriter, options, \"useWebWorkers\");\n\tconst bufferedWrite = getOptionValue(zipWriter, options, \"bufferedWrite\");\n\tconst dataDescriptorSignature = getOptionValue(zipWriter, options, \"dataDescriptorSignature\", false);\n\tconst signal = getOptionValue(zipWriter, options, \"signal\");\n\tconst useCompressionStream = getOptionValue(zipWriter, options, \"useCompressionStream\");\n\tlet dataDescriptor = getOptionValue(zipWriter, options, \"dataDescriptor\", true);\n\tlet zip64 = getOptionValue(zipWriter, options, PROPERTY_NAME_ZIP64);\n\tif (password !== UNDEFINED_VALUE && encryptionStrength !== UNDEFINED_VALUE && (encryptionStrength < 1 || encryptionStrength > 3)) {\n\t\tthrow new Error(ERR_INVALID_ENCRYPTION_STRENGTH);\n\t}\n\tlet rawExtraField = new Uint8Array();\n\tconst { extraField } = options;\n\tif (extraField) {\n\t\tlet extraFieldSize = 0;\n\t\tlet offset = 0;\n\t\textraField.forEach(data => extraFieldSize += 4 + getLength(data));\n\t\trawExtraField = new Uint8Array(extraFieldSize);\n\t\textraField.forEach((data, type) => {\n\t\t\tif (type > MAX_16_BITS) {\n\t\t\t\tthrow new Error(ERR_INVALID_EXTRAFIELD_TYPE);\n\t\t\t}\n\t\t\tif (getLength(data) > MAX_16_BITS) {\n\t\t\t\tthrow new Error(ERR_INVALID_EXTRAFIELD_DATA);\n\t\t\t}\n\t\t\tarraySet(rawExtraField, new Uint16Array([type]), offset);\n\t\t\tarraySet(rawExtraField, new Uint16Array([getLength(data)]), offset + 2);\n\t\t\tarraySet(rawExtraField, data, offset + 4);\n\t\t\toffset += 4 + getLength(data);\n\t\t});\n\t}\n\tlet maximumCompressedSize = 0;\n\tlet maximumEntrySize = 0;\n\tlet uncompressedSize = 0;\n\tconst zip64Enabled = zip64 === true;\n\tif (reader) {\n\t\treader = initReader(reader);\n\t\tawait initStream(reader);\n\t\tif (reader.size === UNDEFINED_VALUE) {\n\t\t\tdataDescriptor = true;\n\t\t\tif (zip64 || zip64 === UNDEFINED_VALUE) {\n\t\t\t\tzip64 = true;\n\t\t\t\tmaximumCompressedSize = MAX_32_BITS;\n\t\t\t}\n\t\t} else {\n\t\t\tuncompressedSize = reader.size;\n\t\t\tmaximumCompressedSize = getMaximumCompressedSize(uncompressedSize);\n\t\t}\n\t}\n\tconst { diskOffset, diskNumber, maxSize } = zipWriter.writer;\n\tconst zip64UncompressedSize = zip64Enabled || uncompressedSize >= MAX_32_BITS;\n\tconst zip64CompressedSize = zip64Enabled || maximumCompressedSize >= MAX_32_BITS;\n\tconst zip64Offset = zip64Enabled || zipWriter.offset + zipWriter.pendingEntriesSize - diskOffset >= MAX_32_BITS;\n\tconst supportZip64SplitFile = getOptionValue(zipWriter, options, \"supportZip64SplitFile\", true);\n\tconst zip64DiskNumberStart = (supportZip64SplitFile && zip64Enabled) || diskNumber + Math.ceil(zipWriter.pendingEntriesSize / maxSize) >= MAX_16_BITS;\n\tif (zip64Offset || zip64UncompressedSize || zip64CompressedSize || zip64DiskNumberStart) {\n\t\tif (zip64 === false || !keepOrder) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t} else {\n\t\t\tzip64 = true;\n\t\t}\n\t}\n\tzip64 = zip64 || false;\n\toptions = Object.assign({}, options, {\n\t\trawFilename,\n\t\trawComment,\n\t\tversion,\n\t\tversionMadeBy,\n\t\tlastModDate,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\trawExtraField,\n\t\tzip64,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzip64Offset,\n\t\tzip64DiskNumberStart,\n\t\tpassword,\n\t\tlevel,\n\t\tuseWebWorkers,\n\t\tencryptionStrength,\n\t\textendedTimestamp,\n\t\tzipCrypto,\n\t\tbufferedWrite,\n\t\tkeepOrder,\n\t\tdataDescriptor,\n\t\tdataDescriptorSignature,\n\t\tsignal,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute,\n\t\tuseCompressionStream\n\t});\n\tconst headerInfo = getHeaderInfo(options);\n\tconst dataDescriptorInfo = getDataDescriptorInfo(options);\n\tmaximumEntrySize = getLength(headerInfo.localHeaderArray, dataDescriptorInfo.dataDescriptorArray) + maximumCompressedSize;\n\tzipWriter.pendingEntriesSize += maximumEntrySize;\n\tlet fileEntry;\n\ttry {\n\t\tfileEntry = await getFileEntry(zipWriter, name, reader, { headerInfo, dataDescriptorInfo }, options);\n\t} finally {\n\t\tzipWriter.pendingEntriesSize -= maximumEntrySize;\n\t}\n\tObject.assign(fileEntry, { name, comment, extraField });\n\treturn new Entry(fileEntry);\n}\n\nasync function getFileEntry(zipWriter, name, reader, entryInfo, options) {\n\tconst {\n\t\tfiles,\n\t\twriter\n\t} = zipWriter;\n\tconst {\n\t\tkeepOrder,\n\t\tdataDescriptor,\n\t\tsignal\n\t} = options;\n\tconst {\n\t\theaderInfo\n\t} = entryInfo;\n\tconst previousFileEntry = Array.from(files.values()).pop();\n\tlet fileEntry = {};\n\tlet bufferedWrite;\n\tlet releaseLockWriter;\n\tlet releaseLockCurrentFileEntry;\n\tlet writingBufferedEntryData;\n\tlet writingEntryData;\n\tlet fileWriter;\n\tfiles.set(name, fileEntry);\n\ttry {\n\t\tlet lockPreviousFileEntry;\n\t\tif (keepOrder) {\n\t\t\tlockPreviousFileEntry = previousFileEntry && previousFileEntry.lock;\n\t\t\trequestLockCurrentFileEntry();\n\t\t}\n\t\tif (options.bufferedWrite || zipWriter.writerLocked || (zipWriter.bufferedWrites && keepOrder) || !dataDescriptor) {\n\t\t\tfileWriter = new BlobWriter();\n\t\t\tfileWriter.writable.size = 0;\n\t\t\tbufferedWrite = true;\n\t\t\tzipWriter.bufferedWrites++;\n\t\t\tawait initStream(writer);\n\t\t} else {\n\t\t\tfileWriter = writer;\n\t\t\tawait requestLockWriter();\n\t\t}\n\t\tawait initStream(fileWriter);\n\t\tconst { writable } = writer;\n\t\tlet { diskOffset } = writer;\n\t\tif (zipWriter.addSplitZipSignature) {\n\t\t\tdelete zipWriter.addSplitZipSignature;\n\t\t\tconst signatureArray = new Uint8Array(4);\n\t\t\tconst signatureArrayView = getDataView(signatureArray);\n\t\t\tsetUint32(signatureArrayView, 0, SPLIT_ZIP_FILE_SIGNATURE);\n\t\t\tawait writeData(writable, signatureArray);\n\t\t\tzipWriter.offset += 4;\n\t\t}\n\t\tif (!bufferedWrite) {\n\t\t\tawait lockPreviousFileEntry;\n\t\t\tawait skipDiskIfNeeded(writable);\n\t\t}\n\t\tconst { diskNumber } = writer;\n\t\twritingEntryData = true;\n\t\tfileEntry.diskNumberStart = diskNumber;\n\t\tfileEntry = await createFileEntry(reader, fileWriter, fileEntry, entryInfo, zipWriter.config, options);\n\t\twritingEntryData = false;\n\t\tfiles.set(name, fileEntry);\n\t\tfileEntry.filename = name;\n\t\tif (bufferedWrite) {\n\t\t\tawait fileWriter.writable.close();\n\t\t\tlet blob = await fileWriter.getData();\n\t\t\tawait lockPreviousFileEntry;\n\t\t\tawait requestLockWriter();\n\t\t\twritingBufferedEntryData = true;\n\t\t\tif (!dataDescriptor) {\n\t\t\t\tblob = await writeExtraHeaderInfo(fileEntry, blob, writable, options);\n\t\t\t}\n\t\t\tawait skipDiskIfNeeded(writable);\n\t\t\tfileEntry.diskNumberStart = writer.diskNumber;\n\t\t\tdiskOffset = writer.diskOffset;\n\t\t\tawait blob.stream().pipeTo(writable, { preventClose: true, signal });\n\t\t\twritable.size += blob.size;\n\t\t\twritingBufferedEntryData = false;\n\t\t}\n\t\tfileEntry.offset = zipWriter.offset - diskOffset;\n\t\tif (fileEntry.zip64) {\n\t\t\tsetZip64ExtraInfo(fileEntry, options);\n\t\t} else if (fileEntry.offset >= MAX_32_BITS) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t}\n\t\tzipWriter.offset += fileEntry.length;\n\t\treturn fileEntry;\n\t} catch (error) {\n\t\tif ((bufferedWrite && writingBufferedEntryData) || (!bufferedWrite && writingEntryData)) {\n\t\t\tzipWriter.hasCorruptedEntries = true;\n\t\t\tif (error) {\n\t\t\t\terror.corruptedEntry = true;\n\t\t\t}\n\t\t\tif (bufferedWrite) {\n\t\t\t\tzipWriter.offset += fileWriter.writable.size;\n\t\t\t} else {\n\t\t\t\tzipWriter.offset = fileWriter.writable.size;\n\t\t\t}\n\t\t}\n\t\tfiles.delete(name);\n\t\tthrow error;\n\t} finally {\n\t\tif (bufferedWrite) {\n\t\t\tzipWriter.bufferedWrites--;\n\t\t}\n\t\tif (releaseLockCurrentFileEntry) {\n\t\t\treleaseLockCurrentFileEntry();\n\t\t}\n\t\tif (releaseLockWriter) {\n\t\t\treleaseLockWriter();\n\t\t}\n\t}\n\n\tfunction requestLockCurrentFileEntry() {\n\t\tfileEntry.lock = new Promise(resolve => releaseLockCurrentFileEntry = resolve);\n\t}\n\n\tasync function requestLockWriter() {\n\t\tzipWriter.writerLocked = true;\n\t\tconst { lockWriter } = zipWriter;\n\t\tzipWriter.lockWriter = new Promise(resolve => releaseLockWriter = () => {\n\t\t\tzipWriter.writerLocked = false;\n\t\t\tresolve();\n\t\t});\n\t\tawait lockWriter;\n\t}\n\n\tasync function skipDiskIfNeeded(writable) {\n\t\tif (headerInfo.localHeaderArray.length > writer.availableSize) {\n\t\t\twriter.availableSize = 0;\n\t\t\tawait writeData(writable, new Uint8Array());\n\t\t}\n\t}\n}\n\nasync function createFileEntry(reader, writer, { diskNumberStart, lock }, entryInfo, config, options) {\n\tconst {\n\t\theaderInfo,\n\t\tdataDescriptorInfo\n\t} = entryInfo;\n\tconst {\n\t\tlocalHeaderArray,\n\t\theaderArray,\n\t\tlastModDate,\n\t\trawLastModDate,\n\t\tencrypted,\n\t\tcompressed,\n\t\tversion,\n\t\tcompressionMethod,\n\t\trawExtraFieldExtendedTimestamp,\n\t\trawExtraFieldNTFS,\n\t\trawExtraFieldAES\n\t} = headerInfo;\n\tconst { dataDescriptorArray } = dataDescriptorInfo;\n\tconst {\n\t\trawFilename,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\tpassword,\n\t\tlevel,\n\t\tzip64,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzip64Offset,\n\t\tzip64DiskNumberStart,\n\t\tzipCrypto,\n\t\tdataDescriptor,\n\t\tdirectory,\n\t\tversionMadeBy,\n\t\trawComment,\n\t\trawExtraField,\n\t\tuseWebWorkers,\n\t\tonstart,\n\t\tonprogress,\n\t\tonend,\n\t\tsignal,\n\t\tencryptionStrength,\n\t\textendedTimestamp,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute,\n\t\tuseCompressionStream\n\t} = options;\n\tconst fileEntry = {\n\t\tlock,\n\t\tversionMadeBy,\n\t\tzip64,\n\t\tdirectory: Boolean(directory),\n\t\tfilenameUTF8: true,\n\t\trawFilename,\n\t\tcommentUTF8: true,\n\t\trawComment,\n\t\trawExtraFieldExtendedTimestamp,\n\t\trawExtraFieldNTFS,\n\t\trawExtraFieldAES,\n\t\trawExtraField,\n\t\textendedTimestamp,\n\t\tmsDosCompatible,\n\t\tinternalFileAttribute,\n\t\texternalFileAttribute,\n\t\tdiskNumberStart\n\t};\n\tlet compressedSize = 0;\n\tlet uncompressedSize = 0;\n\tlet signature;\n\tconst { writable } = writer;\n\tif (reader) {\n\t\treader.chunkSize = getChunkSize(config);\n\t\tawait writeData(writable, localHeaderArray);\n\t\tconst readable = reader.readable;\n\t\tconst size = readable.size = reader.size;\n\t\tconst workerOptions = {\n\t\t\toptions: {\n\t\t\t\tcodecType: CODEC_DEFLATE,\n\t\t\t\tlevel,\n\t\t\t\tpassword,\n\t\t\t\tencryptionStrength,\n\t\t\t\tzipCrypto: encrypted && zipCrypto,\n\t\t\t\tpasswordVerification: encrypted && zipCrypto && (rawLastModDate >> 8) & 0xFF,\n\t\t\t\tsigned: true,\n\t\t\t\tcompressed,\n\t\t\t\tencrypted,\n\t\t\t\tuseWebWorkers,\n\t\t\t\tuseCompressionStream,\n\t\t\t\ttransferStreams: false\n\t\t\t},\n\t\t\tconfig,\n\t\t\tstreamOptions: { signal, size, onstart, onprogress, onend }\n\t\t};\n\t\tconst result = await runWorker({ readable, writable }, workerOptions);\n\t\twritable.size += result.size;\n\t\tsignature = result.signature;\n\t\tuncompressedSize = reader.size = readable.size;\n\t\tcompressedSize = result.size;\n\t} else {\n\t\tawait writeData(writable, localHeaderArray);\n\t}\n\tlet rawExtraFieldZip64;\n\tif (zip64) {\n\t\tlet rawExtraFieldZip64Length = 4;\n\t\tif (zip64UncompressedSize) {\n\t\t\trawExtraFieldZip64Length += 8;\n\t\t}\n\t\tif (zip64CompressedSize) {\n\t\t\trawExtraFieldZip64Length += 8;\n\t\t}\n\t\tif (zip64Offset) {\n\t\t\trawExtraFieldZip64Length += 8;\n\t\t}\n\t\tif (zip64DiskNumberStart) {\n\t\t\trawExtraFieldZip64Length += 4;\n\t\t}\n\t\trawExtraFieldZip64 = new Uint8Array(rawExtraFieldZip64Length);\n\t} else {\n\t\trawExtraFieldZip64 = new Uint8Array();\n\t}\n\tif (reader) {\n\t\tsetEntryInfo({\n\t\t\tsignature,\n\t\t\trawExtraFieldZip64,\n\t\t\tcompressedSize,\n\t\t\tuncompressedSize,\n\t\t\theaderInfo,\n\t\t\tdataDescriptorInfo\n\t\t}, options);\n\t}\n\tif (dataDescriptor) {\n\t\tawait writeData(writable, dataDescriptorArray);\n\t}\n\tObject.assign(fileEntry, {\n\t\tuncompressedSize,\n\t\tcompressedSize,\n\t\tlastModDate,\n\t\trawLastModDate,\n\t\tcreationDate,\n\t\tlastAccessDate,\n\t\tencrypted,\n\t\tlength: getLength(localHeaderArray, dataDescriptorArray) + compressedSize,\n\t\tcompressionMethod,\n\t\tversion,\n\t\theaderArray,\n\t\tsignature,\n\t\trawExtraFieldZip64,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzip64Offset,\n\t\tzip64DiskNumberStart\n\t});\n\treturn fileEntry;\n}\n\nfunction getHeaderInfo(options) {\n\tconst {\n\t\trawFilename,\n\t\tlastModDate,\n\t\tlastAccessDate,\n\t\tcreationDate,\n\t\tpassword,\n\t\tlevel,\n\t\tzip64,\n\t\tzipCrypto,\n\t\tdataDescriptor,\n\t\tdirectory,\n\t\trawExtraField,\n\t\tencryptionStrength,\n\t\textendedTimestamp,\n\t} = options;\n\tconst compressed = level !== 0 && !directory;\n\tconst encrypted = Boolean(password && getLength(password));\n\tlet version = options.version;\n\tlet rawExtraFieldAES;\n\tif (encrypted && !zipCrypto) {\n\t\trawExtraFieldAES = new Uint8Array(getLength(EXTRAFIELD_DATA_AES) + 2);\n\t\tconst extraFieldAESView = getDataView(rawExtraFieldAES);\n\t\tsetUint16(extraFieldAESView, 0, EXTRAFIELD_TYPE_AES);\n\t\tarraySet(rawExtraFieldAES, EXTRAFIELD_DATA_AES, 2);\n\t\tsetUint8(extraFieldAESView, 8, encryptionStrength);\n\t} else {\n\t\trawExtraFieldAES = new Uint8Array();\n\t}\n\tlet rawExtraFieldNTFS;\n\tlet rawExtraFieldExtendedTimestamp;\n\tif (extendedTimestamp) {\n\t\trawExtraFieldExtendedTimestamp = new Uint8Array(9 + (lastAccessDate ? 4 : 0) + (creationDate ? 4 : 0));\n\t\tconst extraFieldExtendedTimestampView = getDataView(rawExtraFieldExtendedTimestamp);\n\t\tsetUint16(extraFieldExtendedTimestampView, 0, EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\t\tsetUint16(extraFieldExtendedTimestampView, 2, getLength(rawExtraFieldExtendedTimestamp) - 4);\n\t\tconst extraFieldExtendedTimestampFlag = 0x1 + (lastAccessDate ? 0x2 : 0) + (creationDate ? 0x4 : 0);\n\t\tsetUint8(extraFieldExtendedTimestampView, 4, extraFieldExtendedTimestampFlag);\n\t\tsetUint32(extraFieldExtendedTimestampView, 5, Math.floor(lastModDate.getTime() / 1000));\n\t\tif (lastAccessDate) {\n\t\t\tsetUint32(extraFieldExtendedTimestampView, 9, Math.floor(lastAccessDate.getTime() / 1000));\n\t\t}\n\t\tif (creationDate) {\n\t\t\tsetUint32(extraFieldExtendedTimestampView, 13, Math.floor(creationDate.getTime() / 1000));\n\t\t}\n\t\ttry {\n\t\t\trawExtraFieldNTFS = new Uint8Array(36);\n\t\t\tconst extraFieldNTFSView = getDataView(rawExtraFieldNTFS);\n\t\t\tconst lastModTimeNTFS = getTimeNTFS(lastModDate);\n\t\t\tsetUint16(extraFieldNTFSView, 0, EXTRAFIELD_TYPE_NTFS);\n\t\t\tsetUint16(extraFieldNTFSView, 2, 32);\n\t\t\tsetUint16(extraFieldNTFSView, 8, EXTRAFIELD_TYPE_NTFS_TAG1);\n\t\t\tsetUint16(extraFieldNTFSView, 10, 24);\n\t\t\tsetBigUint64(extraFieldNTFSView, 12, lastModTimeNTFS);\n\t\t\tsetBigUint64(extraFieldNTFSView, 20, getTimeNTFS(lastAccessDate) || lastModTimeNTFS);\n\t\t\tsetBigUint64(extraFieldNTFSView, 28, getTimeNTFS(creationDate) || lastModTimeNTFS);\n\t\t} catch (_error) {\n\t\t\trawExtraFieldNTFS = new Uint8Array();\n\t\t}\n\t} else {\n\t\trawExtraFieldNTFS = rawExtraFieldExtendedTimestamp = new Uint8Array();\n\t}\n\tlet bitFlag = BITFLAG_LANG_ENCODING_FLAG;\n\tif (dataDescriptor) {\n\t\tbitFlag = bitFlag | BITFLAG_DATA_DESCRIPTOR;\n\t}\n\tlet compressionMethod = COMPRESSION_METHOD_STORE;\n\tif (compressed) {\n\t\tcompressionMethod = COMPRESSION_METHOD_DEFLATE;\n\t}\n\tif (zip64) {\n\t\tversion = version > VERSION_ZIP64 ? version : VERSION_ZIP64;\n\t}\n\tif (encrypted) {\n\t\tbitFlag = bitFlag | BITFLAG_ENCRYPTED;\n\t\tif (!zipCrypto) {\n\t\t\tversion = version > VERSION_AES ? version : VERSION_AES;\n\t\t\tcompressionMethod = COMPRESSION_METHOD_AES;\n\t\t\tif (compressed) {\n\t\t\t\trawExtraFieldAES[9] = COMPRESSION_METHOD_DEFLATE;\n\t\t\t}\n\t\t}\n\t}\n\tconst headerArray = new Uint8Array(26);\n\tconst headerView = getDataView(headerArray);\n\tsetUint16(headerView, 0, version);\n\tsetUint16(headerView, 2, bitFlag);\n\tsetUint16(headerView, 4, compressionMethod);\n\tconst dateArray = new Uint32Array(1);\n\tconst dateView = getDataView(dateArray);\n\tlet lastModDateMsDos;\n\tif (lastModDate < MIN_DATE) {\n\t\tlastModDateMsDos = MIN_DATE;\n\t} else if (lastModDate > MAX_DATE) {\n\t\tlastModDateMsDos = MAX_DATE;\n\t} else {\n\t\tlastModDateMsDos = lastModDate;\n\t}\n\tsetUint16(dateView, 0, (((lastModDateMsDos.getHours() << 6) | lastModDateMsDos.getMinutes()) << 5) | lastModDateMsDos.getSeconds() / 2);\n\tsetUint16(dateView, 2, ((((lastModDateMsDos.getFullYear() - 1980) << 4) | (lastModDateMsDos.getMonth() + 1)) << 5) | lastModDateMsDos.getDate());\n\tconst rawLastModDate = dateArray[0];\n\tsetUint32(headerView, 6, rawLastModDate);\n\tsetUint16(headerView, 22, getLength(rawFilename));\n\tconst extraFieldLength = getLength(rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS, rawExtraField);\n\tsetUint16(headerView, 24, extraFieldLength);\n\tconst localHeaderArray = new Uint8Array(30 + getLength(rawFilename) + extraFieldLength);\n\tconst localHeaderView = getDataView(localHeaderArray);\n\tsetUint32(localHeaderView, 0, LOCAL_FILE_HEADER_SIGNATURE);\n\tarraySet(localHeaderArray, headerArray, 4);\n\tarraySet(localHeaderArray, rawFilename, 30);\n\tarraySet(localHeaderArray, rawExtraFieldAES, 30 + getLength(rawFilename));\n\tarraySet(localHeaderArray, rawExtraFieldExtendedTimestamp, 30 + getLength(rawFilename, rawExtraFieldAES));\n\tarraySet(localHeaderArray, rawExtraFieldNTFS, 30 + getLength(rawFilename, rawExtraFieldAES, rawExtraFieldExtendedTimestamp));\n\tarraySet(localHeaderArray, rawExtraField, 30 + getLength(rawFilename, rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS));\n\treturn {\n\t\tlocalHeaderArray,\n\t\theaderArray,\n\t\theaderView,\n\t\tlastModDate,\n\t\trawLastModDate,\n\t\tencrypted,\n\t\tcompressed,\n\t\tversion,\n\t\tcompressionMethod,\n\t\trawExtraFieldExtendedTimestamp,\n\t\trawExtraFieldNTFS,\n\t\trawExtraFieldAES\n\t};\n}\n\nfunction getDataDescriptorInfo(options) {\n\tconst {\n\t\tzip64,\n\t\tdataDescriptor,\n\t\tdataDescriptorSignature\n\t} = options;\n\tlet dataDescriptorArray = new Uint8Array();\n\tlet dataDescriptorView, dataDescriptorOffset = 0;\n\tif (dataDescriptor) {\n\t\tdataDescriptorArray = new Uint8Array(zip64 ? (dataDescriptorSignature ? 24 : 20) : (dataDescriptorSignature ? 16 : 12));\n\t\tdataDescriptorView = getDataView(dataDescriptorArray);\n\t\tif (dataDescriptorSignature) {\n\t\t\tdataDescriptorOffset = 4;\n\t\t\tsetUint32(dataDescriptorView, 0, DATA_DESCRIPTOR_RECORD_SIGNATURE);\n\t\t}\n\t}\n\treturn {\n\t\tdataDescriptorArray,\n\t\tdataDescriptorView,\n\t\tdataDescriptorOffset\n\t};\n}\n\nfunction setEntryInfo(entryInfo, options) {\n\tconst {\n\t\tsignature,\n\t\trawExtraFieldZip64,\n\t\tcompressedSize,\n\t\tuncompressedSize,\n\t\theaderInfo,\n\t\tdataDescriptorInfo\n\t} = entryInfo;\n\tconst {\n\t\theaderView,\n\t\tencrypted\n\t} = headerInfo;\n\tconst {\n\t\tdataDescriptorView,\n\t\tdataDescriptorOffset\n\t} = dataDescriptorInfo;\n\tconst {\n\t\tzip64,\n\t\tzip64UncompressedSize,\n\t\tzip64CompressedSize,\n\t\tzipCrypto,\n\t\tdataDescriptor\n\t} = options;\n\tif ((!encrypted || zipCrypto) && signature !== UNDEFINED_VALUE) {\n\t\tsetUint32(headerView, 10, signature);\n\t\tif (dataDescriptor) {\n\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset, signature);\n\t\t}\n\t}\n\tif (zip64) {\n\t\tconst rawExtraFieldZip64View = getDataView(rawExtraFieldZip64);\n\t\tsetUint16(rawExtraFieldZip64View, 0, EXTRAFIELD_TYPE_ZIP64);\n\t\tsetUint16(rawExtraFieldZip64View, 2, rawExtraFieldZip64.length - 4);\n\t\tlet rawExtraFieldZip64Offset = 4;\n\t\tif (zip64UncompressedSize) {\n\t\t\tsetUint32(headerView, 18, MAX_32_BITS);\n\t\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(uncompressedSize));\n\t\t\trawExtraFieldZip64Offset += 8;\n\t\t}\n\t\tif (zip64CompressedSize) {\n\t\t\tsetUint32(headerView, 14, MAX_32_BITS);\n\t\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(compressedSize));\n\t\t}\n\t\tif (dataDescriptor) {\n\t\t\tsetBigUint64(dataDescriptorView, dataDescriptorOffset + 4, BigInt(compressedSize));\n\t\t\tsetBigUint64(dataDescriptorView, dataDescriptorOffset + 12, BigInt(uncompressedSize));\n\t\t}\n\t} else {\n\t\tsetUint32(headerView, 14, compressedSize);\n\t\tsetUint32(headerView, 18, uncompressedSize);\n\t\tif (dataDescriptor) {\n\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset + 4, compressedSize);\n\t\t\tsetUint32(dataDescriptorView, dataDescriptorOffset + 8, uncompressedSize);\n\t\t}\n\t}\n}\n\nasync function writeExtraHeaderInfo(fileEntry, entryData, writable, { zipCrypto }) {\n\tconst arrayBuffer = await sliceAsArrayBuffer(entryData, 0, 26);\n\tconst arrayBufferView = new DataView(arrayBuffer);\n\tif (!fileEntry.encrypted || zipCrypto) {\n\t\tsetUint32(arrayBufferView, 14, fileEntry.signature);\n\t}\n\tif (fileEntry.zip64) {\n\t\tsetUint32(arrayBufferView, 18, MAX_32_BITS);\n\t\tsetUint32(arrayBufferView, 22, MAX_32_BITS);\n\t} else {\n\t\tsetUint32(arrayBufferView, 18, fileEntry.compressedSize);\n\t\tsetUint32(arrayBufferView, 22, fileEntry.uncompressedSize);\n\t}\n\tawait writeData(writable, new Uint8Array(arrayBuffer));\n\treturn entryData.slice(arrayBuffer.byteLength);\n}\n\nfunction setZip64ExtraInfo(fileEntry, options) {\n\tconst { rawExtraFieldZip64, offset, diskNumberStart } = fileEntry;\n\tconst { zip64UncompressedSize, zip64CompressedSize, zip64Offset, zip64DiskNumberStart } = options;\n\tconst rawExtraFieldZip64View = getDataView(rawExtraFieldZip64);\n\tlet rawExtraFieldZip64Offset = 4;\n\tif (zip64UncompressedSize) {\n\t\trawExtraFieldZip64Offset += 8;\n\t}\n\tif (zip64CompressedSize) {\n\t\trawExtraFieldZip64Offset += 8;\n\t}\n\tif (zip64Offset) {\n\t\tsetBigUint64(rawExtraFieldZip64View, rawExtraFieldZip64Offset, BigInt(offset));\n\t\trawExtraFieldZip64Offset += 8;\n\t}\n\tif (zip64DiskNumberStart) {\n\t\tsetUint32(rawExtraFieldZip64View, rawExtraFieldZip64Offset, diskNumberStart);\n\t}\n}\n\nasync function closeFile(zipWriter, comment, options) {\n\tconst { files, writer } = zipWriter;\n\tconst { diskOffset, writable } = writer;\n\tlet { diskNumber } = writer;\n\tlet offset = 0;\n\tlet directoryDataLength = 0;\n\tlet directoryOffset = zipWriter.offset - diskOffset;\n\tlet filesLength = files.size;\n\tfor (const [, {\n\t\trawFilename,\n\t\trawExtraFieldZip64,\n\t\trawExtraFieldAES,\n\t\trawExtraField,\n\t\trawComment,\n\t\trawExtraFieldExtendedTimestamp,\n\t\trawExtraFieldNTFS\n\t}] of files) {\n\t\tdirectoryDataLength += 46 +\n\t\t\tgetLength(\n\t\t\t\trawFilename,\n\t\t\t\trawComment,\n\t\t\t\trawExtraFieldZip64,\n\t\t\t\trawExtraFieldAES,\n\t\t\t\trawExtraFieldExtendedTimestamp,\n\t\t\t\trawExtraFieldNTFS,\n\t\t\t\trawExtraField);\n\t}\n\tconst directoryArray = new Uint8Array(directoryDataLength);\n\tconst directoryView = getDataView(directoryArray);\n\tawait initStream(writer);\n\tlet directoryDiskOffset = 0;\n\tfor (const [indexFileEntry, fileEntry] of Array.from(files.values()).entries()) {\n\t\tconst {\n\t\t\toffset: fileEntryOffset,\n\t\t\trawFilename,\n\t\t\trawExtraFieldZip64,\n\t\t\trawExtraFieldAES,\n\t\t\trawExtraFieldNTFS,\n\t\t\trawExtraField,\n\t\t\trawComment,\n\t\t\tversionMadeBy,\n\t\t\theaderArray,\n\t\t\tdirectory,\n\t\t\tzip64,\n\t\t\tzip64UncompressedSize,\n\t\t\tzip64CompressedSize,\n\t\t\tzip64DiskNumberStart,\n\t\t\tzip64Offset,\n\t\t\tmsDosCompatible,\n\t\t\tinternalFileAttribute,\n\t\t\texternalFileAttribute,\n\t\t\textendedTimestamp,\n\t\t\tlastModDate,\n\t\t\tdiskNumberStart,\n\t\t\tuncompressedSize,\n\t\t\tcompressedSize\n\t\t} = fileEntry;\n\t\tlet rawExtraFieldExtendedTimestamp;\n\t\tif (extendedTimestamp) {\n\t\t\trawExtraFieldExtendedTimestamp = new Uint8Array(9);\n\t\t\tconst extraFieldExtendedTimestampView = getDataView(rawExtraFieldExtendedTimestamp);\n\t\t\tsetUint16(extraFieldExtendedTimestampView, 0, EXTRAFIELD_TYPE_EXTENDED_TIMESTAMP);\n\t\t\tsetUint16(extraFieldExtendedTimestampView, 2, getLength(rawExtraFieldExtendedTimestamp) - 4);\n\t\t\tsetUint8(extraFieldExtendedTimestampView, 4, 0x1);\n\t\t\tsetUint32(extraFieldExtendedTimestampView, 5, Math.floor(lastModDate.getTime() / 1000));\n\t\t} else {\n\t\t\trawExtraFieldExtendedTimestamp = new Uint8Array();\n\t\t}\n\t\tconst extraFieldLength = getLength(rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS, rawExtraField);\n\t\tsetUint32(directoryView, offset, CENTRAL_FILE_HEADER_SIGNATURE);\n\t\tsetUint16(directoryView, offset + 4, versionMadeBy);\n\t\tconst headerView = getDataView(headerArray);\n\t\tif (!zip64UncompressedSize) {\n\t\t\tsetUint32(headerView, 18, uncompressedSize);\n\t\t}\n\t\tif (!zip64CompressedSize) {\n\t\t\tsetUint32(headerView, 14, compressedSize);\n\t\t}\n\t\tarraySet(directoryArray, headerArray, offset + 6);\n\t\tsetUint16(directoryView, offset + 30, extraFieldLength);\n\t\tsetUint16(directoryView, offset + 32, getLength(rawComment));\n\t\tsetUint16(directoryView, offset + 34, zip64 && zip64DiskNumberStart ? MAX_16_BITS : diskNumberStart);\n\t\tsetUint16(directoryView, offset + 36, internalFileAttribute);\n\t\tif (externalFileAttribute) {\n\t\t\tsetUint32(directoryView, offset + 38, externalFileAttribute);\n\t\t} else if (directory && msDosCompatible) {\n\t\t\tsetUint8(directoryView, offset + 38, FILE_ATTR_MSDOS_DIR_MASK);\n\t\t}\n\t\tsetUint32(directoryView, offset + 42, zip64 && zip64Offset ? MAX_32_BITS : fileEntryOffset);\n\t\tarraySet(directoryArray, rawFilename, offset + 46);\n\t\tarraySet(directoryArray, rawExtraFieldZip64, offset + 46 + getLength(rawFilename));\n\t\tarraySet(directoryArray, rawExtraFieldAES, offset + 46 + getLength(rawFilename, rawExtraFieldZip64));\n\t\tarraySet(directoryArray, rawExtraFieldExtendedTimestamp, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES));\n\t\tarraySet(directoryArray, rawExtraFieldNTFS, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldExtendedTimestamp));\n\t\tarraySet(directoryArray, rawExtraField, offset + 46 + getLength(rawFilename, rawExtraFieldZip64, rawExtraFieldAES, rawExtraFieldExtendedTimestamp, rawExtraFieldNTFS));\n\t\tarraySet(directoryArray, rawComment, offset + 46 + getLength(rawFilename) + extraFieldLength);\n\t\tconst directoryEntryLength = 46 + getLength(rawFilename, rawComment) + extraFieldLength;\n\t\tif (offset - directoryDiskOffset > writer.availableSize) {\n\t\t\twriter.availableSize = 0;\n\t\t\tawait writeData(writable, directoryArray.slice(directoryDiskOffset, offset));\n\t\t\tdirectoryDiskOffset = offset;\n\t\t}\n\t\toffset += directoryEntryLength;\n\t\tif (options.onprogress) {\n\t\t\ttry {\n\t\t\t\tawait options.onprogress(indexFileEntry + 1, files.size, new Entry(fileEntry));\n\t\t\t} catch (_error) {\n\t\t\t\t// ignored\n\t\t\t}\n\t\t}\n\t}\n\tawait writeData(writable, directoryDiskOffset ? directoryArray.slice(directoryDiskOffset) : directoryArray);\n\tlet lastDiskNumber = writer.diskNumber;\n\tconst { availableSize } = writer;\n\tif (availableSize < END_OF_CENTRAL_DIR_LENGTH) {\n\t\tlastDiskNumber++;\n\t}\n\tlet zip64 = getOptionValue(zipWriter, options, \"zip64\");\n\tif (directoryOffset >= MAX_32_BITS || directoryDataLength >= MAX_32_BITS || filesLength >= MAX_16_BITS || lastDiskNumber >= MAX_16_BITS) {\n\t\tif (zip64 === false) {\n\t\t\tthrow new Error(ERR_UNSUPPORTED_FORMAT);\n\t\t} else {\n\t\t\tzip64 = true;\n\t\t}\n\t}\n\tconst endOfdirectoryArray = new Uint8Array(zip64 ? ZIP64_END_OF_CENTRAL_DIR_TOTAL_LENGTH : END_OF_CENTRAL_DIR_LENGTH);\n\tconst endOfdirectoryView = getDataView(endOfdirectoryArray);\n\toffset = 0;\n\tif (zip64) {\n\t\tsetUint32(endOfdirectoryView, 0, ZIP64_END_OF_CENTRAL_DIR_SIGNATURE);\n\t\tsetBigUint64(endOfdirectoryView, 4, BigInt(44));\n\t\tsetUint16(endOfdirectoryView, 12, 45);\n\t\tsetUint16(endOfdirectoryView, 14, 45);\n\t\tsetUint32(endOfdirectoryView, 16, lastDiskNumber);\n\t\tsetUint32(endOfdirectoryView, 20, diskNumber);\n\t\tsetBigUint64(endOfdirectoryView, 24, BigInt(filesLength));\n\t\tsetBigUint64(endOfdirectoryView, 32, BigInt(filesLength));\n\t\tsetBigUint64(endOfdirectoryView, 40, BigInt(directoryDataLength));\n\t\tsetBigUint64(endOfdirectoryView, 48, BigInt(directoryOffset));\n\t\tsetUint32(endOfdirectoryView, 56, ZIP64_END_OF_CENTRAL_DIR_LOCATOR_SIGNATURE);\n\t\tsetBigUint64(endOfdirectoryView, 64, BigInt(directoryOffset) + BigInt(directoryDataLength));\n\t\tsetUint32(endOfdirectoryView, 72, lastDiskNumber + 1);\n\t\tconst supportZip64SplitFile = getOptionValue(zipWriter, options, \"supportZip64SplitFile\", true);\n\t\tif (supportZip64SplitFile) {\n\t\t\tlastDiskNumber = MAX_16_BITS;\n\t\t\tdiskNumber = MAX_16_BITS;\n\t\t}\n\t\tfilesLength = MAX_16_BITS;\n\t\tdirectoryOffset = MAX_32_BITS;\n\t\tdirectoryDataLength = MAX_32_BITS;\n\t\toffset += ZIP64_END_OF_CENTRAL_DIR_LENGTH + ZIP64_END_OF_CENTRAL_DIR_LOCATOR_LENGTH;\n\t}\n\tsetUint32(endOfdirectoryView, offset, END_OF_CENTRAL_DIR_SIGNATURE);\n\tsetUint16(endOfdirectoryView, offset + 4, lastDiskNumber);\n\tsetUint16(endOfdirectoryView, offset + 6, diskNumber);\n\tsetUint16(endOfdirectoryView, offset + 8, filesLength);\n\tsetUint16(endOfdirectoryView, offset + 10, filesLength);\n\tsetUint32(endOfdirectoryView, offset + 12, directoryDataLength);\n\tsetUint32(endOfdirectoryView, offset + 16, directoryOffset);\n\tconst commentLength = getLength(comment);\n\tif (commentLength) {\n\t\tif (commentLength <= MAX_16_BITS) {\n\t\t\tsetUint16(endOfdirectoryView, offset + 20, commentLength);\n\t\t} else {\n\t\t\tthrow new Error(ERR_INVALID_COMMENT);\n\t\t}\n\t}\n\tawait writeData(writable, endOfdirectoryArray);\n\tif (commentLength) {\n\t\tawait writeData(writable, comment);\n\t}\n}\n\nfunction sliceAsArrayBuffer(blob, start, end) {\n\tif (start || end) {\n\t\treturn blob.slice(start, end).arrayBuffer();\n\t} else {\n\t\treturn blob.arrayBuffer();\n\t}\n}\n\nasync function writeData(writable, array) {\n\tconst streamWriter = writable.getWriter();\n\tawait streamWriter.ready;\n\twritable.size += getLength(array);\n\tawait streamWriter.write(array);\n\tstreamWriter.releaseLock();\n}\n\nfunction getTimeNTFS(date) {\n\tif (date) {\n\t\treturn ((BigInt(date.getTime()) + BigInt(11644473600000)) * BigInt(10000));\n\t}\n}\n\nfunction getOptionValue(zipWriter, options, name, defaultValue) {\n\tconst result = options[name] === UNDEFINED_VALUE ? zipWriter.options[name] : options[name];\n\treturn result === UNDEFINED_VALUE ? defaultValue : result;\n}\n\nfunction getMaximumCompressedSize(uncompressedSize) {\n\treturn uncompressedSize + (5 * (Math.floor(uncompressedSize / 16383) + 1));\n}\n\nfunction setUint8(view, offset, value) {\n\tview.setUint8(offset, value);\n}\n\nfunction setUint16(view, offset, value) {\n\tview.setUint16(offset, value, true);\n}\n\nfunction setUint32(view, offset, value) {\n\tview.setUint32(offset, value, true);\n}\n\nfunction setBigUint64(view, offset, value) {\n\tview.setBigUint64(offset, value, true);\n}\n\nfunction arraySet(array, typedArray, offset) {\n\tarray.set(typedArray, offset);\n}\n\nfunction getDataView(array) {\n\treturn new DataView(array.buffer);\n}\n\nfunction getLength(...arrayLikes) {\n\tlet result = 0;\n\tarrayLikes.forEach(arrayLike => arrayLike && (result += arrayLike.length));\n\treturn result;\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* global WritableStream */\n// deno-lint-ignore-file no-this-alias\n\nimport {\n\tinitStream,\n\tReader,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tUint8ArrayReader,\n\tUint8ArrayWriter,\n\tBlobReader,\n\tBlobWriter,\n\tHttpReader\n} from \"./io.js\";\nimport {\n\tZipReader\n} from \"./zip-reader.js\";\nimport {\n\tZipWriter\n} from \"./zip-writer.js\";\n\nclass ZipEntry {\n\n\tconstructor(fs, name, params, parent) {\n\t\tconst zipEntry = this;\n\t\tif (fs.root && parent && parent.getChildByName(name)) {\n\t\t\tthrow new Error(\"Entry filename already exists\");\n\t\t}\n\t\tif (!params) {\n\t\t\tparams = {};\n\t\t}\n\t\tObject.assign(zipEntry, {\n\t\t\tfs,\n\t\t\tname,\n\t\t\tdata: params.data,\n\t\t\tid: fs.entries.length,\n\t\t\tparent,\n\t\t\tchildren: [],\n\t\t\tuncompressedSize: 0\n\t\t});\n\t\tfs.entries.push(zipEntry);\n\t\tif (parent) {\n\t\t\tzipEntry.parent.children.push(zipEntry);\n\t\t}\n\t}\n\n\tmoveTo(target) {\n\t\t// deprecated\n\t\tconst zipEntry = this;\n\t\tzipEntry.fs.move(zipEntry, target);\n\t}\n\n\tgetFullname() {\n\t\treturn this.getRelativeName();\n\t}\n\n\tgetRelativeName(ancestor = this.fs.root) {\n\t\tconst zipEntry = this;\n\t\tlet relativeName = zipEntry.name;\n\t\tlet entry = zipEntry.parent;\n\t\twhile (entry && entry != ancestor) {\n\t\t\trelativeName = (entry.name ? entry.name + \"/\" : \"\") + relativeName;\n\t\t\tentry = entry.parent;\n\t\t}\n\t\treturn relativeName;\n\t}\n\n\tisDescendantOf(ancestor) {\n\t\tlet entry = this.parent;\n\t\twhile (entry && entry.id != ancestor.id) {\n\t\t\tentry = entry.parent;\n\t\t}\n\t\treturn Boolean(entry);\n\t}\n}\n\nclass ZipFileEntry extends ZipEntry {\n\n\tconstructor(fs, name, params, parent) {\n\t\tsuper(fs, name, params, parent);\n\t\tconst zipEntry = this;\n\t\tzipEntry.Reader = params.Reader;\n\t\tzipEntry.Writer = params.Writer;\n\t\tif (params.getData) {\n\t\t\tzipEntry.getData = params.getData;\n\t\t}\n\t}\n\n\tasync getData(writer, options = {}) {\n\t\tconst zipEntry = this;\n\t\tif (!writer || (writer.constructor == zipEntry.Writer && zipEntry.data)) {\n\t\t\treturn zipEntry.data;\n\t\t} else {\n\t\t\tconst reader = zipEntry.reader = new zipEntry.Reader(zipEntry.data, options);\n\t\t\tawait Promise.all([initStream(reader), initStream(writer, zipEntry.data.uncompressedSize)]);\n\t\t\tconst readable = reader.readable;\n\t\t\treadable.size = zipEntry.uncompressedSize = reader.size;\n\t\t\tawait readable.pipeTo(writer.writable);\n\t\t\treturn writer.getData ? writer.getData() : writer.writable;\n\t\t}\n\t}\n\n\tgetText(encoding, options) {\n\t\treturn this.getData(new TextWriter(encoding), options);\n\t}\n\n\tgetBlob(mimeType, options) {\n\t\treturn this.getData(new BlobWriter(mimeType), options);\n\t}\n\n\tgetData64URI(mimeType, options) {\n\t\treturn this.getData(new Data64URIWriter(mimeType), options);\n\t}\n\n\tgetUint8Array(options) {\n\t\treturn this.getData(new Uint8ArrayWriter(), options);\n\t}\n\n\tgetWritable(writable = new WritableStream(), options) {\n\t\treturn this.getData({ writable }, options);\n\t}\n\n\treplaceBlob(blob) {\n\t\tObject.assign(this, {\n\t\t\tdata: blob,\n\t\t\tReader: BlobReader,\n\t\t\tWriter: BlobWriter,\n\t\t\treader: null\n\t\t});\n\t}\n\n\treplaceText(text) {\n\t\tObject.assign(this, {\n\t\t\tdata: text,\n\t\t\tReader: TextReader,\n\t\t\tWriter: TextWriter,\n\t\t\treader: null\n\t\t});\n\t}\n\n\treplaceData64URI(dataURI) {\n\t\tObject.assign(this, {\n\t\t\tdata: dataURI,\n\t\t\tReader: Data64URIReader,\n\t\t\tWriter: Data64URIWriter,\n\t\t\treader: null\n\t\t});\n\t}\n\n\treplaceUint8Array(array) {\n\t\tObject.assign(this, {\n\t\t\tdata: array,\n\t\t\tReader: Uint8ArrayReader,\n\t\t\tWriter: Uint8ArrayWriter,\n\t\t\treader: null\n\t\t});\n\t}\n\n\treplaceReadable(readable) {\n\t\tObject.assign(this, {\n\t\t\tdata: null,\n\t\t\tReader: function () { return { readable }; },\n\t\t\tWriter: null,\n\t\t\treader: null\n\t\t});\n\t}\n}\n\nclass ZipDirectoryEntry extends ZipEntry {\n\n\tconstructor(fs, name, params, parent) {\n\t\tsuper(fs, name, params, parent);\n\t\tthis.directory = true;\n\t}\n\n\taddDirectory(name) {\n\t\treturn addChild(this, name, null, true);\n\t}\n\n\taddText(name, text) {\n\t\treturn addChild(this, name, {\n\t\t\tdata: text,\n\t\t\tReader: TextReader,\n\t\t\tWriter: TextWriter\n\t\t});\n\t}\n\n\taddBlob(name, blob) {\n\t\treturn addChild(this, name, {\n\t\t\tdata: blob,\n\t\t\tReader: BlobReader,\n\t\t\tWriter: BlobWriter\n\t\t});\n\t}\n\n\taddData64URI(name, dataURI) {\n\t\treturn addChild(this, name, {\n\t\t\tdata: dataURI,\n\t\t\tReader: Data64URIReader,\n\t\t\tWriter: Data64URIWriter\n\t\t});\n\t}\n\n\taddUint8Array(name, array) {\n\t\treturn addChild(this, name, {\n\t\t\tdata: array,\n\t\t\tReader: Uint8ArrayReader,\n\t\t\tWriter: Uint8ArrayWriter\n\t\t});\n\t}\n\n\taddHttpContent(name, url, options = {}) {\n\t\treturn addChild(this, name, {\n\t\t\tdata: url,\n\t\t\tReader: class extends HttpReader {\n\t\t\t\tconstructor(url) {\n\t\t\t\t\tsuper(url, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\taddReadable(name, readable) {\n\t\treturn addChild(this, name, {\n\t\t\tReader: function () { return { readable }; }\n\t\t});\n\t}\n\n\taddFileSystemEntry(fileSystemEntry) {\n\t\treturn addFileSystemEntry(this, fileSystemEntry);\n\t}\n\n\taddData(name, params) {\n\t\treturn addChild(this, name, params);\n\t}\n\n\tasync importBlob(blob, options = {}) {\n\t\tawait this.importZip(new BlobReader(blob), options);\n\t}\n\n\tasync importData64URI(dataURI, options = {}) {\n\t\tawait this.importZip(new Data64URIReader(dataURI), options);\n\t}\n\n\tasync importUint8Array(array, options = {}) {\n\t\tawait this.importZip(new Uint8ArrayReader(array), options);\n\t}\n\n\tasync importHttpContent(url, options = {}) {\n\t\tawait this.importZip(new HttpReader(url, options), options);\n\t}\n\n\tasync importReadable(readable, options = {}) {\n\t\tawait this.importZip({ readable }, options);\n\t}\n\n\texportBlob(options = {}) {\n\t\treturn this.exportZip(new BlobWriter(options.mimeType || \"application/zip\"), options);\n\t}\n\n\texportData64URI(options = {}) {\n\t\treturn this.exportZip(new Data64URIWriter(options.mimeType || \"application/zip\"), options);\n\t}\n\n\texportUint8Array(options = {}) {\n\t\treturn this.exportZip(new Uint8ArrayWriter(), options);\n\t}\n\n\tasync exportWritable(writable = new WritableStream(), options = {}) {\n\t\tawait this.exportZip({ writable }, options);\n\t\treturn writable;\n\t}\n\n\tasync importZip(reader, options) {\n\t\tawait initStream(reader);\n\t\tconst zipReader = new ZipReader(reader, options);\n\t\tconst entries = await zipReader.getEntries();\n\t\tentries.forEach((entry) => {\n\t\t\tlet parent = this;\n\t\t\tconst path = entry.filename.split(\"/\");\n\t\t\tconst name = path.pop();\n\t\t\tpath.forEach(pathPart => parent = parent.getChildByName(pathPart) || new ZipDirectoryEntry(this.fs, pathPart, null, parent));\n\t\t\tif (!entry.directory) {\n\t\t\t\taddChild(parent, name, {\n\t\t\t\t\tdata: entry,\n\t\t\t\t\tReader: getZipBlobReader(Object.assign({}, options))\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tasync exportZip(writer, options) {\n\t\tconst zipEntry = this;\n\t\tawait Promise.all([initReaders(zipEntry), initStream(writer)]);\n\t\tconst zipWriter = new ZipWriter(writer, options);\n\t\tawait exportZip(zipWriter, zipEntry, getTotalSize([zipEntry], \"uncompressedSize\"), options);\n\t\tawait zipWriter.close();\n\t\treturn writer.getData ? writer.getData() : writer.writable;\n\t}\n\n\tgetChildByName(name) {\n\t\tconst children = this.children;\n\t\tfor (let childIndex = 0; childIndex < children.length; childIndex++) {\n\t\t\tconst child = children[childIndex];\n\t\t\tif (child.name == name) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nclass FS {\n\n\tconstructor() {\n\t\tresetFS(this);\n\t}\n\n\tget children() {\n\t\treturn this.root.children;\n\t}\n\n\tremove(entry) {\n\t\tdetach(entry);\n\t\tthis.entries[entry.id] = null;\n\t}\n\n\tmove(entry, destination) {\n\t\tif (entry == this.root) {\n\t\t\tthrow new Error(\"Root directory cannot be moved\");\n\t\t} else {\n\t\t\tif (destination.directory) {\n\t\t\t\tif (!destination.isDescendantOf(entry)) {\n\t\t\t\t\tif (entry != destination) {\n\t\t\t\t\t\tif (destination.getChildByName(entry.name)) {\n\t\t\t\t\t\t\tthrow new Error(\"Entry filename already exists\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdetach(entry);\n\t\t\t\t\t\tentry.parent = destination;\n\t\t\t\t\t\tdestination.children.push(entry);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Entry is a ancestor of target entry\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Target entry is not a directory\");\n\t\t\t}\n\t\t}\n\t}\n\n\tfind(fullname) {\n\t\tconst path = fullname.split(\"/\");\n\t\tlet node = this.root;\n\t\tfor (let index = 0; node && index < path.length; index++) {\n\t\t\tnode = node.getChildByName(path[index]);\n\t\t}\n\t\treturn node;\n\t}\n\n\tgetById(id) {\n\t\treturn this.entries[id];\n\t}\n\n\tgetChildByName(name) {\n\t\treturn this.root.getChildByName(name);\n\t}\n\n\taddDirectory(name) {\n\t\treturn this.root.addDirectory(name);\n\t}\n\n\taddText(name, text) {\n\t\treturn this.root.addText(name, text);\n\t}\n\n\taddBlob(name, blob) {\n\t\treturn this.root.addBlob(name, blob);\n\t}\n\n\taddData64URI(name, dataURI) {\n\t\treturn this.root.addData64URI(name, dataURI);\n\t}\n\n\taddHttpContent(name, url, options) {\n\t\treturn this.root.addHttpContent(name, url, options);\n\t}\n\n\taddReadable(name, readable) {\n\t\treturn this.root.addReadable(name, readable);\n\t}\n\n\taddFileSystemEntry(fileSystemEntry) {\n\t\treturn this.root.addFileSystemEntry(fileSystemEntry);\n\t}\n\n\taddData(name, params) {\n\t\treturn this.root.addData(name, params);\n\t}\n\n\tasync importBlob(blob, options) {\n\t\tresetFS(this);\n\t\tawait this.root.importBlob(blob, options);\n\t}\n\n\tasync importData64URI(dataURI, options) {\n\t\tresetFS(this);\n\t\tawait this.root.importData64URI(dataURI, options);\n\t}\n\n\tasync importUint8Array(array, options) {\n\t\tresetFS(this);\n\t\tawait this.root.importUint8Array(array, options);\n\t}\n\n\tasync importHttpContent(url, options) {\n\t\tresetFS(this);\n\t\tawait this.root.importHttpContent(url, options);\n\t}\n\n\tasync importReadable(readable, options) {\n\t\tresetFS(this);\n\t\tawait this.root.importReadable(readable, options);\n\t}\n\n\texportBlob(options) {\n\t\treturn this.root.exportBlob(options);\n\t}\n\n\texportData64URI(options) {\n\t\treturn this.root.exportData64URI(options);\n\t}\n\n\texportUint8Array(options) {\n\t\treturn this.root.exportUint8Array(options);\n\t}\n\n\texportWritable(writable, options) {\n\t\treturn this.root.exportWritable(writable, options);\n\t}\n}\n\nconst fs = { FS, ZipDirectoryEntry, ZipFileEntry };\nexport { fs };\n\nfunction getTotalSize(entries, propertyName) {\n\tlet size = 0;\n\tentries.forEach(process);\n\treturn size;\n\n\tfunction process(entry) {\n\t\tsize += entry[propertyName];\n\t\tif (entry.children) {\n\t\t\tentry.children.forEach(process);\n\t\t}\n\t}\n}\n\nfunction getZipBlobReader(options) {\n\treturn class extends Reader {\n\n\t\tconstructor(entry, options = {}) {\n\t\t\tsuper();\n\t\t\tthis.entry = entry;\n\t\t\tthis.options = options;\n\t\t}\n\n\t\tasync init() {\n\t\t\tsuper.init();\n\t\t\tconst zipBlobReader = this;\n\t\t\tzipBlobReader.size = zipBlobReader.entry.uncompressedSize;\n\t\t\tconst data = await zipBlobReader.entry.getData(new BlobWriter(), Object.assign({}, zipBlobReader.options, options));\n\t\t\tzipBlobReader.data = data;\n\t\t\tzipBlobReader.blobReader = new BlobReader(data);\n\t\t}\n\n\t\treadUint8Array(index, length) {\n\t\t\treturn this.blobReader.readUint8Array(index, length);\n\t\t}\n\t};\n}\n\nasync function initReaders(entry) {\n\tif (entry.children.length) {\n\t\tfor (const child of entry.children) {\n\t\t\tif (child.directory) {\n\t\t\t\tawait initReaders(child);\n\t\t\t} else {\n\t\t\t\tconst reader = child.reader = new child.Reader(child.data);\n\t\t\t\tawait initStream(reader);\n\t\t\t\tchild.uncompressedSize = reader.size;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction detach(entry) {\n\tconst children = entry.parent.children;\n\tchildren.forEach((child, index) => {\n\t\tif (child.id == entry.id) {\n\t\t\tchildren.splice(index, 1);\n\t\t}\n\t});\n}\n\nasync function exportZip(zipWriter, entry, totalSize, options) {\n\tconst selectedEntry = entry;\n\tconst entryOffsets = new Map();\n\tawait process(zipWriter, entry);\n\n\tasync function process(zipWriter, entry) {\n\t\tawait exportChild();\n\n\t\tasync function exportChild() {\n\t\t\tif (options.bufferedWrite) {\n\t\t\t\tawait Promise.all(entry.children.map(processChild));\n\t\t\t} else {\n\t\t\t\tfor (const child of entry.children) {\n\t\t\t\t\tawait processChild(child);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync function processChild(child) {\n\t\t\tconst name = options.relativePath ? child.getRelativeName(selectedEntry) : child.getFullname();\n\t\t\tawait zipWriter.add(name, child.reader, Object.assign({\n\t\t\t\tdirectory: child.directory\n\t\t\t}, Object.assign({}, options, {\n\t\t\t\tonprogress: async indexProgress => {\n\t\t\t\t\tif (options.onprogress) {\n\t\t\t\t\t\tentryOffsets.set(name, indexProgress);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait options.onprogress(Array.from(entryOffsets.values()).reduce((previousValue, currentValue) => previousValue + currentValue), totalSize);\n\t\t\t\t\t\t} catch (_error) {\n\t\t\t\t\t\t\t// ignored\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})));\n\t\t\tawait process(zipWriter, child);\n\t\t}\n\t}\n}\n\nasync function addFileSystemEntry(zipEntry, fileSystemEntry) {\n\tif (fileSystemEntry.isDirectory) {\n\t\tconst entry = zipEntry.addDirectory(fileSystemEntry.name);\n\t\tawait addDirectory(entry, fileSystemEntry);\n\t\treturn entry;\n\t} else {\n\t\treturn new Promise((resolve, reject) => fileSystemEntry.file(file => resolve(zipEntry.addBlob(fileSystemEntry.name, file)), reject));\n\t}\n\n\tasync function addDirectory(zipEntry, fileEntry) {\n\t\tconst children = await getChildren(fileEntry);\n\t\tfor (const child of children) {\n\t\t\tif (child.isDirectory) {\n\t\t\t\tawait addDirectory(zipEntry.addDirectory(child.name), child);\n\t\t\t} else {\n\t\t\t\tawait new Promise((resolve, reject) => {\n\t\t\t\t\tchild.file(file => {\n\t\t\t\t\t\tconst childZipEntry = zipEntry.addBlob(child.name, file);\n\t\t\t\t\t\tchildZipEntry.uncompressedSize = file.size;\n\t\t\t\t\t\tresolve(childZipEntry);\n\t\t\t\t\t}, reject);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getChildren(fileEntry) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet entries = [];\n\t\t\tif (fileEntry.isDirectory) {\n\t\t\t\treadEntries(fileEntry.createReader());\n\t\t\t}\n\t\t\tif (fileEntry.isFile) {\n\t\t\t\tresolve(entries);\n\t\t\t}\n\n\t\t\tfunction readEntries(directoryReader) {\n\t\t\t\tdirectoryReader.readEntries(temporaryEntries => {\n\t\t\t\t\tif (!temporaryEntries.length) {\n\t\t\t\t\t\tresolve(entries);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentries = entries.concat(temporaryEntries);\n\t\t\t\t\t\treadEntries(directoryReader);\n\t\t\t\t\t}\n\t\t\t\t}, reject);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction resetFS(fs) {\n\tfs.entries = [];\n\tfs.root = new ZipDirectoryEntry(fs);\n}\n\nfunction addChild(parent, name, params, directory) {\n\tif (parent.directory) {\n\t\treturn directory ? new ZipDirectoryEntry(parent.fs, name, params, parent) : new ZipFileEntry(parent.fs, name, params, parent);\n\t} else {\n\t\tthrow new Error(\"Parent entry is not a directory\");\n\t}\n}","/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { configure } from \"./core/configuration.js\";\nimport { configureWebWorker } from \"./z-worker-inline.js\";\nimport { getMimeType } from \"./core/util/default-mime-type.js\";\nimport { initShimAsyncCodec } from \"./core/util/stream-codec-shim.js\";\nimport { terminateWorkers } from \"./core/codec-pool.js\";\n\nlet baseURL;\ntry {\n\tbaseURL = import.meta.url;\n} catch (_error) {\n\t// ignored\n}\nconfigure({ baseURL });\nconfigureWebWorker(configure);\n\nexport * from \"./core/io.js\";\nexport * from \"./core/zip-reader.js\";\nexport * from \"./core/zip-writer.js\";\nexport * from \"./core/zip-fs-core.js\";\nexport {\n\tconfigure,\n\tgetMimeType,\n\tinitShimAsyncCodec,\n\tterminateWorkers\n};","/// <reference types=\"./index.d.ts\" />\n\n/*\n Copyright (c) 2022 Gildas Lormeau. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright \n notice, this list of conditions and the following disclaimer in \n the documentation and/or other materials provided with the distribution.\n\n 3. The names of the authors may not be used to endorse or promote products\n derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED ''AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\n INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\n INC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\n OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nimport { Deflate } from \"./lib/core/streams/codecs/deflate.js\";\nimport { Inflate } from \"./lib/core/streams/codecs/inflate.js\";\nimport { configure } from \"./lib/core/configuration.js\";\nimport { getMimeType } from \"./lib/core/util/mime-type.js\";\nimport { terminateWorkers } from \"./lib/core/codec-pool.js\";\n\nconfigure({ Deflate, Inflate });\n\nexport {\n\tfs,\n\tconfigure,\n\tinitShimAsyncCodec,\n\tZipReader,\n\tZipWriter,\n\tReader,\n\tWriter,\n\tTextReader,\n\tTextWriter,\n\tData64URIReader,\n\tData64URIWriter,\n\tBlobReader,\n\tBlobWriter,\n\tHttpReader,\n\tHttpRangeReader,\n\tUint8ArrayWriter,\n\tUint8ArrayReader,\n\tSplitZipReader,\n\tSplitZipWriter,\n\tSplitDataReader,\n\tSplitDataWriter,\n\tERR_HTTP_RANGE,\n\tERR_BAD_FORMAT,\n\tERR_EOCDR_NOT_FOUND,\n\tERR_EOCDR_ZIP64_NOT_FOUND,\n\tERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND,\n\tERR_CENTRAL_DIRECTORY_NOT_FOUND,\n\tERR_LOCAL_FILE_HEADER_NOT_FOUND,\n\tERR_EXTRAFIELD_ZIP64_NOT_FOUND,\n\tERR_ENCRYPTED,\n\tERR_UNSUPPORTED_ENCRYPTION,\n\tERR_UNSUPPORTED_COMPRESSION,\n\tERR_INVALID_SIGNATURE,\n\tERR_INVALID_PASSWORD,\n\tERR_DUPLICATED_NAME,\n\tERR_INVALID_COMMENT,\n\tERR_INVALID_ENTRY_NAME,\n\tERR_INVALID_ENTRY_COMMENT,\n\tERR_INVALID_VERSION,\n\tERR_INVALID_EXTRAFIELD_TYPE,\n\tERR_INVALID_EXTRAFIELD_DATA,\n\tERR_INVALID_ENCRYPTION_STRENGTH,\n\tERR_UNSUPPORTED_FORMAT,\n\tERR_SPLIT_ZIP_FILE,\n\tERR_ITERATOR_COMPLETED_TOO_SOON\n} from \"./lib/zip-fs.js\";\nexport { getMimeType, terminateWorkers };","import {\r\n  BlobReader,\r\n  TextWriter,\r\n  ZipReader,\r\n} from \"../../node_modules/@zip.js/zip.js/index.js\";\r\n\r\nconst getZip = async(blob) => {\r\n  const zipFileBlob = blob;\r\n\r\n  // ----\r\n  // Read the zip file\r\n  // ----\r\n\r\n  // Creates a BlobReader object used to read `zipFileBlob`.\r\n  const zipFileReader = new BlobReader(zipFileBlob);\r\n  // Creates a TextWriter object where the content of the first entry in the zip\r\n  // will be written.\r\n  const unzippedTextWriter = new TextWriter();\r\n\r\n  // Creates a ZipReader object reading the zip content via `zipFileReader`,\r\n  // retrieves metadata (name, dates, etc.) of the first entry, retrieves its\r\n  // content via `helloWorldWriter`, and closes the reader.\r\n  const zipReader = new ZipReader(zipFileReader);\r\n\r\n  \r\n  const firstEntry = (await zipReader.getEntries()).shift();\r\n\r\n  let fileSize = (firstEntry.uncompressedSize);\r\n  let unzippedText = await firstEntry.getData(unzippedTextWriter);\r\n  await zipReader.close();\r\n\r\n  return {\r\n    unzippedText,\r\n    fileSize\r\n  }\r\n}\r\n\r\nexport { getZip }","import { HOME } from './modules/home.js';\r\nimport { INFO } from './modules/info.js';\r\nimport { UTIL } from './modules/utilities.js';\r\nimport { getZip } from './modules/zipreader.js';\r\n\r\nconst DOM = {\r\n\thome: document.getElementsByClassName(\"home\")[0],\r\n\tinfo: document.getElementsByClassName(\"info\")[0],\r\n\thomeUpload: document.getElementsByClassName(\"home__upload\")[0],\r\n\thomeExamples: document.getElementsByClassName(\"home__examples\")[0],\r\n\r\n\treadGpxBtn: document.getElementsByClassName(\"upload__button\")[0],\r\n\tuploadInput: document.getElementsByClassName(\"upload__input\")[0],\r\n\tstatisticsObject: document.getElementsByClassName(\"stats\")[0],\r\n\tuploadText: document.getElementsByClassName(\"upload__text\")[0],\r\n\tuploadUndertext: document.getElementsByClassName(\"upload__undertext\")[0],\r\n\tuploadError: document.getElementsByClassName(\"upload__error\")[0],\r\n\tuploadErrorHint: document.getElementsByClassName(\"upload__error-hint\")[0],\r\n\tfile_1: document.getElementsByClassName(\"examples__tile-1\")[0],\r\n\tfile_2: document.getElementsByClassName(\"examples__tile-2\")[0],\r\n\tfile_3: document.getElementsByClassName(\"examples__tile-3\")[0],\r\n\r\n\tstatsTable: document.getElementsByClassName(\"stats__table\")[0],\r\n};\r\n\r\nconst APP = (function () {\r\n\t// Variables\r\n\tconst stopTime = 10; // Time interval [s] when we consider user stopped.\r\n\tconst stopSpeed = 0.3; // Slowest speed [m/s] considered a movement.\r\n\tconst numberSmoothing = 3;\r\n\tconst maxFileSize = 1e6;\r\n\tconst gradientBoundaries = [ -3, 1.5, 6 ];\r\n\tlet gpxFile;\r\n\tlet gpxFileContent;\r\n\tlet gpxFileSize;\r\n\tlet gpxText;\r\n\tlet parser;\r\n\tlet isUploadValid = false;\r\n\tlet stats;\t\r\n\r\n\r\n\tUTIL.StateManager.getStateManager(); // Initialization.\r\n\tUTIL.StateManager.storeDom( 'home_baseState', DOM );\r\n\tHOME.createStates();\r\n\tconsole.log(UTIL.storedStates);\r\n\r\n\t//Here we prevent unwanted behaviour before loading the DOM:\r\n\tdocument.addEventListener(\"DOMContentLoaded\", () => {\r\n\t\tconsole.log('DOM loaded.');\r\n\t\tDOM.home.classList.remove(\"no-click\");\r\n\t\t// UTIL.StateManager.setState('home_domContentLoaded');\t\t\r\n\t});\t\r\n\r\n\t// UTIL.StateManager.setState('home_domContentLoaded');\r\n\tHOME.init();\r\n\t\r\n\t\t\r\n\tconst validateUpload = () => {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tDOM.uploadInput.addEventListener('change', checkUpload, false);\r\n\t\t\tDOM.uploadUndertext.addEventListener('click', displayHint, false);\r\n\t\t\tDOM.file_1.addEventListener('click', loadFile, false);\r\n\t\t\tDOM.file_2.addEventListener('click', loadFile, false);\r\n\t\t\tDOM.file_3.addEventListener('click', loadFile, false);\r\n\r\n\t\t\tfunction checkUpload(event) {\r\n\r\n\t\t\t\tconsole.log('Upload is being validated.');\r\n\t\t\t\t\r\n\t\t\t\tgpxFile = event.target.files[0];\r\n\r\n\t\t\t\tconst extension = gpxFile.name.split('.')[1];\r\n\t\t\t\t\r\n\t\t\t\tif (extension != 'gpx') {\r\n\r\n\t\t\t\t\t// On wrong extension do that:\r\n\t\t\t\t\tisUploadValid = false;\r\n\t\t\t\t\tUTIL.StateManager.setState('home_uploadError');\r\n\r\n\t\t\t\t\tsetTimeout(() => {\t\t\t\t\t\r\n\t\t\t\t\t\tdisplayHint();\r\n\t\t\t\t\t}, 3000);\r\n\r\n\t\t\t\t\treject( Error('This tool accepts only .gpx files.' ));\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tisUploadValid = true;\r\n\t\t\t\t\tconsole.log('File is valid.');\r\n\t\t\t\t\tconst reader = new FileReader();\r\n\t\t\t\t\tgpxFileSize = gpxFile.size;\r\n\r\n\t\t\t\t\tif (gpxFile) {\r\n\t\t\t\t\t\treader.readAsText(gpxFile);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treader.addEventListener(\"load\", () => {\r\n\t\t\t\t\t\t// this will then display a text file\r\n\t\t\t\t\t\t// console.log(reader.result);\r\n\t\t\t\t\t\tgpxFileContent = reader.result;\r\n\t\t\t\t\t\tresolve( 'File is valid.' );\r\n\t\t\t\t\t}, false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfunction displayHint() { UTIL.StateManager.setState('home_uploadErrorHint') }\r\n\r\n\t\t\tasync function loadFile(event) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tgpxFile = (event.target.href);\r\n\t\t\t\tconst response = await fetch(event.target.href);\r\n\t\t\t\tconst zippedBlob = await response.blob();\r\n\t\t\t\tconst unzippedBlob = await getZip(zippedBlob);\r\n\t\t\t\tgpxFileContent = unzippedBlob.unzippedText;\r\n\t\t\t\tgpxFileSize = unzippedBlob.fileSize;\r\n\r\n\t\t\t\tconsole.log(gpxFileContent);\r\n\t\t\t\tconsole.log(gpxFileSize);\r\n\t\t\t\tresolve( 'File is valid.' );\r\n\t\t\t}\r\n\r\n\t\t}, isUploadValid)\r\n\t}\r\n\r\n\tvalidateUpload()\r\n\t\t.then (() => {\r\n\t\t\tconsole.log(gpxFileSize);\r\n\t\t\tHOME.processGpx(gpxFileContent, gpxFileSize);\r\n\t\t\tINFO.initMap()\r\n\t\t\tlocalStorage.clear();\r\n\t\t\t// And optionally, display a loading screen in the meantime.\r\n\t\t})\r\n\t\t.then (() => {\r\n\t\t\tINFO.createPolyline(HOME.trackPointObjects);\r\n\t\t\tstats = INFO.calculateStats(HOME.trackPointObjects, gpxFileSize );\r\n\t\t\tUTIL.StateManager.setState('info_baseState');\r\n\t\t})\r\n\t\t.then(() => {\r\n\t\t\tINFO.setupMap();\r\n\t\t})\r\n\t\t.then(() => {\r\n\t\t\tINFO.addMapTiles();\r\n\t\t\tINFO.displayAllStats(stats);\r\n\t\t\tconsole.log('displaying charts')\r\n\t\t\tINFO.prepareElevationGraph( HOME.trackPointObjects, 30 );\r\n\t\t\tINFO.prepareSpeedGraph( HOME.trackPointObjects, 30 );\r\n\t\t\tINFO.prepareGradientsGraph( HOME.trackPointObjects);\r\n\t\t})\r\n\t\t.then(() => {\r\n\t\t})\r\n\r\n\t/*\r\n\t// create a stateManager utility, store homeBaseState properties (mostly none).\r\n\r\n\tif we get a valid upload, or one of the examples was clicked,\r\n\t\tprocess data and switch to INFO screen.\r\n\telse if undertext is clicked, change state to selectExample.\r\n\telse if we get an invalid input extension, change state to errorInvalid.\r\n\telse if upload was cancelled, change state to errorCancelled.\r\n\r\n\thandleSwitch: change state to infoBaseState.\r\n\tif weightInfo was filled, process data and change state to infoWeightSubmitted (?).\r\n\tif anotherFile button was clicked, use stateManager to restore all variables to default\r\n\t\tand switch to HOME screen.\r\n\r\n\t*/\r\n\r\n\tfunction displayPerformance() {\r\n\t\t// Calculate statistics here\r\n\t};\r\n\r\n\treturn { \r\n\t\tgpxFile, \r\n\t\tgpxText, \r\n\t\tparser, \r\n\t\tstopTime, \r\n\t\tstopSpeed, \r\n\t\tmaxFileSize, \r\n\t\tgpxFileSize, \r\n\t\tnumberSmoothing, \r\n\t\tgradientBoundaries \r\n\t};\r\n})();\r\n\r\nexport { DOM, APP };","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}